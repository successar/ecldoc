{
    "input_root": "/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles",
    "output_root": "/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles-docs",
    "tree": {
        "linearregression": {
            "key": "LinearRegression",
            "tree": {
                "bundle": {
                    "key": "bundle.ecl",
                    "tree": "LinearRegression/Bundle.ecl"
                },
                "ols": {
                    "key": "OLS.ecl",
                    "tree": "LinearRegression/OLS.ecl"
                }
            }
        },
        "logisticregression": {
            "key": "LogisticRegression",
            "tree": {
                "binomialconfusion": {
                    "key": "BinomialConfusion.ecl",
                    "tree": "LogisticRegression/BinomialConfusion.ecl"
                },
                "binomiallogisticregression": {
                    "key": "BinomialLogisticRegression.ecl",
                    "tree": "LogisticRegression/BinomialLogisticRegression.ecl"
                },
                "bundle": {
                    "key": "bundle.ecl",
                    "tree": "LogisticRegression/Bundle.ecl"
                },
                "confusion": {
                    "key": "Confusion.ecl",
                    "tree": "LogisticRegression/Confusion.ecl"
                },
                "constants": {
                    "key": "Constants.ecl",
                    "tree": "LogisticRegression/Constants.ecl"
                },
                "datastats": {
                    "key": "DataStats.ecl",
                    "tree": "LogisticRegression/DataStats.ecl"
                },
                "deviance_analysis": {
                    "key": "Deviance_Analysis.ecl",
                    "tree": "LogisticRegression/Deviance_Analysis.ecl"
                },
                "deviance_detail": {
                    "key": "Deviance_Detail.ecl",
                    "tree": "LogisticRegression/Deviance_Detail.ecl"
                },
                "dimm": {
                    "key": "dimm.ecl",
                    "tree": "LogisticRegression/dimm.ecl"
                },
                "distributions": {
                    "key": "Distributions.ecl",
                    "tree": "LogisticRegression/Distributions.ecl"
                },
                "extractbeta": {
                    "key": "ExtractBeta.ecl",
                    "tree": "LogisticRegression/ExtractBeta.ecl"
                },
                "extractbeta_ci": {
                    "key": "ExtractBeta_CI.ecl",
                    "tree": "LogisticRegression/ExtractBeta_CI.ecl"
                },
                "extractbeta_pval": {
                    "key": "ExtractBeta_pval.ecl",
                    "tree": "LogisticRegression/ExtractBeta_pval.ecl"
                },
                "extractreport": {
                    "key": "ExtractReport.ecl",
                    "tree": "LogisticRegression/ExtractReport.ecl"
                },
                "irls": {
                    "key": "IRLS",
                    "tree": {
                        "getmodel": {
                            "key": "GetModel.ecl",
                            "tree": "LogisticRegression/IRLS/GetModel.ecl"
                        },
                        "getmodel_global": {
                            "key": "GetModel_global.ecl",
                            "tree": "LogisticRegression/IRLS/GetModel_global.ecl"
                        },
                        "getmodel_local": {
                            "key": "GetModel_local.ecl",
                            "tree": "LogisticRegression/IRLS/GetModel_local.ecl"
                        }
                    }
                },
                "logitpredict": {
                    "key": "LogitPredict.ecl",
                    "tree": "LogisticRegression/LogitPredict.ecl"
                },
                "logitscore": {
                    "key": "LogitScore.ecl",
                    "tree": "LogisticRegression/LogitScore.ecl"
                },
                "model_deviance": {
                    "key": "Model_Deviance.ecl",
                    "tree": "LogisticRegression/Model_Deviance.ecl"
                },
                "null_deviance": {
                    "key": "Null_Deviance.ecl",
                    "tree": "LogisticRegression/Null_Deviance.ecl"
                },
                "performance": {
                    "key": "performance",
                    "tree": {
                        "runbinomial": {
                            "key": "RunBinomial.ecl",
                            "tree": "LogisticRegression/performance/RunBinomial.ecl"
                        }
                    }
                },
                "tests": {
                    "key": "Tests",
                    "tree": {
                        "check_dist": {
                            "key": "Check_Dist.ecl",
                            "tree": "LogisticRegression/Tests/Check_Dist.ecl"
                        }
                    }
                },
                "types": {
                    "key": "Types.ecl",
                    "tree": "LogisticRegression/Types.ecl"
                },
                "validation": {
                    "key": "validation",
                    "tree": {
                        "binomialregression": {
                            "key": "BinomialRegression.ecl",
                            "tree": "LogisticRegression/validation/BinomialRegression.ecl"
                        },
                        "discrete_germands": {
                            "key": "discrete_GermanDS.ecl",
                            "tree": "LogisticRegression/validation/discrete_GermanDS.ecl"
                        },
                        "irisds": {
                            "key": "IrisDS.ecl",
                            "tree": "LogisticRegression/validation/IrisDS.ecl"
                        },
                        "unit_test_dimm": {
                            "key": "unit_test_dimm.ecl",
                            "tree": "LogisticRegression/validation/unit_test_dimm.ecl"
                        }
                    }
                }
            }
        },
        "ml_core": {
            "key": "ML_Core",
            "tree": {
                "appendid": {
                    "key": "AppendID.ecl",
                    "tree": "ML_Core/AppendID.ecl"
                },
                "appendseqid": {
                    "key": "AppendSeqID.ecl",
                    "tree": "ML_Core/AppendSeqID.ecl"
                },
                "bundle": {
                    "key": "bundle.ecl",
                    "tree": "ML_Core/Bundle.ecl"
                },
                "config": {
                    "key": "Config.ecl",
                    "tree": "ML_Core/Config.ecl"
                },
                "constants": {
                    "key": "Constants.ecl",
                    "tree": "ML_Core/Constants.ecl"
                },
                "fieldaggregates": {
                    "key": "FieldAggregates.ecl",
                    "tree": "ML_Core/FieldAggregates.ecl"
                },
                "fromfield": {
                    "key": "FromField.ecl",
                    "tree": "ML_Core/FromField.ecl"
                },
                "generate": {
                    "key": "Generate.ecl",
                    "tree": "ML_Core/Generate.ecl"
                },
                "interfaces": {
                    "key": "Interfaces",
                    "tree": {
                        "iclassify": {
                            "key": "IClassify.ecl",
                            "tree": "ML_Core/Interfaces/IClassify.ecl"
                        },
                        "iregression": {
                            "key": "IRegression.ecl",
                            "tree": "ML_Core/Interfaces/IRegression.ecl"
                        }
                    }
                },
                "math": {
                    "key": "Math",
                    "tree": {
                        "beta": {
                            "key": "Beta.ecl",
                            "tree": "ML_Core/Math/Beta.ecl"
                        },
                        "distributions": {
                            "key": "Distributions.ecl",
                            "tree": "ML_Core/Math/Distributions.ecl"
                        },
                        "doublefac": {
                            "key": "DoubleFac.ecl",
                            "tree": "ML_Core/Math/DoubleFac.ecl"
                        },
                        "fac": {
                            "key": "Fac.ecl",
                            "tree": "ML_Core/Math/Fac.ecl"
                        },
                        "gamma": {
                            "key": "gamma.ecl",
                            "tree": "ML_Core/Math/gamma.ecl"
                        },
                        "log_gamma": {
                            "key": "log_gamma.ecl",
                            "tree": "ML_Core/Math/log_gamma.ecl"
                        },
                        "lowergamma": {
                            "key": "lowerGamma.ecl",
                            "tree": "ML_Core/Math/lowerGamma.ecl"
                        },
                        "nck": {
                            "key": "NCK.ecl",
                            "tree": "ML_Core/Math/NCK.ecl"
                        },
                        "poly": {
                            "key": "Poly.ecl",
                            "tree": "ML_Core/Math/Poly.ecl"
                        },
                        "stirlingformula": {
                            "key": "StirlingFormula.ecl",
                            "tree": "ML_Core/Math/StirlingFormula.ecl"
                        },
                        "uppergamma": {
                            "key": "upperGamma.ecl",
                            "tree": "ML_Core/Math/upperGamma.ecl"
                        }
                    }
                },
                "tests": {
                    "key": "Tests",
                    "tree": {
                        "check_dist": {
                            "key": "Check_Dist.ecl",
                            "tree": "ML_Core/Tests/Check_Dist.ecl"
                        },
                        "field_aggregates": {
                            "key": "field_aggregates.ecl",
                            "tree": "ML_Core/Tests/field_aggregates.ecl"
                        },
                        "generate": {
                            "key": "generate.ecl",
                            "tree": "ML_Core/Tests/generate.ecl"
                        },
                        "test_appends": {
                            "key": "test_appends.ecl",
                            "tree": "ML_Core/Tests/test_appends.ecl"
                        },
                        "test_discrete": {
                            "key": "test_discrete.ecl",
                            "tree": "ML_Core/Tests/test_discrete.ecl"
                        },
                        "to_from": {
                            "key": "to_from.ecl",
                            "tree": "ML_Core/Tests/to_from.ecl"
                        },
                        "validate_betas": {
                            "key": "Validate_Betas.ecl",
                            "tree": "ML_Core/Tests/Validate_Betas.ecl"
                        },
                        "validate_gammas": {
                            "key": "Validate_Gammas.ecl",
                            "tree": "ML_Core/Tests/Validate_Gammas.ecl"
                        }
                    }
                },
                "tofield": {
                    "key": "ToField.ecl",
                    "tree": "ML_Core/ToField.ecl"
                },
                "types": {
                    "key": "Types.ecl",
                    "tree": "ML_Core/Types.ecl"
                },
                "utils": {
                    "key": "Utils",
                    "tree": {
                        "fat": {
                            "key": "Fat.ecl",
                            "tree": "ML_Core/Utils/Fat.ecl"
                        },
                        "fatd": {
                            "key": "FatD.ecl",
                            "tree": "ML_Core/Utils/FatD.ecl"
                        },
                        "gini": {
                            "key": "Gini.ecl",
                            "tree": "ML_Core/Utils/Gini.ecl"
                        },
                        "sequenceinfield": {
                            "key": "SequenceInField.ecl",
                            "tree": "ML_Core/Utils/SequenceInField.ecl"
                        }
                    }
                }
            }
        },
        "pbblas": {
            "key": "PBblas",
            "tree": {
                "apply2elements": {
                    "key": "Apply2Elements.ecl",
                    "tree": "PBblas/Apply2Elements.ecl"
                },
                "asum": {
                    "key": "asum.ecl",
                    "tree": "PBblas/asum.ecl"
                },
                "axpy": {
                    "key": "axpy.ecl",
                    "tree": "PBblas/axpy.ecl"
                },
                "bundle": {
                    "key": "bundle.ecl",
                    "tree": "PBblas/Bundle.ecl"
                },
                "constants": {
                    "key": "Constants.ecl",
                    "tree": "PBblas/Constants.ecl"
                },
                "converted": {
                    "key": "Converted.ecl",
                    "tree": "PBblas/Converted.ecl"
                },
                "extracttri": {
                    "key": "ExtractTri.ecl",
                    "tree": "PBblas/ExtractTri.ecl"
                },
                "gemm": {
                    "key": "gemm.ecl",
                    "tree": "PBblas/gemm.ecl"
                },
                "getrf": {
                    "key": "getrf.ecl",
                    "tree": "PBblas/getrf.ecl"
                },
                "hadamardproduct": {
                    "key": "HadamardProduct.ecl",
                    "tree": "PBblas/HadamardProduct.ecl"
                },
                "ielementfunc": {
                    "key": "IElementFunc.ecl",
                    "tree": "PBblas/IElementFunc.ecl"
                },
                "matutils": {
                    "key": "MatUtils.ecl",
                    "tree": "PBblas/MatUtils.ecl"
                },
                "potrf": {
                    "key": "potrf.ecl",
                    "tree": "PBblas/potrf.ecl"
                },
                "scal": {
                    "key": "scal.ecl",
                    "tree": "PBblas/scal.ecl"
                },
                "tran": {
                    "key": "tran.ecl",
                    "tree": "PBblas/tran.ecl"
                },
                "trsm": {
                    "key": "trsm.ecl",
                    "tree": "PBblas/trsm.ecl"
                },
                "types": {
                    "key": "Types.ecl",
                    "tree": "PBblas/Types.ecl"
                },
                "vector2diag": {
                    "key": "Vector2Diag.ecl",
                    "tree": "PBblas/Vector2Diag.ecl"
                }
            }
        }
    }
}