<?xml version='1.0' encoding='UTF-8'?>
<Meta>
 <Source name="PBblas.trsm" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/trsm.ecl" target="trsm.ecl.xml">
  <Import body="0" end="251" fullname="PBblas" inherit_type="local" line="5" name="PBblas" ref="PBblas" start="251" target="pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="271" fullname="PBblas.Types" inherit_type="local" line="6" name="Types" ref="PBblas.Types" start="271" target="Types.ecl.xml">
   <Type>attribute</Type>
   <Documentation>
    <firstline>Types for the Parallel Block Basic Linear Algebra Sub-programs support WARNING: attributes marked with WARNING can not be changed without making corresponding changes to the C++ attributes</firstline><content>Types for the Parallel Block Basic Linear Algebra Sub-programs support WARNING: attributes marked with WARNING can not be changed without making corresponding changes to the C++ attributes.</content></Documentation>
  </Import>
  <Import body="0" end="292" fullname="std.BLAS" inherit_type="local" line="7" name="BLAS" ref="std.BLAS" start="292" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="309" fullname="PBblas.internal" inherit_type="local" line="8" name="int" ref="PBblas.internal" remotescope="1" start="309" target="internal/pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="340" fullname="PBblas.internal.Types" inherit_type="local" line="9" name="iTypes" ref="PBblas.internal.Types" start="340" target="internal/Types.ecl.xml">
   <Type>attribute</Type>
   <Documentation>
    <firstline>Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support WARNING: attributes marked with WARNING can not be changed without making corresponding changes to the C++ attributes</firstline><content>Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support WARNING: attributes marked with WARNING can not be changed without making corresponding changes to the C++ attributes.</content></Documentation>
  </Import>
  <Import body="0" end="368" fullname="PBblas.internal.MatDims" inherit_type="local" line="10" name="MatDims" ref="PBblas.internal.MatDims" start="368" target="internal/MatDims.ecl.xml">
   <Type>attribute</Type>
   <Documentation>
    <firstline>Module to calculate matrix dimensions and matrix partition dimensions from matrix cells</firstline><content>Module to calculate matrix dimensions and matrix partition dimensions from matrix cells.</content></Documentation>
  </Import>
  <Import body="0" end="388" fullname="PBblas.internal.Converted" inherit_type="local" line="11" name="Converted" ref="PBblas.internal.Converted" start="388" target="internal/Converted.ecl.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="410" fullname="std.system.Thorlib" inherit_type="local" line="12" name="Thorlib" ref="std.system.Thorlib" start="410" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl">
   <Type>attribute</Type>
  </Import>
  <Definition body="3422" end="18081" exported="1" fullname="pbblas.trsm" inherit_type="local" line="68" name="trsm" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/trsm.ecl" start="3213">
   <Type>function</Type>
   <Documentation>
    <return>X solution matrix in Layout_Cell format</return><firstline>Partitioned block parallel triangular matrix solver</firstline><param><name>s</name><desc>Types.Side enumeration indicating whether we are solving AX = B or XA = B</desc></param><param><name>tri</name><desc>Types.Triangle enumeration indicating whether we are solving an Upper or Lower triangle.</desc></param><param><name>transposeA</name><desc>Boolean indicating whether or not to transpose the A matrix before solving</desc></param><param><name>diag</name><desc>Types.Diagonal enumeration indicating whether A is a unit matrix or not. This is primarily used after factoring matrixes using getrf (LU factorization). That module produces a factored matrix stored within the same space as the original matrix. Since the diagonal is used by both factors, by convention, the Lower triangle has a unit matrix (diagonal all 1's) while the Upper triangle uses the diagonal cells. Setting this to UnitTri, causes the contents of the diagonal to be ignored, and assumed to be 1. NotUnitTri should be used for most other cases.</desc></param><param><name>alpha</name><desc>Multiplier to scale A</desc></param><param><name>A_in</name><desc>The A matrix in Layout_Cell format</desc></param><param><name>B_in</name><desc>The B matrix in Layout_Cell format</desc></param><see>Types.Layout_Cell</see><see>Types.Triangle</see><see>Types.Side</see><content>Partitioned block parallel triangular matrix solver. Solves for X using: AX = B or XA = B A is is a square triangular matrix, X and B have the same dimensions. A may be an upper triangular matrix (UX = B or XU = B), or a lower triangular matrix (LX = B or XL = B). Allows optional transposing and scaling of A. Partially based upon an approach discussed by MJ DAYDE, IS DUFF, AP CERFACS. A Parallel Block implementation of Level-3 BLAS for MIMD Vector Processors ACM Tran. Mathematical Software, Vol 20, No 2, June 1994 pp 178-193 and other papers about PB-BLAS by Choi and Dongarra This module supports the "Myriad" style interface, allowing many independent problems to be worked on at once. Corresponding A and B matrixes are related by a common work-item identifier (wi_id) within each cell of the matrix. The returned X matrix will contain cells for the same set of work-items as specified for the A and B matrices.</content></Documentation>
   <Signature sign="DATASET(Layout_Cell) trsm(Side s, Triangle tri, BOOLEAN transposeA, Diagonal diag, value_t alpha, DATASET(Layout_Cell) A_in, DATASET(Layout_Cell) B_in)" name="trsm">DATASET(Layout_Cell) trsm(Side s, Triangle tri, BOOLEAN transposeA, Diagonal diag, value_t alpha, DATASET(Layout_Cell) A_in, DATASET(Layout_Cell) B_in)</Signature><Params>
    <Param name="s"/>
    <Param name="tri"/>
    <Param name="transposeA"/>
    <Param name="diag"/>
    <Param name="alpha"/>
    <Param name="A_in"/>
    <Param name="B_in"/>
   </Params>
  </Definition>
 <Documentation>
    <return>X solution matrix in Layout_Cell format</return><firstline>Partitioned block parallel triangular matrix solver</firstline><param><name>s</name><desc>Types.Side enumeration indicating whether we are solving AX = B or XA = B</desc></param><param><name>tri</name><desc>Types.Triangle enumeration indicating whether we are solving an Upper or Lower triangle.</desc></param><param><name>transposeA</name><desc>Boolean indicating whether or not to transpose the A matrix before solving</desc></param><param><name>diag</name><desc>Types.Diagonal enumeration indicating whether A is a unit matrix or not. This is primarily used after factoring matrixes using getrf (LU factorization). That module produces a factored matrix stored within the same space as the original matrix. Since the diagonal is used by both factors, by convention, the Lower triangle has a unit matrix (diagonal all 1's) while the Upper triangle uses the diagonal cells. Setting this to UnitTri, causes the contents of the diagonal to be ignored, and assumed to be 1. NotUnitTri should be used for most other cases.</desc></param><param><name>alpha</name><desc>Multiplier to scale A</desc></param><param><name>A_in</name><desc>The A matrix in Layout_Cell format</desc></param><param><name>B_in</name><desc>The B matrix in Layout_Cell format</desc></param><see>Types.Layout_Cell</see><see>Types.Triangle</see><see>Types.Side</see><content>Partitioned block parallel triangular matrix solver. Solves for X using: AX = B or XA = B A is is a square triangular matrix, X and B have the same dimensions. A may be an upper triangular matrix (UX = B or XU = B), or a lower triangular matrix (LX = B or XL = B). Allows optional transposing and scaling of A. Partially based upon an approach discussed by MJ DAYDE, IS DUFF, AP CERFACS. A Parallel Block implementation of Level-3 BLAS for MIMD Vector Processors ACM Tran. Mathematical Software, Vol 20, No 2, June 1994 pp 178-193 and other papers about PB-BLAS by Choi and Dongarra This module supports the "Myriad" style interface, allowing many independent problems to be worked on at once. Corresponding A and B matrixes are related by a common work-item identifier (wi_id) within each cell of the matrix. The returned X matrix will contain cells for the same set of work-items as specified for the A and B matrices.</content></Documentation>
   </Source>
 <Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl" name="PBblas.Types" target="Types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl" name="ML_Core.Types" target="../ML_Core/Types.ecl.xml"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl" name="std.BLAS" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/plugins/lib_eclblas.ecllib" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/plugins/lib_eclblas.ecllib"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl" name="PBblas.internal.Types" target="internal/Types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl" name="PBblas.internal.MatDims" target="internal/MatDims.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl" name="PBblas.internal.BlockDimensions" target="internal/BlockDimensions.ecl.xml"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl" name="std.system.Thorlib" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl" name="PBblas.internal.BlockDimensionsMultiply" target="internal/BlockDimensionsMultiply.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl" name="PBblas.internal.BlockDimensionsSolve" target="internal/BlockDimensionsSolve.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MakeR8Set.ecl" name="PBblas.internal.MakeR8Set" target="internal/MakeR8Set.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Converted.ecl" name="PBblas.internal.Converted" target="internal/Converted.ecl.xml"/></Meta>