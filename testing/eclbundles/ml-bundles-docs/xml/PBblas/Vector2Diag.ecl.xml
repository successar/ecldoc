<?xml version='1.0' encoding='UTF-8'?>
<Meta>
 <Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl" name="ML_Core.Types" target="../ML_Core/Types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl" name="PBblas.Types" target="Types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl" name="PBblas.internal.Types" target="internal/Types.ecl.xml"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl" name="std.system.Thorlib" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl" name="PBblas.internal.BlockDimensions" target="internal/BlockDimensions.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl" name="PBblas.internal.BlockDimensionsMultiply" target="internal/BlockDimensionsMultiply.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl" name="PBblas.internal.BlockDimensionsSolve" target="internal/BlockDimensionsSolve.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl" name="PBblas.internal.MatDims" target="internal/MatDims.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl" name="PBblas.Constants" target="Constants.ecl.xml"/><Source name="PBblas.Vector2Diag" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Vector2Diag.ecl" target="Vector2Diag.ecl.xml">
  <Import name="PBblas" ref="PBblas" target="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles-docs/$$_ECLDOC-FORM_$$/PBblas/pkg.toc.xml"/>
  <Import name="int" ref="PBblas.internal" remotescope="1" target="internal/pkg.toc.xml"/>
  <Import name="MatDims" ref="PBblas.internal.MatDims" target="internal/MatDims.ecl.xml">
   </Import>
  <Import name="Types" ref="PBblas.Types" target="Types.ecl.xml">
   </Import>
  <Import name="iTypes" ref="PBblas.internal.Types" target="internal/Types.ecl.xml">
   </Import>
  <Import name="Constants" ref="PBblas.Constants" target="Constants.ecl.xml"/>
  <Definition exported="1" fullname="pbblas.vector2diag" inherittype="local" line="28" name="Vector2Diag" type="function">
   <Type type="table">
    <Type type="record" unnamed="1">
     <Field name="wi_id">
      <Type type="unsigned2"/>
     </Field>
     <Field name="x">
      <Type type="unsigned4"/>
     </Field>
     <Field name="y">
      <Type type="unsigned4"/>
     </Field>
     <Field name="v">
      <Type type="real8"/>
     </Field>
    </Type>
   </Type>
   <Documentation>
    <return>An N x N matrix in Layout_Cell format</return><firstline>Convert a vector into a diagonal matrix</firstline><content>Convert a vector into a diagonal matrix. The typical notation is D = diag(V). The input X must be a 1 x N column vector or an N x 1 row vector. The resulting matrix, in either case will be N x N, with zero everywhere except the diagonal.</content><see>PBblas/Types.Layout_cell</see><param><name>X</name><desc>A row or column vector (i.e. N x 1 or 1 x N) in Layout_Cell format</desc></param></Documentation>
   <Signature name="Vector2Diag" ret="DATASET(Layout_Cell)" param="(DATASET(Layout_Cell) X)" hlen="32">DATASET(Layout_Cell) Vector2Diag(DATASET(Layout_Cell) X)</Signature><Params>
    <Param name="X">
     <Type type="table">
      <Type fullname="pbblas.layout_cell" name="Layout_Cell" type="record"/>
     </Type>
    </Param>
   </Params>
  </Definition>
 <Documentation>
    <return>An N x N matrix in Layout_Cell format</return><firstline>Convert a vector into a diagonal matrix</firstline><content>Convert a vector into a diagonal matrix. The typical notation is D = diag(V). The input X must be a 1 x N column vector or an N x 1 row vector. The resulting matrix, in either case will be N x N, with zero everywhere except the diagonal.</content><see>PBblas/Types.Layout_cell</see><param><name>X</name><desc>A row or column vector (i.e. N x 1 or 1 x N) in Layout_Cell format</desc></param></Documentation>
   </Source>
</Meta>