<?xml version='1.0' encoding='UTF-8'?>
<Meta>
 <Source name="ML_Core.Math.Beta" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/Beta.ecl" target="beta.ecl.xml">
  <Import body="0" end="7" fullname="ML_Core.Math" inherit_type="local" line="1" name="Math" ref="ml_core.math" start="7" target="pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Definition body="27" end="39" fullname="ml_core.math.gamma" inherit_type="local" line="2" name="gamma" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/Beta.ecl" start="19" target="gamma.ecl.xml">
   <Type>embed</Type>
   <Documentation> <content>Return the value of gamma function of real number x A wrapper for the standard C tgamma function.</content>
    <return>the value of GAMMA evaluated at x</return>
    <param><name>x</name><desc>the input x</desc></param>
   </Documentation>
   <Signature pre="" post="" name="gamma">gamma</Signature><Params>
    <Param name="x"/>
   </Params>
  </Definition>
  <Definition body="52" end="68" fullname="ml_core.math.log_gamma" inherit_type="local" line="3" name="log_gamma" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/Beta.ecl" start="40" target="log_gamma.ecl.xml">
   <Type>embed</Type>
   <Documentation> <content>Return the value of the log gamma function of the absolute value of X. A wrapper for the standard C lgamma function. Avoids the race condition found on some platforms by taking the absolute value of the of the input argument.</content>
    <return>the value of the log of the GAMMA evaluated at ABS(x)</return>
    <param><name>x</name><desc>the input x</desc></param>
   </Documentation>
   <Signature pre="" post="" name="log_gamma">log_gamma</Signature><Params>
    <Param name="x"/>
   </Params>
  </Definition>
  <Definition body="78" end="83" fullname="ml_core.math.maxgam" inherit_type="local" line="4" name="MAXGAM" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/Beta.ecl" start="69">
   <Signature pre="" post="" name="MAXGAM">MAXGAM</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="92" end="101" fullname="ml_core.math.asymp" inherit_type="local" line="5" name="ASYMP" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/Beta.ecl" start="84">
   <Signature pre="" post="" name="ASYMP">ASYMP</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="323" end="1698" exported="1" fullname="ml_core.math.beta" inherit_type="local" line="12" name="Beta" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/Beta.ecl" start="291">
   <Type>function</Type>
   <Documentation> <content>Return the beta value of two positive real numbers, x and y</content>
    <return>the beta value</return>
    <param><name>x</name><desc>the value of the first number</desc></param>
    <param><name>y</name><desc>the value of the second number</desc></param>
   </Documentation>
   <Signature pre="" post="" name="Beta(REAL8 x, REAL8 y)">Beta(REAL8 x, REAL8 y)</Signature><Params>
    <Param name="x"/>
    <Param name="y"/>
   </Params>
  </Definition>
 </Source>
 <Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/log_gamma.ecl" name="ML_Core.Math.log_gamma" target="log_gamma.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/gamma.ecl" name="ML_Core.Math.gamma" target="gamma.ecl.xml"/></Meta>