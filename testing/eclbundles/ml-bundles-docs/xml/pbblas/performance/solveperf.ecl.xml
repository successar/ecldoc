<?xml version='1.0' encoding='UTF-8'?>
<Meta>
 <Source name="PBblas.performance.SolvePerf" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" target="solveperf.ecl.xml">
  <Import body="0" end="300" fullname="PBblas" inherit_type="local" line="6" name="PBblas" ref="pbblas" start="300" target="../pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="322" fullname="PBblas.internal" inherit_type="local" line="7" name="int" ref="pbblas.internal" remotescope="1" start="322" target="../internal/pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="353" fullname="PBblas.MatUtils" inherit_type="local" line="8" name="MatUtils" ref="pbblas.matutils" start="353" target="../matutils.ecl.xml">
   <Type>attribute</Type>
   <Documentation> <see>Std/PBblas/Types.Layout_Cell</see>
    <content>Provides various utility attributes for manipulating cell-based matrixes</content>
   </Documentation>
  </Import>
  <Import body="0" end="377" fullname="PBblas.Types" inherit_type="local" line="9" name="Types" ref="pbblas.types" start="377" target="../types.ecl.xml">
   <Type>attribute</Type>
   <Documentation> <content>Types for the Parallel Block Basic Linear Algebra Sub-programs support WARNING: attributes marked with WARNING can not be changed without making corresponding changes to the C++ attributes.</content>
   </Documentation>
  </Import>
  <Import body="0" end="398" fullname="PBblas.internal.Types" inherit_type="local" line="10" name="iTypes" ref="pbblas.internal.types" start="398" target="../internal/types.ecl.xml">
   <Type>attribute</Type>
   <Documentation> <content>Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support WARNING: attributes marked with WARNING can not be changed without making corresponding changes to the C++ attributes.</content>
   </Documentation>
  </Import>
  <Import body="0" end="426" fullname="PBblas.test" inherit_type="local" line="11" name="Tests" ref="pbblas.test" remotescope="1" start="426" target="../test/pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="455" fullname="PBblas.test.MakeTestMatrix" inherit_type="local" line="12" name="tm" ref="pbblas.test.maketestmatrix" start="455" target="../test/maketestmatrix.ecl.xml">
   <Type>attribute</Type>
  </Import>
  <Definition body="495" end="512" fullname="pbblas.performance.matrix_t" inherit_type="local" line="14" name="matrix_t" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="484">
   <Signature pre="" post="" name="matrix_t">matrix_t</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="524" end="540" inherit_type="local" line="15" name="Triangle" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="513" fullname="ecldoc-Triangle">
   <Type>attribute</Type>
   <Signature pre="" post="" name="Triangle">Triangle</Signature><Documentation> <content>Enumeration for Triangle type WARNING: type used in C++ attribute</content>
   </Documentation>
  </Definition>
  <Definition body="552" end="568" inherit_type="local" line="16" name="Diagonal" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="541" fullname="ecldoc-Diagonal">
   <Type>attribute</Type>
   <Signature pre="" post="" name="Diagonal">Diagonal</Signature><Documentation> <content>Enumeration for Diagonal type WARNING: type used in C++ attribute</content>
   </Documentation>
  </Definition>
  <Definition body="578" end="594" fullname="pbblas.performance.upper" inherit_type="local" line="17" name="Upper" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="569">
   <Signature pre="" post="" name="Upper">Upper</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="604" end="620" fullname="pbblas.performance.lower" inherit_type="local" line="18" name="Lower" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="595">
   <Signature pre="" post="" name="Lower">Lower</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="635" end="655" fullname="pbblas.performance.layout_part" inherit_type="local" line="19" name="Layout_Part" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="621">
   <Type>record</Type>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="partition_id"/>
   <Field name="node_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Field name="block_row"/>
   <Field name="block_col"/>
   <Field name="part_rows"/>
   <Field name="part_cols"/>
   <Field name="first_row"/>
   <Field name="first_col"/>
   <Field name="mat_part"/>
   <Signature pre="" post="" name="Layout_Part">Layout_Part</Signature><Documentation> <field><name>wi_id</name><desc>Work Item Number -- An identifier from 1 to 64K-1 that separates and identifies individual matrixes</desc></field>
    <field><name>m_label</name><desc>A user provided label indicating to which matrix the dimensions apply, when used to describe a set of related matrixes (e.g., 'A', 'B', and 'C') for the same work item used in an operation. * @field partition_id A unique ID for this partition within the matrix</desc></field>
    <field><name>partition_id</name><desc>The 1-based id of this partition, unique within a work-item</desc></field>
    <field><name>node_id</name><desc>The node on which this partition is stored</desc></field>
    <field><name>m_rows</name><desc>The number of rows in the full matrix</desc></field>
    <field><name>m_cols</name><desc>The number of columns in the full matrix</desc></field>
    <field><name>row_blocks</name><desc>The number of row partitions in use</desc></field>
    <field><name>col_blocks</name><desc>The number of column partitions in use</desc></field>
    <field><name>block_row</name><desc>The row of this partition within the block partition matrix</desc></field>
    <field><name>block_col</name><desc>The column of this partition "</desc></field>
    <field><name>part_rows</name><desc>The number of rows stored within this partition</desc></field>
    <field><name>part_cols</name><desc>The number of columns stored within this partition</desc></field>
    <field><name>first_row</name><desc>The first row of the original matrix stored within this partition</desc></field>
    <field><name>first_col</name><desc>The first column of the original matrix stored within this partition</desc></field>
    <field><name>mat_part</name><desc>The dense representation of the cells values within this partition (see matrix_t)</desc></field>
    <see>matrix_t</see>
    <see>Layout_Cell</see>
    <see>Std/PBblas/Converted</see>
    <content>Alternate form for storage of large matrixes as a set of partitions Each partition holds the dense form of a piece of the matrix (see matrix_t) as well as information about its relationship to the larger matrix. The full matrix is then carried as DATASET(Layout_Part). Utility module Converted provides functions for converting a matrix in cell form (see Layout_cell) to partitions and vice versa. This form is primarily used internally to PBblas functions, but can also be used as an intermediate form to avoid repeated conversions from cell form. A work-item id field allows multiple matrixes to be carried in the same dataset. This supports the "myriad" style interface whereby the same operation can be performed on multiple sets of matrixes at once. The m_label field allows for the separation of multiple matrixes with the same wi_id for operations requiring multiple matrixes. This allows multiple work-items with multiple matrixes each to be carried in the same dataset.</content>
   </Documentation>
  </Definition>
  <Definition body="663" end="675" inherit_type="local" line="20" name="Side" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="656" fullname="ecldoc-Side">
   <Type>attribute</Type>
   <Signature pre="" post="" name="Side">Side</Signature><Documentation> <content>Enumeration for Side type WARNING: type used in C++ attribute</content>
   </Documentation>
  </Definition>
  <Definition body="690" end="709" fullname="pbblas.performance.layout_cell" inherit_type="local" line="21" name="Layout_Cell" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="676">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Signature pre="" post="" name="Layout_Cell">Layout_Cell</Signature><Documentation> <field><name>wi_id</name><desc>Work Item Number -- An identifier from 1 to 64K-1 that separates and identifies individual matrixes</desc></field>
    <field><name>x</name><desc>1-based row position within the matrix</desc></field>
    <field><name>y</name><desc>1-based column position within the matrix</desc></field>
    <field><name>v</name><desc>Real value for the cell</desc></field>
    <see>matrix_t</see>
    <see>Std/PBblas/MakeR8Set.ecl</see>
    <see>Std/PBblas/Converted.ecl WARNING: Used as C++ attribute. Do not change without corresponding changes to MakeR8Set.</see>
    <content>Layout for Matrix Cell Main representation of Matrix cell at interface to all PBBlas functions. Matrixes are represented as DATASET(Layout_Cell), where each cell describes the row and column position of the cell as well as its value. Only the non-zero cells need to be contained in the dataset in order to describe the matrix since all unspecified cells are considered to have a value of zero. The cell also contains a work-item number that allows multiple separate matrixes to be carried in the same dataset. This supports the "myriad" style interface that allows the same operations to be performed on many different sets of data at once. Note that these matrixes do not have an explicit size. They are sized implicitly, based on the maximum row and column presented in the data. A matrix can be converted to an explicit dense form (see matrix_t) by using the utility module MakeR8Set. This module should only be used for known small matrixes (&lt; 1M cells) or for partitions of a larger matrix. The Converted module provides utility functions to convert to and from a set of partitions (See Layout_parts).</content>
   </Documentation>
  </Definition>
  <Definition body="911" end="936" fullname="pbblas.performance.test_size" inherit_type="local" line="27" name="test_size" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="890">
   <Signature pre="" post="" name="UNSIGNED test_size">UNSIGNED test_size</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1077" end="1083" fullname="pbblas.performance.n1" inherit_type="local" line="32" name="N1" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1072">
   <Signature pre="" post="" name="N1">N1</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1089" end="1096" fullname="pbblas.performance.n2" inherit_type="local" line="33" name="N2" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1084">
   <Signature pre="" post="" name="N2">N2</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1102" end="1109" fullname="pbblas.performance.n3" inherit_type="local" line="34" name="N3" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1097">
   <Signature pre="" post="" name="N3">N3</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1200" end="1206" fullname="pbblas.performance.m1" inherit_type="local" line="36" name="M1" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1195">
   <Signature pre="" post="" name="M1">M1</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1212" end="1219" fullname="pbblas.performance.m2" inherit_type="local" line="37" name="M2" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1207">
   <Signature pre="" post="" name="M2">M2</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1225" end="1233" fullname="pbblas.performance.m3" inherit_type="local" line="38" name="M3" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1220">
   <Signature pre="" post="" name="M3">M3</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1273" end="1282" fullname="pbblas.performance.which_side" inherit_type="local" line="41" name="which_side" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1260">
   <Signature pre="" post="" name="which_side">which_side</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1290" end="1339" fullname="pbblas.performance.a_s" inherit_type="local" line="43" name="A_s" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1284">
   <Signature pre="" post="" name="A_s">A_s</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1346" end="1395" fullname="pbblas.performance.a_m" inherit_type="local" line="44" name="A_m" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1340">
   <Signature pre="" post="" name="A_m">A_m</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1402" end="1451" fullname="pbblas.performance.a_l" inherit_type="local" line="45" name="A_l" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1396">
   <Signature pre="" post="" name="A_l">A_l</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1456" end="1510" fullname="pbblas.performance.a" inherit_type="local" line="46" name="A" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1452">
   <Signature pre="" post="" name="A">A</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1521" end="1573" fullname="pbblas.performance.b_ax_s" inherit_type="local" line="48" name="B_ax_s" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1512">
   <Signature pre="" post="" name="B_ax_s">B_ax_s</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1583" end="1635" fullname="pbblas.performance.b_xa_s" inherit_type="local" line="49" name="B_xa_s" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1574">
   <Signature pre="" post="" name="B_xa_s">B_xa_s</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1645" end="1697" fullname="pbblas.performance.b_ax_m" inherit_type="local" line="50" name="B_ax_m" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1636">
   <Signature pre="" post="" name="B_ax_m">B_ax_m</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1707" end="1759" fullname="pbblas.performance.b_xa_m" inherit_type="local" line="51" name="B_xa_m" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1698">
   <Signature pre="" post="" name="B_xa_m">B_xa_m</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1769" end="1821" fullname="pbblas.performance.b_ax_l" inherit_type="local" line="52" name="B_ax_l" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1760">
   <Signature pre="" post="" name="B_ax_l">B_ax_l</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1831" end="1883" fullname="pbblas.performance.b_xa_l" inherit_type="local" line="53" name="B_xa_l" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1822">
   <Signature pre="" post="" name="B_xa_l">B_xa_l</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1892" end="1955" fullname="pbblas.performance.b_ax" inherit_type="local" line="55" name="B_ax" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1885">
   <Signature pre="" post="" name="B_ax">B_ax</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="1963" end="2026" fullname="pbblas.performance.b_xa" inherit_type="local" line="56" name="B_xa" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="1956">
   <Signature pre="" post="" name="B_xa">B_xa</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="2032" end="2070" fullname="pbblas.performance.b" inherit_type="local" line="58" name="B" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="2028">
   <Signature pre="" post="" name="B">B</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="2077" end="2094" fullname="pbblas.performance.lu" inherit_type="local" line="60" name="LU" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="2072">
   <Type>attribute</Type>
   <Signature pre="" post="" name="LU">LU</Signature><Documentation> <see>Types.Layout_Cell</see>
    <see>ExtractTri</see>
    <return>Resulting factored matrix in Layout_Cell format</return>
    <param><name>A</name><desc>The input matrix in Types.Layout_Cell format</desc></param>
    <content>LU Factorization Splits a matrix into Lower and Upper triangular factors Produces composite LU matrix for the diagonal blocks. Iterates through the matrix a row of blocks and column of blocks at a time. Partition A into M block rows and N block columns. The A11 cell is a single block. A12 is a single row of blocks with N-1 columns. A21 is a single column of blocks with M-1 rows. A22 is a sub-matrix of M-1 x N-1 blocks. | A11 A12 | | L11 0 | | U11 U12 | | A21 A22 | == | L21 L22 | * | 0 U22 | | L11*U11 L11*U12 | == | L21*U11 L21*U12 + L22*U22 | Based upon PB-BLAS: A set of parallel block basic linear algebra subprograms by Choi and Dongarra This module supports the "Myriad" style interface, allowing many independent problems to be worked on at once. The A matrix can contain multiple matrixes to be factored, indicated by different values for work-item id (wi_id). Note: The returned matrix includes both the upper and lower factors. This matrix can be used directly by trsm which will only use the part indicated by trsm's 'triangle' parameter (i.e. upper or lower). To extract the upper or lower triangle explicitly for other purposes, use the ExtractTri function. When passing the Lower matrix to the triangle solver (trsm), set the "Diagonal" parameter to "UnitTri". This is necessary because both triangular matrixes returned from this function are packed into a square matrix with only one diagonal. By convention, The Lower triangle is assumed to be a Unit Triangle (diagonal all ones), so the diagonal contained in the returned matrix is for the Upper factor and must be ignored (i.e. assumed to be all ones) when referencing the Lower triangle.</content>
   </Documentation>
  </Definition>
  <Definition body="2107" end="2147" fullname="pbblas.performance.firsttri" inherit_type="local" line="62" name="firstTri" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="2096">
   <Signature pre="" post="" name="firstTri">firstTri</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="2160" end="2200" fullname="pbblas.performance.secondtri" inherit_type="local" line="63" name="secondTri" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="2148">
   <Signature pre="" post="" name="secondTri">secondTri</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="2213" end="2278" fullname="pbblas.performance.firstdiag" inherit_type="local" line="64" name="firstDiag" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="2201">
   <Signature pre="" post="" name="firstDiag">firstDiag</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="2292" end="2357" fullname="pbblas.performance.seconddiag" inherit_type="local" line="65" name="secondDiag" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="2279">
   <Signature pre="" post="" name="secondDiag">secondDiag</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="2363" end="2450" fullname="pbblas.performance.s" inherit_type="local" line="67" name="S" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="2359">
   <Type>attribute</Type>
   <Signature pre="" post="" name="S">S</Signature><Documentation> <see>Types.Layout_Cell</see>
    <see>Types.Triangle</see>
    <see>Types.Side</see>
    <return>X solution matrix in Layout_Cell format</return>
    <param><name>s</name><desc>Types.Side enumeration indicating whether we are solving AX = B or XA = B</desc></param>
    <param><name>tri</name><desc>Types.Triangle enumeration indicating whether we are solving an Upper or Lower triangle.</desc></param>
    <param><name>transposeA</name><desc>Boolean indicating whether or not to transpose the A matrix before solving</desc></param>
    <param><name>diag</name><desc>Types.Diagonal enumeration indicating whether A is a unit matrix or not. This is primarily used after factoring matrixes using getrf (LU factorization). That module produces a factored matrix stored within the same space as the original matrix. Since the diagonal is used by both factors, by convention, the Lower triangle has a unit matrix (diagonal all 1's) while the Upper triangle uses the diagonal cells. Setting this to UnitTri, causes the contents of the diagonal to be ignored, and assumed to be 1. NotUnitTri should be used for most other cases.</desc></param>
    <param><name>alpha</name><desc>Multiplier to scale A</desc></param>
    <param><name>A_in</name><desc>The A matrix in Layout_Cell format</desc></param>
    <param><name>B_in</name><desc>The B matrix in Layout_Cell format</desc></param>
    <content>Partitioned block parallel triangular matrix solver. Solves for X using: AX = B or XA = B A is is a square triangular matrix, X and B have the same dimensions. A may be an upper triangular matrix (UX = B or XU = B), or a lower triangular matrix (LX = B or XL = B). Allows optional transposing and scaling of A. Partially based upon an approach discussed by MJ DAYDE, IS DUFF, AP CERFACS. A Parallel Block implementation of Level-3 BLAS for MIMD Vector Processors ACM Tran. Mathematical Software, Vol 20, No 2, June 1994 pp 178-193 and other papers about PB-BLAS by Choi and Dongarra This module supports the "Myriad" style interface, allowing many independent problems to be worked on at once. Corresponding A and B matrixes are related by a common work-item identifier (wi_id) within each cell of the matrix. The returned X matrix will contain cells for the same set of work-items as specified for the A and B matrices.</content>
   </Documentation>
  </Definition>
  <Definition body="2458" end="2547" fullname="pbblas.performance.xout" inherit_type="local" line="69" name="Xout" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/performance/SolvePerf.ecl" start="2451">
   <Type>attribute</Type>
   <Signature pre="" post="" name="Xout">Xout</Signature><Documentation> <see>Types.Layout_Cell</see>
    <see>Types.Triangle</see>
    <see>Types.Side</see>
    <return>X solution matrix in Layout_Cell format</return>
    <param><name>s</name><desc>Types.Side enumeration indicating whether we are solving AX = B or XA = B</desc></param>
    <param><name>tri</name><desc>Types.Triangle enumeration indicating whether we are solving an Upper or Lower triangle.</desc></param>
    <param><name>transposeA</name><desc>Boolean indicating whether or not to transpose the A matrix before solving</desc></param>
    <param><name>diag</name><desc>Types.Diagonal enumeration indicating whether A is a unit matrix or not. This is primarily used after factoring matrixes using getrf (LU factorization). That module produces a factored matrix stored within the same space as the original matrix. Since the diagonal is used by both factors, by convention, the Lower triangle has a unit matrix (diagonal all 1's) while the Upper triangle uses the diagonal cells. Setting this to UnitTri, causes the contents of the diagonal to be ignored, and assumed to be 1. NotUnitTri should be used for most other cases.</desc></param>
    <param><name>alpha</name><desc>Multiplier to scale A</desc></param>
    <param><name>A_in</name><desc>The A matrix in Layout_Cell format</desc></param>
    <param><name>B_in</name><desc>The B matrix in Layout_Cell format</desc></param>
    <content>Partitioned block parallel triangular matrix solver. Solves for X using: AX = B or XA = B A is is a square triangular matrix, X and B have the same dimensions. A may be an upper triangular matrix (UX = B or XU = B), or a lower triangular matrix (LX = B or XL = B). Allows optional transposing and scaling of A. Partially based upon an approach discussed by MJ DAYDE, IS DUFF, AP CERFACS. A Parallel Block implementation of Level-3 BLAS for MIMD Vector Processors ACM Tran. Mathematical Software, Vol 20, No 2, June 1994 pp 178-193 and other papers about PB-BLAS by Choi and Dongarra This module supports the "Myriad" style interface, allowing many independent problems to be worked on at once. Corresponding A and B matrixes are related by a common work-item identifier (wi_id) within each cell of the matrix. The returned X matrix will contain cells for the same set of work-items as specified for the A and B matrices.</content>
   </Documentation>
  </Definition>
 </Source>
 <Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl" name="PBblas.MatUtils" target="../matutils.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl" name="PBblas.Types" target="../types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl" name="ML_Core.Types" target="../../ml_core/types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl" name="PBblas.internal.Types" target="../internal/types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl" name="PBblas.internal.MatDims" target="../internal/matdims.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl" name="PBblas.internal.BlockDimensions" target="../internal/blockdimensions.ecl.xml"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl" name="std.system.Thorlib" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl" name="PBblas.internal.BlockDimensionsMultiply" target="../internal/blockdimensionsmultiply.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl" name="PBblas.internal.BlockDimensionsSolve" target="../internal/blockdimensionssolve.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/test/MakeTestMatrix.ecl" name="PBblas.test.MakeTestMatrix" target="../test/maketestmatrix.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl" name="PBblas.getrf" target="../getrf.ecl.xml"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl" name="std.BLAS" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/plugins/lib_eclblas.ecllib" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/plugins/lib_eclblas.ecllib"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Converted.ecl" name="PBblas.internal.Converted" target="../internal/converted.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/trsm.ecl" name="PBblas.trsm" target="../trsm.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MakeR8Set.ecl" name="PBblas.internal.MakeR8Set" target="../internal/maker8set.ecl.xml"/></Meta>