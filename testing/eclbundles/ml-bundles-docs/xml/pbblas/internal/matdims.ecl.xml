<?xml version='1.0' encoding='UTF-8'?>
<Meta>
 <Source name="PBblas.internal.MatDims" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl" target="matdims.ecl.xml">
  <Import body="0" end="250" fullname="PBblas" inherit_type="local" line="4" name="PBblas" ref="pbblas" start="250" target="../pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="272" fullname="PBblas.internal" inherit_type="local" line="5" name="int" ref="pbblas.internal" start="272" target="pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="289" fullname="PBblas.Types" inherit_type="local" line="6" name="Types" ref="pbblas.types" start="289" target="../types.ecl.xml">
   <Type>attribute</Type>
   <Documentation>
    <content>Types for the Parallel Block Basic Linear Algebra Sub-programs support WARNING: attributes marked with WARNING can not be changed without making corresponding changes to the C++ attributes.</content></Documentation>
  </Import>
  <Import body="0" end="310" fullname="PBblas.internal.Types" inherit_type="local" line="7" name="iTypes" ref="pbblas.internal.types" start="310" target="types.ecl.xml">
   <Type>attribute</Type>
   <Documentation>
    <content>Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support WARNING: attributes marked with WARNING can not be changed without making corresponding changes to the C++ attributes.</content></Documentation>
  </Import>
  <Definition body="658" end="14974" exported="1" fullname="PBblas.internal.MatDims" inherit_type="local" line="19" name="MatDims" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl" start="641">
   <Type>module</Type>
   <Parents/>
   <Definition body="1478" end="1840" exported="1" fullname="pbblas.internal.matdims.fromcells" inherit_type="local" line="33" name="FromCells" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl" start="1409">
    <Type>function</Type>
    <Documentation>
     <return>DATASET(Layout_Dims), one record per work item</return><param><name>cells</name><desc>dataset of Layout_Cell containing the matrixes to be dimensioned</desc></param><param><name>m_label</name><desc>a single text label to be attached to the dimensions so that this set of dimensions can be distinguished from another set used by the same operation (e.g. 'A', 'B', or 'C')</desc></param><content>Get basic matrix dimensions (m_rows, m_cols) from a dataset of cells (Layout_Cell). Multiple matrices can be included in the dataset separated by wi_id. One record of Layout_Dims will be produced for each matrix in the input set.</content><see>Std/PBblas/Types.Layout_Cell</see><see>Std/PBblas/Types.Layout_Dims</see></Documentation>
    <Signature sign="FromCells(DATASET(Layout_Cell) cells, m_label_t m_label='')" name="FromCells">FromCells(DATASET(Layout_Cell) cells, m_label_t m_label='')</Signature><Params>
     <Param name="cells"/>
     <Param name="m_label"/>
    </Params>
   </Definition>
   <Definition body="2238" end="2621" exported="1" fullname="pbblas.internal.matdims.partitionedfromdims" inherit_type="local" line="52" name="PartitionedFromDims" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl" start="2182">
    <Type>function</Type>
    <Documentation>
     <return>DATASET(Layout_Dims), with partition info filled in</return><param><name>dims</name><desc>DATASET(Layout_Dims), typically output from FromCells above</desc></param><content>Determine optimal partitioning scheme for one or more matrixes based on the dimensions provided.</content><see>Std/PBblas/Types.Layout_Dims</see></Documentation>
    <Signature sign="PartitionedFromDims(DATASET(Layout_Dims) dims)" name="PartitionedFromDims">PartitionedFromDims(DATASET(Layout_Dims) dims)</Signature><Params>
     <Param name="dims"/>
    </Params>
   </Definition>
   <Definition body="3389" end="3525" exported="1" fullname="pbblas.internal.matdims.partitionedfromcells" inherit_type="local" line="78" name="PartitionedFromCells" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl" start="3309">
    <Type>function</Type>
    <Documentation>
     <return>DATASET(Layout_Dims) with partition info filled in</return><param><name>cells</name><desc>DATASET(Layout_Cell) representing one or more matrixes</desc></param><param><name>m_label</name><desc>a single text label to be attached to the dimensions so that this set of dimensions can be distinguished from another set used by the same operation (e.g. 'A', 'B', or 'C')</desc></param><content>Generate a partitioning scheme from a set of matrices in cell form. Essentially a shortcut for FromCells followed by PartitionedFromDims</content><see>Std/PBblas/Types.Layout_Dims</see><see>Std/PBblas/Types.Layout_Cell</see><see>FromCells</see><see>PartitionedFromDims</see></Documentation>
    <Signature sign="PartitionedFromCells(DATASET(Layout_Cell) cells, m_label_t m_label='')" name="PartitionedFromCells">PartitionedFromCells(DATASET(Layout_Cell) cells, m_label_t m_label='')</Signature><Params>
     <Param name="cells"/>
     <Param name="m_label"/>
    </Params>
   </Definition>
   <Definition body="4788" end="14044" exported="1" fullname="pbblas.internal.matdims.partitionedfromdimsforop" inherit_type="local" line="104" name="PartitionedFromDimsForOp" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl" start="4716">
    <Type>function</Type>
    <Documentation>
     <return>DATASET(Layout_Dims) with patition info filled in. This will contain one entry per work item, per matrix label.</return><param><name>op</name><desc>The operation requiring partitioning. See Types.OpType</desc></param><param><name>dims</name><desc>DATASET(Layout_Dims) typically returned by FromCells above</desc></param><content>Determines an optimal partitioning scheme for a set of matrixes involved in a given operation. This handles interlocking dimensions such as those involved in a multiplication operation. Note that calling this function with OpType.single is equivalent to calling PartitionedFromDims above. The input dimensions include dimensions from different work-items (separated by wi_id) as well as dimensions from separate matrixes (e.g. A, B, and C/result) within a work-item (separated by m_label). Each operation-type may have a different expected set of m_labels and will perform its interlock calculations accordingly.</content><see>Std/PBblas/Types.Layout_Dims</see><see>Std/PBblas/Types.OpType</see><see>FromCells</see><see>PartitionedFromDims</see></Documentation>
    <Signature sign="PartitionedFromDimsForOp(OpType op, DATASET(Layout_Dims) dims)" name="PartitionedFromDimsForOp">PartitionedFromDimsForOp(OpType op, DATASET(Layout_Dims) dims)</Signature><Params>
     <Param name="op"/>
     <Param name="dims"/>
    </Params>
   </Definition>
   <Definition body="14514" end="14969" exported="1" fullname="pbblas.internal.matdims.transposedims" inherit_type="local" line="315" name="TransposeDims" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl" start="14461">
    <Type>function</Type>
    <Documentation>
     <return>DATASET(Layout_Dims), the input dimensions transposed</return><param><name>dims_in</name><desc>The dimensions to be transposed in Layout_Dims format</desc></param><content>Transpose rows and columns for a set of matrix dimensions. Can be used for single matrix dimensions or partitioned matrixes. Returns one record for each input record. Many matrixes can be included in one call.</content></Documentation>
    <Signature sign="TransposeDims(DATASET(Layout_Dims) dims_in)" name="TransposeDims">TransposeDims(DATASET(Layout_Dims) dims_in)</Signature><Params>
     <Param name="dims_in"/>
    </Params>
   </Definition>
   <Signature sign="MatDims" name="MatDims">MatDims</Signature><Documentation>
    <content>Module to calculate matrix dimensions and matrix partition dimensions from matrix cells.</content></Documentation>
  </Definition>
 <Documentation>
    <content>Module to calculate matrix dimensions and matrix partition dimensions from matrix cells.</content></Documentation>
  </Source>
 <Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl" name="PBblas.Types" target="../types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl" name="ML_Core.Types" target="../../ml_core/types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl" name="PBblas.internal.Types" target="types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl" name="PBblas.internal.BlockDimensions" target="blockdimensions.ecl.xml"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl" name="std.system.Thorlib" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl" name="PBblas.internal.BlockDimensionsSolve" target="blockdimensionssolve.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl" name="PBblas.internal.BlockDimensionsMultiply" target="blockdimensionsmultiply.ecl.xml"/></Meta>