<?xml version='1.0' encoding='UTF-8'?>
<Meta>
 <Source name="LogisticRegression.BinomialLogisticRegression" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/BinomialLogisticRegression.ecl" target="binomiallogisticregression.ecl.xml">
  <Definition body="610" end="2289" exported="1" fullname="logisticregression.binomiallogisticregression" inherit_type="local" line="14" name="BinomialLogisticRegression" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/BinomialLogisticRegression.ecl" start="441">
   <Type>module</Type>
   <Params>
    <Param name="max_iter"/>
    <Param name="epsilon"/>
    <Param name="ridge"/>
   </Params>
   <Parents>
    <Parent line="8" name="IClassify" ref="ml_core.interfaces.iclassify" target="../ml_core/interfaces/iclassify.ecl.xml"/>
   </Parents>
   <Definition body="1073" end="1148" exported="1" fullname="logisticregression.binomiallogisticregression.getmodel" inherit_type="override" line="26" name="GetModel" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/BinomialLogisticRegression.ecl" start="910">
    <Type>function</Type>
    <Documentation> <content>Calculate the model to fit the observation data to the observed classes.</content>
     <return>the encoded model</return>
     <param><name>observations</name><desc>the observed explanatory values</desc></param>
     <param><name>classifications</name><desc>the observed classification used to build the model</desc></param>
    </Documentation>
    <Signature sign="DATASET(Types.Layout_Model)&#10;        GetModel(DATASET(Types.NumericField) observations,&#10;                 DATASET(Types.DiscreteField) classifications)" name="GetModel">DATASET(Types.Layout_Model)
        GetModel(DATASET(Types.NumericField) observations,
                 DATASET(Types.DiscreteField) classifications)</Signature><Params>
     <Param name="observations"/>
     <Param name="classifications"/>
    </Params>
   </Definition>
   <Definition body="1574" end="1632" exported="1" fullname="logisticregression.binomiallogisticregression.classify" inherit_type="override" line="37" name="Classify" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/BinomialLogisticRegression.ecl" start="1415">
    <Type>function</Type>
    <Documentation> <content>Classify the observations using a model.</content>
     <return>Classification with a confidence value</return>
     <param><name>model</name><desc>The model, which must be produced by a corresponding getModel function.</desc></param>
     <param><name>new_observations</name><desc>observations to be classified</desc></param>
    </Documentation>
    <Signature sign="DATASET(Types.Classify_Result)&#10;        Classify(DATASET(Types.Layout_Model) model,&#10;                 DATASET(Types.NumericField) new_observations)" name="Classify">DATASET(Types.Classify_Result)
        Classify(DATASET(Types.Layout_Model) model,
                 DATASET(Types.NumericField) new_observations)</Signature><Params>
     <Param name="model"/>
     <Param name="new_observations"/>
    </Params>
   </Definition>
   <Definition body="2179" end="2283" exported="1" fullname="logisticregression.binomiallogisticregression.report" inherit_type="override" line="50" name="Report" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/BinomialLogisticRegression.ecl" start="1966">
    <Type>function</Type>
    <Documentation> <content>Report the confusion matrix for the classifier and training data.</content>
     <return>the confusion matrix showing correct and incorrect results</return>
     <param><name>model</name><desc>the encoded model</desc></param>
     <param><name>observations</name><desc>the explanatory values.</desc></param>
     <param><name>classifications</name><desc>the classifications associated with the observations</desc></param>
    </Documentation>
    <Signature sign="DATASET(Types.Confusion_Detail)&#10;        Report(DATASET(Types.Layout_Model) model,&#10;               DATASET(Types.NumericField) observations,&#10;               DATASET(Types.DiscreteField) classifications)" name="Report">DATASET(Types.Confusion_Detail)
        Report(DATASET(Types.Layout_Model) model,
               DATASET(Types.NumericField) observations,
               DATASET(Types.DiscreteField) classifications)</Signature><Params>
     <Param name="model"/>
     <Param name="observations"/>
     <Param name="classifications"/>
    </Params>
   </Definition>
   <Signature sign="BinomialLogisticRegression(UNSIGNED max_iter=200,&#10;               REAL8 epsilon=Constants.default_epsilon,&#10;               REAL8 ridge=Constants.default_ridge)" name="BinomialLogisticRegression">BinomialLogisticRegression(UNSIGNED max_iter=200,
               REAL8 epsilon=Constants.default_epsilon,
               REAL8 ridge=Constants.default_ridge)</Signature><Documentation> <content>Binomial logistic regression using iteratively re-weighted least squares.</content>
    <param><name>max_iter</name><desc>maximum number of iterations to try</desc></param>
    <param><name>epsilon</name><desc>the minimum change in the Beta value estimate to continue</desc></param>
    <param><name>ridge</name><desc>a value to populate a diagonal matrix that is added to a matrix help assure that the matrix is invertible.</desc></param>
   </Documentation>
  </Definition>
  <Import body="0" end="7" fullname="LogisticRegression" inherit_type="local" line="1" name="LR" ref="logisticregression" start="7" target="pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="23" fullname="LogisticRegression.Constants" inherit_type="local" line="2" name="Constants" ref="logisticregression.constants" start="23" target="constants.ecl.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="44" fullname="ML_Core.Interfaces" inherit_type="local" line="3" name="Interfaces" ref="ml_core.interfaces" remotescope="1" start="44" target="../ml_core/interfaces/pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="71" fullname="ML_Core.Types" inherit_type="local" line="4" name="Types" ref="ml_core.types" start="71" target="../ml_core/types.ecl.xml">
   <Type>attribute</Type>
  </Import>
 <Documentation> <content>Binomial logistic regression using iteratively re-weighted least squares.</content>
    <param><name>max_iter</name><desc>maximum number of iterations to try</desc></param>
    <param><name>epsilon</name><desc>the minimum change in the Beta value estimate to continue</desc></param>
    <param><name>ridge</name><desc>a value to populate a diagonal matrix that is added to a matrix help assure that the matrix is invertible.</desc></param>
   </Documentation>
  </Source>
 <Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/Constants.ecl" name="LogisticRegression.Constants" target="constants.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl" name="ML_Core.Types" target="../ml_core/types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Interfaces/IClassify.ecl" name="ML_Core.Interfaces.IClassify" target="../ml_core/interfaces/iclassify.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel.ecl" name="LogisticRegression.IRLS.GetModel" target="irls/getmodel.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/Types.ecl" name="LogisticRegression.Types" target="types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/DataStats.ecl" name="LogisticRegression.DataStats" target="datastats.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_local.ecl" name="LogisticRegression.IRLS.getModel_local" target="irls/getmodel_local.ecl.xml"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl" name="std.BLAS" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/plugins/lib_eclblas.ecllib" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/plugins/lib_eclblas.ecllib"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/dimm.ecl" name="LogisticRegression.dimm" target="dimm.ecl.xml"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl" name="std.system.thorlib" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl" name="LogisticRegression.IRLS.getModel_global" target="irls/getmodel_global.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl" name="PBblas.Types" target="../pbblas/types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl" name="PBblas.Converted" target="../pbblas/converted.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl" name="PBblas.MatUtils" target="../pbblas/matutils.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl" name="PBblas.internal.Types" target="../pbblas/internal/types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl" name="PBblas.internal.MatDims" target="../pbblas/internal/matdims.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl" name="PBblas.internal.BlockDimensions" target="../pbblas/internal/blockdimensions.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl" name="PBblas.internal.BlockDimensionsMultiply" target="../pbblas/internal/blockdimensionsmultiply.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl" name="PBblas.internal.BlockDimensionsSolve" target="../pbblas/internal/blockdimensionssolve.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl" name="PBblas.gemm" target="../pbblas/gemm.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Converted.ecl" name="PBblas.internal.Converted" target="../pbblas/internal/converted.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MakeR8Set.ecl" name="PBblas.internal.MakeR8Set" target="../pbblas/internal/maker8set.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl" name="PBblas.getrf" target="../pbblas/getrf.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/trsm.ecl" name="PBblas.trsm" target="../pbblas/trsm.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Vector2Diag.ecl" name="PBblas.Vector2Diag" target="../pbblas/vector2diag.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl" name="PBblas.Constants" target="../pbblas/constants.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Apply2Elements.ecl" name="PBblas.Apply2Elements" target="../pbblas/apply2elements.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/IElementFunc.ecl" name="PBblas.IElementFunc" target="../pbblas/ielementfunc.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/axpy.ecl" name="PBblas.axpy" target="../pbblas/axpy.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/asum.ecl" name="PBblas.asum" target="../pbblas/asum.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/LogitPredict.ecl" name="LogisticRegression.LogitPredict" target="logitpredict.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/LogitScore.ecl" name="LogisticRegression.LogitScore" target="logitscore.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/Confusion.ecl" name="LogisticRegression.Confusion" target="confusion.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/ExtractBeta.ecl" name="LogisticRegression.ExtractBeta" target="extractbeta.ecl.xml"/></Meta>