<?xml version='1.0' encoding='UTF-8'?>
<Meta>
 <Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl" name="ML_Core.Types" target="../Types.ecl.xml"/><Source name="ML_Core.Interfaces.IClassify" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Interfaces/IClassify.ecl" target="IClassify.ecl.xml">
  <Definition exported="1" fullname="ML_Core.Interfaces.IClassify" inherittype="local" line="8" name="IClassify" virtual="1">
   <Type>module</Type>
   <Parents/>
   <Definition exported="1" fullname="ml_core.interfaces.iclassify.getmodel" inherittype="local" line="17" name="GetModel">
    <Type>function</Type>
    <Documentation>
     <content>Calculate the model to fit the observation data to the observed classes.</content><firstline>Calculate the model to fit the observation data to the observed classes</firstline><param><name>observations</name><desc>the observed explanatory values</desc></param><param><name>classifications</name><desc>the observed classification used to build the model</desc></param><return>the encoded model</return></Documentation>
    <Signature name="GetModel" ret="DATASET(Types.Layout_Model)" param="(DATASET(Types.NumericField) observations, DATASET(Types.DiscreteField) classifications)" hlen="36">DATASET(Types.Layout_Model) GetModel(DATASET(Types.NumericField) observations, DATASET(Types.DiscreteField) classifications)</Signature><Params>
     <Param name="observations"/>
     <Param name="classifications"/>
    </Params>
   </Definition>
   <Definition exported="1" fullname="ml_core.interfaces.iclassify.classify" inherittype="local" line="27" name="Classify">
    <Type>function</Type>
    <Documentation>
     <content>Classify the observations using a model.</content><firstline>Classify the observations using a model</firstline><param><name>model</name><desc>The model, which must be produced by a corresponding getModel function.</desc></param><param><name>new_observations</name><desc>observations to be classified</desc></param><return>Classification with a confidence value</return></Documentation>
    <Signature name="Classify" ret="DATASET(Types.Classify_Result)" param="(DATASET(Types.Layout_Model) model, DATASET(Types.NumericField) new_observations)" hlen="39">DATASET(Types.Classify_Result) Classify(DATASET(Types.Layout_Model) model, DATASET(Types.NumericField) new_observations)</Signature><Params>
     <Param name="model"/>
     <Param name="new_observations"/>
    </Params>
   </Definition>
   <Definition exported="1" fullname="ml_core.interfaces.iclassify.report" inherittype="local" line="39" name="Report">
    <Type>function</Type>
    <Documentation>
     <content>Report the confusion matrix for the classifier and training data.</content><firstline>Report the confusion matrix for the classifier and training data</firstline><param><name>model</name><desc>the encoded model</desc></param><param><name>observations</name><desc>the explanatory values.</desc></param><param><name>classifications</name><desc>the classifications associated with the observations</desc></param><return>the confusion matrix showing correct and incorrect results</return></Documentation>
    <Signature name="Report" ret="DATASET(Types.Confusion_Detail)" param="(DATASET(Types.Layout_Model) model, DATASET(Types.NumericField) observations, DATASET(Types.DiscreteField) classifications)" hlen="38">DATASET(Types.Confusion_Detail) Report(DATASET(Types.Layout_Model) model, DATASET(Types.NumericField) observations, DATASET(Types.DiscreteField) classifications)</Signature><Params>
     <Param name="model"/>
     <Param name="observations"/>
     <Param name="classifications"/>
    </Params>
   </Definition>
   <Signature name="IClassify" ret="" param="" hlen="9">IClassify</Signature><Documentation>
    <content>Interface definition for Classification. Actual implementation modules will probably take parameters.</content><firstline>Interface definition for Classification</firstline></Documentation>
  </Definition>
  <Import name="ML_Core" ref="ML_Core" target="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles-docs/$$_ECLDOC-FORM_$$/ML_Core/pkg.toc.xml"/>
  <Import name="Types" ref="ML_Core.Types" target="../Types.ecl.xml"/>
 <Documentation>
    <content>Interface definition for Classification. Actual implementation modules will probably take parameters.</content><firstline>Interface definition for Classification</firstline></Documentation>
  </Source>
</Meta>