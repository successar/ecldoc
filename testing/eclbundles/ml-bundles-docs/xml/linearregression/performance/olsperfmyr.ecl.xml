<?xml version='1.0' encoding='UTF-8'?>
<Meta>
 <Source name="LinearRegression.performance.OLSPerfMyr" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LinearRegression/performance/OLSPerfMyr.ecl" target="olsperfmyr.ecl.xml">
  <Import body="0" end="580" fullname="LinearRegression" inherit_type="local" line="11" name="LROLS" ref="linearregression" start="580" target="../pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="601" fullname="ML_Core" inherit_type="local" line="12" name="ML_Core" ref="ml_core" remotescope="1" start="601" target="../../ml_core/pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="617" fullname="ML_Core.Types" inherit_type="local" line="13" name="mlTypes" ref="ml_core.types" start="617" target="../../ml_core/types.ecl.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="650" fullname="PBblas" inherit_type="local" line="14" name="PBblas" ref="pbblas" remotescope="1" start="650" target="../../pbblas/pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="665" fullname="PBblas.test.MakeTestMatrix" inherit_type="local" line="15" name="tm" ref="pbblas.test.maketestmatrix" start="665" target="../../pbblas/test/maketestmatrix.ecl.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="706" fullname="PBblas.Types" inherit_type="local" line="16" name="pbbTypes" ref="pbblas.types" start="706" target="../../pbblas/types.ecl.xml">
   <Type>attribute</Type>
   <Documentation> <content>Types for the Parallel Block Basic Linear Algebra Sub-programs support WARNING: attributes marked with WARNING can not be changed without making corresponding changes to the C++ attributes.</content>
   </Documentation>
  </Import>
  <Import body="0" end="739" fullname="PBblas.Converted" inherit_type="local" line="17" name="pbbConverted" ref="pbblas.converted" start="739" target="../../pbblas/converted.ecl.xml">
   <Type>attribute</Type>
   <Documentation> <content>Module to convert between ML_Core/Types Field layouts (i.e. NumericField and DiscreteField) and PBblas matrix layout (i.e. Layout_Cell)</content>
   </Documentation>
  </Import>
  <Definition body="1503" end="1508" exported="1" fullname="linearregression.performance.olsperfmyr" inherit_type="local" line="38" name="OLSPerfMyr" source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LinearRegression/performance/OLSPerfMyr.ecl" start="1483">
   <Type>attribute</Type>
   <Signature sign="OLSPerfMyr" name="OLSPerfMyr">OLSPerfMyr</Signature><Documentation> <see>ML_core/Types.Layout_Model</see>
    <return>Model in DATASET(Layout_Model) format</return>
    <content>GetModel Returns the learned model that maps X's to Y's. In the case of OLS, the model represents a set of Betas which are the coefficients of the linear model: Beta0 * 1 + Beta1 * Field1 + Beta2 * Field2 ... The ID of each model record specifies to which Y variable the coefficient applies. The Field Number ('number') indicates to which field of X the beta is to be applied. Field number 1 provides the intercept portion of the linear model and is always multiplied by 1. Note that if multiple work-items are provided within X and Y, there will be multiple models returned. The models can be separated by their work item id (i.e. 'wi'). A single model can be extracted from a myriad model by using e.g., model(wi=myWI_id). GetModel should not be called when predicting using a previously persisted model (i.e. when training data was not passed to the module.</content>
   </Documentation>
  </Definition>
 <Documentation> <see>ML_core/Types.Layout_Model</see>
    <return>Model in DATASET(Layout_Model) format</return>
    <content>GetModel Returns the learned model that maps X's to Y's. In the case of OLS, the model represents a set of Betas which are the coefficients of the linear model: Beta0 * 1 + Beta1 * Field1 + Beta2 * Field2 ... The ID of each model record specifies to which Y variable the coefficient applies. The Field Number ('number') indicates to which field of X the beta is to be applied. Field number 1 provides the intercept portion of the linear model and is always multiplied by 1. Note that if multiple work-items are provided within X and Y, there will be multiple models returned. The models can be separated by their work item id (i.e. 'wi'). A single model can be extracted from a myriad model by using e.g., model(wi=myWI_id). GetModel should not be called when predicting using a previously persisted model (i.e. when training data was not passed to the module.</content>
   </Documentation>
  </Source>
 <Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl" name="ML_Core.Types" target="../../ml_core/types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/test/MakeTestMatrix.ecl" name="PBblas.test.MakeTestMatrix" target="../../pbblas/test/maketestmatrix.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl" name="PBblas.Types" target="../../pbblas/types.ecl.xml"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl" name="std.system.Thorlib" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl" name="PBblas.Converted" target="../../pbblas/converted.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LinearRegression/OLS.ecl" name="LinearRegression.OLS" target="../ols.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl" name="PBblas.MatUtils" target="../../pbblas/matutils.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl" name="PBblas.internal.Types" target="../../pbblas/internal/types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl" name="PBblas.internal.MatDims" target="../../pbblas/internal/matdims.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl" name="PBblas.internal.BlockDimensions" target="../../pbblas/internal/blockdimensions.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl" name="PBblas.internal.BlockDimensionsMultiply" target="../../pbblas/internal/blockdimensionsmultiply.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl" name="PBblas.internal.BlockDimensionsSolve" target="../../pbblas/internal/blockdimensionssolve.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl" name="PBblas.Constants" target="../../pbblas/constants.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Interfaces/IRegression.ecl" name="ML_Core.Interfaces.IRegression" target="../../ml_core/interfaces/iregression.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl" name="PBblas.gemm" target="../../pbblas/gemm.ecl.xml"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl" name="std.BLAS" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/plugins/lib_eclblas.ecllib" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/plugins/lib_eclblas.ecllib"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Converted.ecl" name="PBblas.internal.Converted" target="../../pbblas/internal/converted.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MakeR8Set.ecl" name="PBblas.internal.MakeR8Set" target="../../pbblas/internal/maker8set.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/potrf.ecl" name="PBblas.potrf" target="../../pbblas/potrf.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/trsm.ecl" name="PBblas.trsm" target="../../pbblas/trsm.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl" name="ML_Core.FieldAggregates" target="../../ml_core/fieldaggregates.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Utils/SequenceInField.ecl" name="ML_Core.Utils.SequenceInField" target="../../ml_core/utils/sequenceinfield.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/Beta.ecl" name="ML_Core.Math.Beta" target="../../ml_core/math/beta.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/log_gamma.ecl" name="ML_Core.Math.log_gamma" target="../../ml_core/math/log_gamma.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/gamma.ecl" name="ML_Core.Math.gamma" target="../../ml_core/math/gamma.ecl.xml"/></Meta>