<?xml version='1.0' encoding='UTF-8'?>
<Meta>
 <Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl" name="ML_Core.Types" target="../ML_Core/Types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl" name="PBblas.Types" target="../PBblas/Types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl" name="PBblas.Converted" target="../PBblas/Converted.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl" name="PBblas.internal.Types" target="../PBblas/internal/Types.ecl.xml"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl" name="std.system.Thorlib" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl" name="PBblas.internal.BlockDimensions" target="../PBblas/internal/BlockDimensions.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl" name="PBblas.internal.BlockDimensionsMultiply" target="../PBblas/internal/BlockDimensionsMultiply.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl" name="PBblas.internal.BlockDimensionsSolve" target="../PBblas/internal/BlockDimensionsSolve.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl" name="PBblas.internal.MatDims" target="../PBblas/internal/MatDims.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl" name="PBblas.MatUtils" target="../PBblas/MatUtils.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl" name="PBblas.Constants" target="../PBblas/Constants.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Interfaces/IRegression.ecl" name="ML_Core.Interfaces.IRegression" target="../ML_Core/Interfaces/IRegression.ecl.xml"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/plugins/lib_eclblas.ecllib" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/plugins/lib_eclblas.ecllib"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl" name="std.BLAS" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MakeR8Set.ecl" name="PBblas.internal.MakeR8Set" target="../PBblas/internal/MakeR8Set.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Converted.ecl" name="PBblas.internal.Converted" target="../PBblas/internal/Converted.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl" name="PBblas.gemm" target="../PBblas/gemm.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/potrf.ecl" name="PBblas.potrf" target="../PBblas/potrf.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/trsm.ecl" name="PBblas.trsm" target="../PBblas/trsm.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Utils/SequenceInField.ecl" name="ML_Core.Utils.SequenceInField" target="../ML_Core/Utils/SequenceInField.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl" name="ML_Core.FieldAggregates" target="../ML_Core/FieldAggregates.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/gamma.ecl" name="ML_Core.Math.gamma" target="../ML_Core/Math/gamma.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/log_gamma.ecl" name="ML_Core.Math.log_gamma" target="../ML_Core/Math/log_gamma.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Math/Beta.ecl" name="ML_Core.Math.Beta" target="../ML_Core/Math/Beta.ecl.xml"/><Source name="LinearRegression.OLS" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LinearRegression/OLS.ecl" target="OLS.ecl.xml">
  <Import body="0" end="251" fullname="ML_Core" inherittype="local" line="5" name="ML_Core" ref="ML_Core" remotescope="1" start="251" target="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles-docs/$$_ECLDOC-FORM_$$/ML_Core/pkg.toc.xml"/>
  <Import body="0" end="267" fullname="ML_Core.Types" inherittype="local" line="6" name="Types" ref="ML_Core.Types" start="267" target="../ML_Core/Types.ecl.xml"/>
  <Import body="0" end="289" fullname="PBblas" inherittype="local" line="7" name="PBblas" ref="PBblas" remotescope="1" start="289" target="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles-docs/$$_ECLDOC-FORM_$$/PBblas/pkg.toc.xml"/>
  <Import body="0" end="304" fullname="PBblas.Types" inherittype="local" line="8" name="pbbTypes" ref="PBblas.Types" start="304" target="../PBblas/Types.ecl.xml">
   <Documentation>
    <content>Types for the Parallel Block Basic Linear Algebra Sub-programs support WARNING: attributes marked with WARNING can not be changed without making corresponding changes to the C++ attributes.</content><firstline>Types for the Parallel Block Basic Linear Algebra Sub-programs support WARNING: attributes marked with WARNING can not be changed without making corresponding changes to the C++ attributes</firstline></Documentation>
  </Import>
  <Import body="0" end="337" fullname="PBblas.Converted" inherittype="local" line="9" name="pbbConverted" ref="PBblas.Converted" start="337" target="../PBblas/Converted.ecl.xml">
   <Documentation>
    <content>Module to convert between ML_Core/Types Field layouts (i.e. NumericField and DiscreteField) and PBblas matrix layout (i.e. Layout_Cell)</content><firstline>Module to convert between ML_Core/Types Field layouts (i.e</firstline></Documentation>
  </Import>
  <Import body="0" end="378" fullname="PBblas.MatUtils" inherittype="local" line="10" name="MatUtils" ref="PBblas.MatUtils" start="378" target="../PBblas/MatUtils.ecl.xml">
   <Documentation>
    <content>Provides various utility attributes for manipulating cell-based matrixes</content><firstline>Provides various utility attributes for manipulating cell-based matrixes</firstline><see>Std/PBblas/Types.Layout_Cell</see></Documentation>
  </Import>
  <Import body="0" end="402" fullname="ML_Core.Math" inherittype="local" line="11" name="Math" ref="ML_Core.Math" remotescope="1" start="402" target="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles-docs/$$_ECLDOC-FORM_$$/ML_Core/Math/pkg.toc.xml"/>
  <Definition body="3386" end="39929" exported="1" fullname="linearregression.ols" inherittype="local" line="82" name="OLS" start="3280">
   <Type>module</Type>
   <Params>
    <Param name="X"/>
    <Param name="Y"/>
   </Params>
   <Parents>
    <Parent name="IRegression" ref="ML_Core.Interfaces.IRegression" target="../ML_Core/Interfaces/IRegression.ecl.xml"/>
   </Parents>
   <Definition body="6085" end="6122" exported="1" fullname="linearregression.ols.getmodel" inherittype="override" line="139" name="GetModel" start="6044">
    <Type>attribute</Type>
    <Signature name="GetModel" ret="DATASET(Layout_Model)" param="" hlen="30">DATASET(Layout_Model) GetModel</Signature><Documentation>
     <content>GetModel Returns the learned model that maps X's to Y's. In the case of OLS, the model represents a set of Betas which are the coefficients of the linear model: Beta0 * 1 + Beta1 * Field1 + Beta2 * Field2 ... The ID of each model record specifies to which Y variable the coefficient applies. The Field Number ('number') indicates to which field of X the beta is to be applied. Field number 1 provides the intercept portion of the linear model and is always multiplied by 1. Note that if multiple work-items are provided within X and Y, there will be multiple models returned. The models can be separated by their work item id (i.e. 'wi'). A single model can be extracted from a myriad model by using e.g., model(wi=myWI_id). GetModel should not be called when predicting using a previously persisted model (i.e. when training data was not passed to the module.</content><firstline>GetModel Returns the learned model that maps X's to Y's</firstline><see>ML_core/Types.Layout_Model</see><return>Model in DATASET(Layout_Model) format</return></Documentation>
   </Definition>
   <Definition body="7834" end="7925" exported="1" fullname="linearregression.ols.betas" inherittype="local" line="172" name="Betas" start="7759">
    <Type>function</Type>
    <Documentation>
     <content>Return raw Beta values as numeric fields Extracts Beta values from the model. Can be used during training and prediction phases. For use during training phase, the 'model' parameter can be omitted. GetModel will be called to retrieve the model based on the training data. For use during prediction phase, a previously persisted model should be provided. The 'number' field of the returned NumericField records specifies to which Y the coefficient applies. The 'id' field of the returned record indicates the position of the Beta value. ID = 1 provides the Beta for the constant term (i.e. the Y intercept) while subsequent values reflect the Beta for each correspondingly numbered X feature. Feature 1 corresponds to Beta with 'id' = 2 and so on. If 'model' contains multiple work-items, Separate sets of Betas will be returned for each of the 'myriad' models (distinguished by 'wi').</content><firstline>Return raw Beta values as numeric fields Extracts Beta values from the model</firstline><param><name>model</name><desc>Optional parameter provides a model that was previously retrieved using GetModel. If omitted, GetModel will be used as the model.</desc></param><return>DATASET(NumericField) containing the Beta values.</return></Documentation>
    <Signature name="Betas" ret="DATASET(NumericField)" param="(DATASET(Layout_Model) model=GetModel)" hlen="27">DATASET(NumericField) Betas(DATASET(Layout_Model) model=GetModel)</Signature><Params>
     <Param name="model"/>
    </Params>
   </Definition>
   <Definition body="9281" end="9615" exported="1" fullname="linearregression.ols.predict" inherittype="override" line="199" name="Predict" start="9164">
    <Type>function</Type>
    <Documentation>
     <content>Predict the dependent variable values (Y) for any set of independent variables (X). Returns a predicted Y values for each observation (i.e. record) of X. This supports the 'myriad' style interface in that multiple independent work items may be present in 'newX', and multiple independent models may be provided in 'model'. The resulting predicted values will also be separable by work item (i.e. wi).</content><firstline>Predict the dependent variable values (Y) for any set of independent variables (X)</firstline><param><name>newX</name><desc>The set of observations of independent variables in DATASET(NumericField) format.</desc></param><param><name>model</name><desc>Optional. A model that was previously returned from GetModel (above). Note that a model from a previous run will only be valid if the field numbers in X are the same as when the model was learned. If this parameter is omitted, the current model will be used.</desc></param><return>An estimation of the corresponding Y value for each observation of newX. Returned in DATASET(NumericField) format with field number (i.e. 'number') indicating the dependent variable that is predicted.</return></Documentation>
    <Signature name="Predict" ret="DATASET(NumericField)" param="(DATASET(NumericField) newX, DATASET(Layout_Model) model=GetModel)" hlen="29">DATASET(NumericField) Predict(DATASET(NumericField) newX, DATASET(Layout_Model) model=GetModel)</Signature><Params>
     <Param name="newX"/>
     <Param name="model"/>
    </Params>
   </Definition>
   <Definition body="12032" end="12155" exported="1" fullname="linearregression.ols.makersq" inherittype="local" line="282" name="makeRSQ" start="11995">
    <Type>transform</Type>
    <Params>
     <Param name="coco"/>
    </Params>
    <Signature name="makeRSQ" ret="R2Rec" param="(CoCoRec coco)" hlen="13">R2Rec makeRSQ(CoCoRec coco)</Signature><Return>r2rec</Return>
   </Definition>
   <Definition body="13934" end="13969" exported="1" fullname="linearregression.ols.rsquared" inherittype="local" line="315" name="RSquared" start="13900">
    <Type>attribute</Type>
    <Signature name="RSquared" ret="DATASET(R2Rec)" param="" hlen="23">DATASET(R2Rec) RSquared</Signature><Documentation>
     <content>RSquared Calculate the R-Squared Metric used to assess the fit of the regression line to the training data. Since the regression has chosen the best (i.e. least squared error) line matching the data, this can be thought of as a measurement of the linearity of the training data. R Squared generally varies between 0 and 1, with 1 indicating an exact linear fit, and 0 indicating that a linear fit will have no predictive power. Negative values are possible under certain conditions, and indicate that the mean(Y) will be more predictive than any linear fit. Moderate values of R squared (e.g. .5) may indicate that the relationship of X -&amp;gt; Y is non-linear, or that the measurement error is high relative to the linear correlation (e.g. many outliers). In the former case, increasing the dimensionality of X, such as by using polynomial variants of the features, may yield a better fit. R squared always increases when additional independent variables are added, so it should not be used to determine the optimal set of X variables to include. For that purpose, use Adjusted R Squared (below) which penalizes larger numbers of variables. Note that the result of this call is only meaningful during training phase (use case 1 above) as it is an analysis based on the training data which is not provided during a prediction-only phase.</content><firstline>RSquared Calculate the R-Squared Metric used to assess the fit of the regression line to the training data</firstline><return>DATASET(R2Rec) with one record per dependent variable, per work-item. The number field indicates the dependent variable and coresponds to the number field of the dependent (Y) variable to which it applies.</return></Documentation>
   </Definition>
   <Definition body="14929" end="15563" exported="1" fullname="linearregression.ols.anovarec" inherittype="local" line="335" name="AnovaRec" start="14911">
    <Type>record</Type>
    <Field name="wi" type="unsigned2"/>
    <Field name="number" type="unsigned4"/>
    <Field name="Total_SS" type="real8"/>
    <Field name="Model_SS" type="real8"/>
    <Field name="Error_SS" type="real8"/>
    <Field name="Total_DF" type="unsigned8"/>
    <Field name="Model_DF" type="unsigned8"/>
    <Field name="Error_DF" type="unsigned8"/>
    <Field name="Total_MS" type="real8"/>
    <Field name="Model_MS" type="real8"/>
    <Field name="Error_MS" type="real8"/>
    <Signature name="AnovaRec" ret="" param="" hlen="8">AnovaRec</Signature><Field name="Model_F" type="real8"/>
   </Definition>
   <Definition body="15606" end="16423" exported="1" fullname="linearregression.ols.calcanova" inherittype="local" line="350" name="calcAnova" start="15567">
    <Type>transform</Type>
    <Params>
     <Param name="le"/>
    </Params>
    <Signature name="calcAnova" ret="AnovaRec" param="(tmpRec le)" hlen="18">AnovaRec calcAnova(tmpRec le)</Signature><Return>anovarec</Return>
   </Definition>
   <Definition body="17870" end="17945" exported="1" fullname="linearregression.ols.anova" inherittype="local" line="402" name="Anova" start="17855">
    <Type>attribute</Type>
    <Signature name="Anova" ret="" param="" hlen="5">Anova</Signature><Documentation>
     <content>ANOVA (Analysis of Variance) report Analyzes the sources of variance. Basic ANOVA equality: Model + Error = Total Determines how much of the variance of Y is explained by the regression model, versus how much is due to the error term (i.e. unexplained variance). This attribute is only meaningful during the training phase. Provides one record per work-item. Each record provides the following statistics: - Total_SS -- Total Sum of Squares (SS) variance of the dependent data - Model_SS -- The SS variance represented within the model - Error_SS -- The SS variance not reflected by the model (i.e. Total_SS - Error_SS) - Total_DF -- The total degrees of freedom within the dependent data - Model_DF -- Degrees of freedom of the model - Error_DF -- Degrees of freedom of the error component - Total_MS -- The Mean Square (MS) variance of the dependent data - Model_MS -- The Mean Square (MS) variance represented within the model - Error_MS -- The MS variance not reflected by the model - Model_F -- The F-Test statistic: Model_MS / Error_MS</content><firstline>ANOVA (Analysis of Variance) report Analyzes the sources of variance</firstline><return>DATASET(AnovaRec), one per work-item per dependent (Y) variable The number field indicates the dependent variable to which the analysis applies.</return></Documentation>
   </Definition>
   <Definition body="22677" end="22758" exported="1" fullname="linearregression.ols.se" inherittype="local" line="507" name="SE" start="22643">
    <Type>attribute</Type>
    <Signature name="SE" ret="DATASET(NumericField)" param="" hlen="24">DATASET(NumericField) SE</Signature><Documentation>
     <content>Standard Error of the Regression Coefficients Describes the variability of the regression error for each coefficient. Only meaningful during the training phase.</content><firstline>Standard Error of the Regression Coefficients Describes the variability of the regression error for each coefficient</firstline><return>DATASET(NumericField), one record per Beta coefficient per dependent variable per work-item. The 'id' field is the coefficient number, with 1 being the Y intercept, 2 being the coefficient for the first feature, etc. The 'number' field indicates the dependent variable to which the coefficient applies.</return></Documentation>
   </Definition>
   <Definition body="23797" end="23992" exported="1" fullname="linearregression.ols.tstat" inherittype="local" line="535" name="TStat" start="23760">
    <Type>attribute</Type>
    <Signature name="TStat" ret="DATASET(NumericField)" param="" hlen="27">DATASET(NumericField) TStat</Signature><Documentation>
     <content>T-Statistic The T-statistic identifies the significance of the value of each regression coefficient. Its calculation is simply the value of the coefficient divided by the Standard Error of the coefficient. A larger absolute value of the T-statistic indicates that the coefficient is more significant. Only meaningful during the training phase.</content><firstline>T-Statistic The T-statistic identifies the significance of the value of each regression coefficient</firstline><return>DATSET(NumericField), one record per Beta coefficient per dependent variable per work-item. The 'id' field is the coefficient number, with 1 being the Y intercept, 2 being the coefficient for the first feature, etc. The number field indicates the dependent variable to which the coefficient applies.</return></Documentation>
   </Definition>
   <Definition body="24999" end="25146" exported="1" fullname="linearregression.ols.adjrsquared" inherittype="local" line="560" name="AdjRSquared" start="24963">
    <Type>attribute</Type>
    <Signature name="AdjRSquared" ret="DATASET(R2Rec)" param="" hlen="26">DATASET(R2Rec) AdjRSquared</Signature><Documentation>
     <content>Adjusted R2 Calculate Adjusted R Squared which is a scaled version of R Squared that does not arbitrarily increase with the number of features. Adjusted R2, rather than R2 should always be used when trying to determine the best set of features to include in a model. When adding features, R2 will always increase, whether or not it improves the predictive power of the model. Adjusted R2, however, will only increase with the predictive power of the model.</content><firstline>Adjusted R2 Calculate Adjusted R Squared which is a scaled version of R Squared that does not arbitrarily increase with the number of features</firstline><return>DATASET(R2Rec), one record per dependent variable per work-item. The number field indicates the dependent variable and corresponds to the number field of the dependent (Y) variable to which it applies.</return></Documentation>
   </Definition>
   <Definition body="25236" end="25323" exported="1" fullname="linearregression.ols.aicrec" inherittype="local" line="567" name="AICRec" start="25220">
    <Type>record</Type>
    <Field name="wi" type="unsigned2"/>
    <Field name="number" type="unsigned4"/>
    <Signature name="AICRec" ret="" param="" hlen="6">AICRec</Signature><Field name="AIC" type="real8"/>
   </Definition>
   <Definition body="26623" end="26655" exported="1" fullname="linearregression.ols.aic" inherittype="local" line="601" name="AIC" start="26594">
    <Type>attribute</Type>
    <Signature name="AIC" ret="DATASET(AICRec)" param="" hlen="19">DATASET(AICRec) AIC</Signature><Documentation>
     <content>Akaike Information Criterion (AIC) Information theory based criterion for assessing Goodness of Fit (GOF). Lower values mean better fit.</content><firstline>Akaike Information Criterion (AIC) Information theory based criterion for assessing Goodness of Fit (GOF)</firstline><return>DATASET(AICRec), one record per dependent variable per work-item. The number field indicates the dependent variable and corresponds to the number field of the dependent (Y) variable to which it applies.</return></Documentation>
   </Definition>
   <Definition body="26915" end="27070" exported="1" fullname="linearregression.ols.rangevec" inherittype="local" line="609" name="RangeVec" start="26897">
    <Type>record</Type>
    <Field name="RangeNumber" type="unsigned8"/>
    <Field name="RangeLow" type="real8"/>
    <Field name="RangeHigh" type="real8"/>
    <Signature name="RangeVec" ret="" param="" hlen="8">RangeVec</Signature><Field name="P" type="real8"/>
   </Definition>
   <Definition body="27155" end="29244" exported="1" fullname="linearregression.ols.distributionbase" inherittype="local" line="617" name="DistributionBase" start="27104" virtual="1">
    <Type>module</Type>
    <Params>
     <Param name="Nranges"/>
    </Params>
    <Parents/>
    <Definition body="27188" end="27191" exported="1" fullname="linearregression.ols.distributionbase.low" inherittype="local" line="618" name="Low" start="27175">
     <Signature name="Low" ret="" param="" hlen="3">Low</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="27245" end="27250" exported="1" fullname="linearregression.ols.distributionbase.high" inherittype="local" line="619" name="High" start="27231">
     <Signature name="High" ret="" param="" hlen="4">High</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="27333" end="27338" exported="1" fullname="linearregression.ols.distributionbase.density" inherittype="local" line="620" name="Density" start="27289">
     <Type>function</Type>
     <Signature name="Density" ret="t_FieldReal" param="(t_FieldReal t)" hlen="19">t_FieldReal Density(t_FieldReal t)</Signature><Params>
      <Param name="t"/>
     </Params>
    </Definition>
    <Definition body="27399" end="27423" exported="1" fullname="linearregression.ols.distributionbase.rangewidth" inherittype="local" line="621" name="RangeWidth" start="27379">
     <Signature name="RangeWidth" ret="" param="" hlen="10">RangeWidth</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="27466" end="27895" exported="1" fullname="linearregression.ols.distributionbase.densityv" inherittype="local" line="622" name="DensityV" start="27428">
     <Type>function</Type>
     <Signature name="DensityV" ret="DATASET(RangeVec)" param="()" hlen="26">DATASET(RangeVec) DensityV()</Signature><Params/>
    </Definition>
    <Definition body="28006" end="28220" exported="1" fullname="linearregression.ols.distributionbase.cumulativev" inherittype="local" line="634" name="CumulativeV" start="27983">
     <Type>function</Type>
     <Signature name="CumulativeV" ret="" param="()" hlen="11">CumulativeV()</Signature><Params/>
    </Definition>
    <Definition body="28530" end="28754" exported="1" fullname="linearregression.ols.distributionbase.cumulative" inherittype="local" line="647" name="Cumulative" start="28483">
     <Type>function</Type>
     <Signature name="Cumulative" ret="t_FieldReal" param="(t_FieldReal t)" hlen="22">t_FieldReal Cumulative(t_FieldReal t)</Signature><Params>
      <Param name="t"/>
     </Params>
    </Definition>
    <Definition body="28863" end="29114" exported="1" fullname="linearregression.ols.distributionbase.ntile" inherittype="local" line="655" name="NTile" start="28820">
     <Type>function</Type>
     <Signature name="NTile" ret="t_FieldReal" param="(t_FieldReal Pc)" hlen="17">t_FieldReal NTile(t_FieldReal Pc)</Signature><Params>
      <Param name="Pc"/>
     </Params>
    </Definition>
    <Definition body="29158" end="29163" exported="1" fullname="linearregression.ols.distributionbase.invdensity" inherittype="local" line="662" name="InvDensity" start="29119">
     <Type>function</Type>
     <Signature name="InvDensity" ret="" param="(t_FieldReal delta)" hlen="10">InvDensity(t_FieldReal delta)</Signature><Params>
      <Param name="delta"/>
     </Params>
    </Definition>
    <Signature name="DistributionBase" ret="" param="(t_Count Nranges = 10000)" hlen="16">DistributionBase(t_Count Nranges = 10000)</Signature><Definition body="29230" end="29237" exported="1" fullname="linearregression.ols.distributionbase.discrete" inherittype="local" line="663" name="Discrete" start="29212">
     <Signature name="Discrete" ret="" param="" hlen="8">Discrete</Signature><Type>attribute</Type>
    </Definition>
   </Definition>
   <Definition body="29506" end="31702" exported="1" fullname="linearregression.ols.tdistribution" inherittype="local" line="670" name="TDistribution" start="29442">
    <Type>module</Type>
    <Params>
     <Param name="v_in"/>
     <Param name="NRanges"/>
    </Params>
    <Parents>
     <Parent name="DistributionBase" ref="linearregression.ols.distributionbase" target="OLS.ecl.xml"/>
    </Parents>
    <Definition body="27466" end="27895" exported="1" fullname="linearregression.ols.distributionbase.densityv" inherittype="override" line="622" name="DensityV" start="27428">
     <Type>function</Type>
     <Signature name="DensityV" ret="DATASET(RangeVec)" param="()" hlen="26">DATASET(RangeVec) DensityV()</Signature><Params/>
    </Definition>
    <Definition body="28863" end="29114" exported="1" fullname="linearregression.ols.distributionbase.ntile" inherittype="override" line="655" name="NTile" start="28820">
     <Type>function</Type>
     <Signature name="NTile" ret="t_FieldReal" param="(t_FieldReal Pc)" hlen="17">t_FieldReal NTile(t_FieldReal Pc)</Signature><Params>
      <Param name="Pc"/>
     </Params>
    </Definition>
    <Definition body="29230" end="29237" exported="1" fullname="linearregression.ols.distributionbase.discrete" inherittype="inherited" line="663" name="Discrete" start="29212">
     <Signature name="Discrete" ret="" param="" hlen="8">Discrete</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="29808" end="29858" exported="1" fullname="linearregression.ols.tdistribution.invdensity" inherittype="override" line="675" name="InvDensity" start="29769">
     <Type>function</Type>
     <Signature name="InvDensity" ret="" param="(t_FieldReal delta)" hlen="10">InvDensity(t_FieldReal delta)</Signature><Params>
      <Param name="delta"/>
     </Params>
    </Definition>
    <Definition body="30013" end="30017" exported="1" fullname="linearregression.ols.tdistribution.high" inherittype="override" line="678" name="High" start="29999">
     <Signature name="High" ret="" param="" hlen="4">High</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="30035" end="30038" exported="1" fullname="linearregression.ols.tdistribution.low" inherittype="inherited" line="679" name="Low" start="30022">
     <Signature name="Low" ret="" param="" hlen="3">Low</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="30063" end="30083" exported="1" fullname="linearregression.ols.tdistribution.rangewidth" inherittype="override" line="680" name="RangeWidth" start="30043">
     <Signature name="RangeWidth" ret="" param="" hlen="10">RangeWidth</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="30212" end="30259" exported="1" fullname="linearregression.ols.tdistribution.density" inherittype="override" line="682" name="Density" start="30168">
     <Type>function</Type>
     <Signature name="Density" ret="t_FieldReal" param="(t_FieldReal t)" hlen="19">t_FieldReal Density(t_FieldReal t)</Signature><Params>
      <Param name="t"/>
     </Params>
    </Definition>
    <Definition body="30287" end="30932" exported="1" fullname="linearregression.ols.tdistribution.cumulativev" inherittype="override" line="683" name="CumulativeV" start="30264">
     <Type>function</Type>
     <Signature name="CumulativeV" ret="" param="()" hlen="11">CumulativeV()</Signature><Params/>
    </Definition>
    <Signature name="TDistribution" ret="" param="(t_Discrete v_in,t_Count NRanges = 10000)" hlen="13">TDistribution(t_Discrete v_in,t_Count NRanges = 10000)</Signature><Definition body="31035" end="31695" exported="1" fullname="linearregression.ols.tdistribution.cumulative" inherittype="override" line="696" name="Cumulative" start="30988">
     <Type>function</Type>
     <Signature name="Cumulative" ret="t_FieldReal" param="(t_FieldReal t)" hlen="22">t_FieldReal Cumulative(t_FieldReal t)</Signature><Params>
      <Param name="t"/>
     </Params>
    </Definition>
   </Definition>
   <Definition body="31809" end="33046" exported="1" fullname="linearregression.ols.fdistribution" inherittype="local" line="709" name="FDistribution" start="31725">
    <Type>module</Type>
    <Params>
     <Param name="d1_in"/>
     <Param name="d2_in"/>
     <Param name="NRanges"/>
    </Params>
    <Parents>
     <Parent name="DistributionBase" ref="linearregression.ols.distributionbase" target="OLS.ecl.xml"/>
    </Parents>
    <Definition body="27466" end="27895" exported="1" fullname="linearregression.ols.distributionbase.densityv" inherittype="override" line="622" name="DensityV" start="27428">
     <Type>function</Type>
     <Signature name="DensityV" ret="DATASET(RangeVec)" param="()" hlen="26">DATASET(RangeVec) DensityV()</Signature><Params/>
    </Definition>
    <Definition body="28006" end="28220" exported="1" fullname="linearregression.ols.distributionbase.cumulativev" inherittype="override" line="634" name="CumulativeV" start="27983">
     <Type>function</Type>
     <Signature name="CumulativeV" ret="" param="()" hlen="11">CumulativeV()</Signature><Params/>
    </Definition>
    <Definition body="28530" end="28754" exported="1" fullname="linearregression.ols.distributionbase.cumulative" inherittype="override" line="647" name="Cumulative" start="28483">
     <Type>function</Type>
     <Signature name="Cumulative" ret="t_FieldReal" param="(t_FieldReal t)" hlen="22">t_FieldReal Cumulative(t_FieldReal t)</Signature><Params>
      <Param name="t"/>
     </Params>
    </Definition>
    <Definition body="28863" end="29114" exported="1" fullname="linearregression.ols.distributionbase.ntile" inherittype="override" line="655" name="NTile" start="28820">
     <Type>function</Type>
     <Signature name="NTile" ret="t_FieldReal" param="(t_FieldReal Pc)" hlen="17">t_FieldReal NTile(t_FieldReal Pc)</Signature><Params>
      <Param name="Pc"/>
     </Params>
    </Definition>
    <Definition body="29158" end="29163" exported="1" fullname="linearregression.ols.distributionbase.invdensity" inherittype="inherited" line="662" name="InvDensity" start="29119">
     <Type>function</Type>
     <Signature name="InvDensity" ret="" param="(t_FieldReal delta)" hlen="10">InvDensity(t_FieldReal delta)</Signature><Params>
      <Param name="delta"/>
     </Params>
    </Definition>
    <Definition body="29230" end="29237" exported="1" fullname="linearregression.ols.distributionbase.discrete" inherittype="inherited" line="663" name="Discrete" start="29212">
     <Signature name="Discrete" ret="" param="" hlen="8">Discrete</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="31921" end="31924" exported="1" fullname="linearregression.ols.fdistribution.low" inherittype="inherited" line="712" name="Low" start="31908">
     <Signature name="Low" ret="" param="" hlen="3">Low</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="31943" end="31947" exported="1" fullname="linearregression.ols.fdistribution.high" inherittype="override" line="713" name="High" start="31929">
     <Signature name="High" ret="" param="" hlen="4">High</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="31972" end="31994" exported="1" fullname="linearregression.ols.fdistribution.rangewidth" inherittype="override" line="714" name="RangeWidth" start="31952">
     <Signature name="RangeWidth" ret="" param="" hlen="10">RangeWidth</Signature><Type>attribute</Type>
    </Definition>
    <Signature name="FDistribution" ret="" param="(t_Discrete d1_in, t_Discrete d2_in, t_Count NRanges = 10000)" hlen="13">FDistribution(t_Discrete d1_in, t_Discrete d2_in, t_Count NRanges = 10000)</Signature><Definition body="32148" end="32267" exported="1" fullname="linearregression.ols.fdistribution.density" inherittype="override" line="717" name="Density" start="32104">
     <Type>function</Type>
     <Signature name="Density" ret="t_FieldReal" param="(t_FieldReal t)" hlen="19">t_FieldReal Density(t_FieldReal t)</Signature><Params>
      <Param name="t"/>
     </Params>
    </Definition>
   </Definition>
   <Definition body="33119" end="33244" exported="1" fullname="linearregression.ols.normaldistribution" inherittype="local" line="731" name="NormalDistribution" start="33074">
    <Type>module</Type>
    <Params>
     <Param name="NRanges"/>
    </Params>
    <Parents>
     <Parent name="DistributionBase" ref="linearregression.ols.distributionbase" target="OLS.ecl.xml"/>
    </Parents>
    <Definition body="27188" end="27191" exported="1" fullname="linearregression.ols.distributionbase.low" inherittype="inherited" line="618" name="Low" start="27175">
     <Signature name="Low" ret="" param="" hlen="3">Low</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="27245" end="27250" exported="1" fullname="linearregression.ols.distributionbase.high" inherittype="inherited" line="619" name="High" start="27231">
     <Signature name="High" ret="" param="" hlen="4">High</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="27399" end="27423" exported="1" fullname="linearregression.ols.distributionbase.rangewidth" inherittype="override" line="621" name="RangeWidth" start="27379">
     <Signature name="RangeWidth" ret="" param="" hlen="10">RangeWidth</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="27466" end="27895" exported="1" fullname="linearregression.ols.distributionbase.densityv" inherittype="override" line="622" name="DensityV" start="27428">
     <Type>function</Type>
     <Signature name="DensityV" ret="DATASET(RangeVec)" param="()" hlen="26">DATASET(RangeVec) DensityV()</Signature><Params/>
    </Definition>
    <Definition body="28006" end="28220" exported="1" fullname="linearregression.ols.distributionbase.cumulativev" inherittype="override" line="634" name="CumulativeV" start="27983">
     <Type>function</Type>
     <Signature name="CumulativeV" ret="" param="()" hlen="11">CumulativeV()</Signature><Params/>
    </Definition>
    <Definition body="28530" end="28754" exported="1" fullname="linearregression.ols.distributionbase.cumulative" inherittype="override" line="647" name="Cumulative" start="28483">
     <Type>function</Type>
     <Signature name="Cumulative" ret="t_FieldReal" param="(t_FieldReal t)" hlen="22">t_FieldReal Cumulative(t_FieldReal t)</Signature><Params>
      <Param name="t"/>
     </Params>
    </Definition>
    <Definition body="28863" end="29114" exported="1" fullname="linearregression.ols.distributionbase.ntile" inherittype="override" line="655" name="NTile" start="28820">
     <Type>function</Type>
     <Signature name="NTile" ret="t_FieldReal" param="(t_FieldReal Pc)" hlen="17">t_FieldReal NTile(t_FieldReal Pc)</Signature><Params>
      <Param name="Pc"/>
     </Params>
    </Definition>
    <Definition body="29158" end="29163" exported="1" fullname="linearregression.ols.distributionbase.invdensity" inherittype="inherited" line="662" name="InvDensity" start="29119">
     <Type>function</Type>
     <Signature name="InvDensity" ret="" param="(t_FieldReal delta)" hlen="10">InvDensity(t_FieldReal delta)</Signature><Params>
      <Param name="delta"/>
     </Params>
    </Definition>
    <Definition body="29230" end="29237" exported="1" fullname="linearregression.ols.distributionbase.discrete" inherittype="inherited" line="663" name="Discrete" start="29212">
     <Signature name="Discrete" ret="" param="" hlen="8">Discrete</Signature><Type>attribute</Type>
    </Definition>
    <Signature name="NormalDistribution" ret="" param="(t_Count NRanges)" hlen="18">NormalDistribution(t_Count NRanges)</Signature><Definition body="33201" end="33237" exported="1" fullname="linearregression.ols.normaldistribution.density" inherittype="override" line="732" name="Density" start="33157">
     <Type>function</Type>
     <Signature name="Density" ret="t_FieldReal" param="(t_FieldReal t)" hlen="19">t_FieldReal Density(t_FieldReal t)</Signature><Params>
      <Param name="t"/>
     </Params>
    </Definition>
   </Definition>
   <Definition body="34820" end="34881" exported="1" fullname="linearregression.ols.pval" inherittype="local" line="768" name="pVal" start="34806">
    <Type>attribute</Type>
    <Signature name="pVal" ret="" param="" hlen="4">pVal</Signature><Documentation>
     <content>P-Value Calculate the P-value for each coefficient, which is the probability that the coefficient is insignificant (i.e. actually zero). A low P-value (e.g. .05) provides evidence that the coefficient is significant in the model. A high P-value indicates that the coefficient value should, in fact, be zero. P-value is related to the T-Statistic, and can be thought of as a normalized version of the T-Statistic. Only meaningful during the training phase.</content><firstline>P-Value Calculate the P-value for each coefficient, which is the probability that the coefficient is insignificant (i.e</firstline><return>DATSET(NumericField), one record per Beta coefficient per dependent variable per work-item. The 'id' field is the coefficient number, with 1 being the Y intercept, 2 being the coefficient for the first feature, etc. The number field indicates the dependent variable and corresponds to the number field of the dependent (Y) variable to which it applies.</return></Documentation>
   </Definition>
   <Definition body="34930" end="35075" exported="1" fullname="linearregression.ols.confintrec" inherittype="local" line="771" name="ConfintRec" start="34910">
    <Type>record</Type>
    <Field name="wi" type="unsigned2"/>
    <Field name="id" type="unsigned8"/>
    <Field name="number" type="unsigned4"/>
    <Field name="LowerInt" type="real8"/>
    <Signature name="ConfintRec" ret="" param="" hlen="10">ConfintRec</Signature><Field name="UpperInt" type="real8"/>
   </Definition>
   <Definition body="36958" end="37739" exported="1" fullname="linearregression.ols.confint" inherittype="local" line="816" name="ConfInt" start="36916">
    <Type>function</Type>
    <Documentation>
     <content>Confidence Interval The Confidence Interval determines the upper and lower bounds of each estimated coefficient given a confidence level (level) that is required. For example, one could say that there is a 95% probability (level) that the coefficient of the first independent variable is between 2.05 and 3.62. This allows error margins to be determined with the desired confidence level. If the confidence interval spans zero, it implies that the coefficient may not be significant at the specified confidence level.</content><firstline>Confidence Interval The Confidence Interval determines the upper and lower bounds of each estimated coefficient given a confidence level (level) that is required</firstline><param><name>level</name><desc>The level of confidence required, expressed as a percentage from 0.0 to 100.0</desc></param><return>DATASET(ConfintRec) with one record per coefficient per dependent variable per work-item. The 'id' field is the coefficient number, with 1 being the Y intercept, 2 being the coefficient for the first feature, etc. The number field indicates the dependent variable and corresponds to the number field of the dependent (Y) variable to which it applies.</return></Documentation>
    <Signature name="ConfInt" ret="" param="(Types.t_fieldReal level)" hlen="7">ConfInt(Types.t_fieldReal level)</Signature><Params>
     <Param name="level"/>
    </Params>
   </Definition>
   <Definition body="37806" end="37915" exported="1" fullname="linearregression.ols.ftestrec" inherittype="local" line="834" name="FTestRec" start="37788">
    <Type>record</Type>
    <Field name="wi" type="unsigned2"/>
    <Field name="number" type="unsigned4"/>
    <Field name="Model_F" type="real8"/>
    <Signature name="FTestRec" ret="" param="" hlen="8">FTestRec</Signature><Field name="pValue" type="real8"/>
   </Definition>
   <Definition body="39894" end="39924" exported="1" fullname="linearregression.ols.ftest" inherittype="local" line="879" name="FTest" start="39861">
    <Type>attribute</Type>
    <Signature name="FTest" ret="DATASET(FTestRec)" param="" hlen="23">DATASET(FTestRec) FTest</Signature><Documentation>
     <content>F-Test Calculate the P-value for the full regression, which is the probability that all of the coefficients are insignificant (i.e. actually zero). A low P-value (e.g. .05) provides evidence that at least one coefficient is significant. A high P-value indicates that all the coefficient values should in fact be zero, implying that the regression has no statistically significant predictive power. P-value is related to the ANOVA F-Statistic, and can be thought of as a standardized version of the ANOVA F-Statistic. The F-Test and T-Test are similar, except that the T-test is used to test the significance of each coefficient, while the F-Test is used to test the significance of the entire regression. For simple linear regression (i.e. only one independent variable, the T-Test and F-Test are equivalent.</content><firstline>F-Test Calculate the P-value for the full regression, which is the probability that all of the coefficients are insignificant (i.e</firstline><return>DATASET(FTestRec), one record per dependent variable per work-item. The number field indicates the dependent variable and corresponds to the number field of the dependent (Y) variable to which it applies.</return></Documentation>
   </Definition>
   <Signature name="OLS" ret="" param="(DATASET(NumericField) X=empty_data, DATASET(NumericField) Y=empty_data)" hlen="3">OLS(DATASET(NumericField) X=empty_data, DATASET(NumericField) Y=empty_data)</Signature><Documentation>
    <content>Ordinary Least Squares (OLS) Linear Regression aka Ordinary Linear Regression Regression learns a function that maps a set of input data (independents) to one or more output variables (dependents). The resulting learned function is known as the model. That model can then be used repetitively to predict (i.e. estimate) the output value(s) based on new input data. Two major use cases are supported: 1) Learn and return a model 2) Use an existing (e.g. persisted) model to predict new values for Y Of course, both can be done in a single run. Alternatively, the model can be persisted and used indefinitely for prediction of Y values, as long as the record format has not changed, and the original training data remains representative of the population. OLS supports any number of independent variables (Multiple Regression) and multiple dependent variables (Multivariate Regression). In this way, multiple variables' values can be predicted from the same input (i.e. independent) data. Training data is presented as parameters to this module. When using a previously persisted model (use case 2 above), these parameters should be omitted. This module provides a rich set of analytics to assess the usefulness of the resulting linear regression model, and to determine the best subset of independent variables to include in the model. These include: For the whole model: - Analysis of Variance (ANOVA) - R-squared - Adjusted R-squared - F-Test - Akaike Information Criterion (AIC) For each coefficient: - Standard Error (SE) - T-statistic - P-value - Confidence Interval</content><firstline>Ordinary Least Squares (OLS) Linear Regression aka Ordinary Linear Regression Regression learns a function that maps a set of input data (independents) to one or more output variables (dependents)</firstline><param><name>X</name><desc>The independent variable training data in DATASET(NumericField) format. Each observation (e.g. record) is identified by 'id', and each feature is identified by field number (i.e. 'number'). Omit this parameter when predicting from a persisted model.</desc></param><param><name>Y</name><desc>The dependent variable training data in DATASET(NumericField) format. Each observation (e.g. record) is identified by 'id', and each feature is identified by field number. Omit this parameter when predicting from a persisted model.</desc></param></Documentation>
  </Definition>
 <Documentation>
    <content>Ordinary Least Squares (OLS) Linear Regression aka Ordinary Linear Regression Regression learns a function that maps a set of input data (independents) to one or more output variables (dependents). The resulting learned function is known as the model. That model can then be used repetitively to predict (i.e. estimate) the output value(s) based on new input data. Two major use cases are supported: 1) Learn and return a model 2) Use an existing (e.g. persisted) model to predict new values for Y Of course, both can be done in a single run. Alternatively, the model can be persisted and used indefinitely for prediction of Y values, as long as the record format has not changed, and the original training data remains representative of the population. OLS supports any number of independent variables (Multiple Regression) and multiple dependent variables (Multivariate Regression). In this way, multiple variables' values can be predicted from the same input (i.e. independent) data. Training data is presented as parameters to this module. When using a previously persisted model (use case 2 above), these parameters should be omitted. This module provides a rich set of analytics to assess the usefulness of the resulting linear regression model, and to determine the best subset of independent variables to include in the model. These include: For the whole model: - Analysis of Variance (ANOVA) - R-squared - Adjusted R-squared - F-Test - Akaike Information Criterion (AIC) For each coefficient: - Standard Error (SE) - T-statistic - P-value - Confidence Interval</content><firstline>Ordinary Least Squares (OLS) Linear Regression aka Ordinary Linear Regression Regression learns a function that maps a set of input data (independents) to one or more output variables (dependents)</firstline><param><name>X</name><desc>The independent variable training data in DATASET(NumericField) format. Each observation (e.g. record) is identified by 'id', and each feature is identified by field number (i.e. 'number'). Omit this parameter when predicting from a persisted model.</desc></param><param><name>Y</name><desc>The dependent variable training data in DATASET(NumericField) format. Each observation (e.g. record) is identified by 'id', and each feature is identified by field number. Omit this parameter when predicting from a persisted model.</desc></param></Documentation>
  </Source>
</Meta>