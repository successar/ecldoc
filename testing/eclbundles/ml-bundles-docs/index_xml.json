{
    "root": {
        "pbblas": {
            "test": {
                "vector2diag.ecl": "PBblas/test/Vector2Diag.ecl.xml",
                "blockdimensionsmultiply.ecl": "PBblas/test/BlockDimensionsMultiply.ecl.xml",
                "blockdimensions.ecl": "PBblas/test/BlockDimensions.ecl.xml",
                "factor.ecl": "PBblas/test/Factor.ecl.xml",
                "maketestmatrix.ecl": "PBblas/test/MakeTestMatrix.ecl.xml",
                "convertedintmyr.ecl": "PBblas/test/ConvertedIntMyr.ecl.xml",
                "blockdimensionssolve.ecl": "PBblas/test/BlockDimensionsSolve.ecl.xml",
                "solve.ecl": "PBblas/test/Solve.ecl.xml",
                "tran.ecl": "PBblas/test/tran.ecl.xml",
                "axpy.ecl": "PBblas/test/axpy.ecl.xml",
                "diffreport.ecl": "PBblas/test/DiffReport.ecl.xml",
                "convertedint.ecl": "PBblas/test/ConvertedInt.ecl.xml",
                "hadamardproduct.ecl": "PBblas/test/HadamardProduct.ecl.xml",
                "matutils.ecl": "PBblas/test/MatUtils.ecl.xml",
                "apply2elements.ecl": "PBblas/test/Apply2Elements.ecl.xml",
                "asum.ecl": "PBblas/test/asum.ecl.xml",
                "scal.ecl": "PBblas/test/scal.ecl.xml",
                "matdims.ecl": "PBblas/test/MatDims.ecl.xml",
                "getrf.ecl": "PBblas/test/getrf.ecl.xml",
                "potrf.ecl": "PBblas/test/potrf.ecl.xml",
                "converted.ecl": "PBblas/test/Converted.ecl.xml",
                "multiply.ecl": "PBblas/test/Multiply.ecl.xml"
            },
            "bundle.ecl": "PBblas/Bundle.ecl.xml",
            "constants.ecl": "PBblas/Constants.ecl.xml",
            "types.ecl": "PBblas/Types.ecl.xml",
            "performance": {
                "multiplyperfprep.ecl": "PBblas/performance/MultiplyPerfPrep.ecl.xml",
                "multiplyperfmyrprep.ecl": "PBblas/performance/MultiplyPerfMyrPrep.ecl.xml",
                "solveperfmyr.ecl": "PBblas/performance/SolvePerfMyr.ecl.xml",
                "multiplyperf.ecl": "PBblas/performance/MultiplyPerf.ecl.xml",
                "hadamardproductperf.ecl": "PBblas/performance/HadamardProductPerf.ecl.xml",
                "multiplyperfmyr.ecl": "PBblas/performance/MultiplyPerfMyr.ecl.xml",
                "solveperfprep.ecl": "PBblas/performance/SolvePerfPrep.ecl.xml",
                "solveperfmyrprep.ecl": "PBblas/performance/SolvePerfMyrPrep.ecl.xml",
                "solveperf.ecl": "PBblas/performance/SolvePerf.ecl.xml"
            },
            "trsm.ecl": "PBblas/trsm.ecl.xml",
            "gemm.ecl": "PBblas/gemm.ecl.xml",
            "tran.ecl": "PBblas/tran.ecl.xml",
            "extracttri.ecl": "PBblas/ExtractTri.ecl.xml",
            "axpy.ecl": "PBblas/axpy.ecl.xml",
            "ielementfunc.ecl": "PBblas/IElementFunc.ecl.xml",
            "vector2diag.ecl": "PBblas/Vector2Diag.ecl.xml",
            "internal": {
                "types.ecl": "PBblas/internal/Types.ecl.xml",
                "blockdimensionsmultiply.ecl": "PBblas/internal/BlockDimensionsMultiply.ecl.xml",
                "matdims.ecl": "PBblas/internal/MatDims.ecl.xml",
                "fromr8set.ecl": "PBblas/internal/FromR8Set.ecl.xml",
                "blockdimensions.ecl": "PBblas/internal/BlockDimensions.ecl.xml",
                "blockdimensionssolve.ecl": "PBblas/internal/BlockDimensionsSolve.ecl.xml",
                "converted.ecl": "PBblas/internal/Converted.ecl.xml",
                "maker8set.ecl": "PBblas/internal/MakeR8Set.ecl.xml"
            },
            "matutils.ecl": "PBblas/MatUtils.ecl.xml",
            "apply2elements.ecl": "PBblas/Apply2Elements.ecl.xml",
            "asum.ecl": "PBblas/asum.ecl.xml",
            "scal.ecl": "PBblas/scal.ecl.xml",
            "getrf.ecl": "PBblas/getrf.ecl.xml",
            "potrf.ecl": "PBblas/potrf.ecl.xml",
            "converted.ecl": "PBblas/Converted.ecl.xml",
            "hadamardproduct.ecl": "PBblas/HadamardProduct.ecl.xml",
            "ecl": {
                "conftest.ecl": "PBblas/ecl/ConfTest.ecl.xml"
            }
        },
        "ml_core": {
            "interfaces": {
                "iregression.ecl": "ML_Core/Interfaces/IRegression.ecl.xml",
                "iclassify.ecl": "ML_Core/Interfaces/IClassify.ecl.xml"
            },
            "fieldaggregates.ecl": "ML_Core/FieldAggregates.ecl.xml",
            "discretize.ecl": "ML_Core/Discretize.ecl.xml",
            "constants.ecl": "ML_Core/Constants.ecl.xml",
            "math": {
                "stirlingformula.ecl": "ML_Core/Math/StirlingFormula.ecl.xml",
                "beta.ecl": "ML_Core/Math/Beta.ecl.xml",
                "log_gamma.ecl": "ML_Core/Math/log_gamma.ecl.xml",
                "doublefac.ecl": "ML_Core/Math/DoubleFac.ecl.xml",
                "gamma.ecl": "ML_Core/Math/gamma.ecl.xml",
                "uppergamma.ecl": "ML_Core/Math/upperGamma.ecl.xml",
                "distributions.ecl": "ML_Core/Math/Distributions.ecl.xml",
                "lowergamma.ecl": "ML_Core/Math/lowerGamma.ecl.xml",
                "poly.ecl": "ML_Core/Math/Poly.ecl.xml",
                "fac.ecl": "ML_Core/Math/Fac.ecl.xml",
                "nck.ecl": "ML_Core/Math/NCK.ecl.xml"
            },
            "appendseqid.ecl": "ML_Core/AppendSeqID.ecl.xml",
            "config.ecl": "ML_Core/Config.ecl.xml",
            "fromfield.ecl": "ML_Core/FromField.ecl.xml",
            "types.ecl": "ML_Core/Types.ecl.xml",
            "utils": {
                "fatd.ecl": "ML_Core/Utils/FatD.ecl.xml",
                "sequenceinfield.ecl": "ML_Core/Utils/SequenceInField.ecl.xml",
                "fat.ecl": "ML_Core/Utils/Fat.ecl.xml",
                "gini.ecl": "ML_Core/Utils/Gini.ecl.xml"
            },
            "bundle.ecl": "ML_Core/Bundle.ecl.xml",
            "tests": {
                "validate_gammas.ecl": "ML_Core/Tests/Validate_Gammas.ecl.xml",
                "test_discrete.ecl": "ML_Core/Tests/test_discrete.ecl.xml",
                "validate_betas.ecl": "ML_Core/Tests/Validate_Betas.ecl.xml",
                "field_aggregates.ecl": "ML_Core/Tests/field_aggregates.ecl.xml",
                "generate.ecl": "ML_Core/Tests/generate.ecl.xml",
                "check_dist.ecl": "ML_Core/Tests/Check_Dist.ecl.xml",
                "test_appends.ecl": "ML_Core/Tests/test_appends.ecl.xml",
                "to_from.ecl": "ML_Core/Tests/to_from.ecl.xml"
            },
            "appendid.ecl": "ML_Core/AppendID.ecl.xml",
            "generate.ecl": "ML_Core/Generate.ecl.xml",
            "tofield.ecl": "ML_Core/ToField.ecl.xml"
        },
        "linearregression": {
            "test": {
                "datasets": {
                    "friedman1ds.ecl": "LinearRegression/test/Datasets/friedman1DS.ecl.xml",
                    "servods.ecl": "LinearRegression/test/Datasets/servoDS.ecl.xml",
                    "friedman3ds.ecl": "LinearRegression/test/Datasets/friedman3DS.ecl.xml",
                    "friedman2ds.ecl": "LinearRegression/test/Datasets/friedman2DS.ecl.xml",
                    "housingds.ecl": "LinearRegression/test/Datasets/housingDS.ecl.xml",
                    "abaloneds.ecl": "LinearRegression/test/Datasets/AbaloneDS.ecl.xml"
                },
                "olsanalytics.ecl": "LinearRegression/test/OLSAnalytics.ecl.xml",
                "olspredict.ecl": "LinearRegression/test/OLSPredict.ecl.xml",
                "utils": {
                    "extractdeps.ecl": "LinearRegression/test/Utils/ExtractDeps.ecl.xml",
                    "types.ecl": "LinearRegression/test/Utils/Types.ecl.xml",
                    "getnumberoffields.ecl": "LinearRegression/test/Utils/GetNumberofFields.ecl.xml",
                    "extractindeps.ecl": "LinearRegression/test/Utils/ExtractIndeps.ecl.xml"
                },
                "olsvalidate.ecl": "LinearRegression/test/OLSValidate.ecl.xml"
            },
            "performance": {
                "olsperformance.ecl": "LinearRegression/performance/OLSPerformance.ecl.xml",
                "olsperf.ecl": "LinearRegression/performance/OLSPerf.ecl.xml",
                "olsperfmyrprep.ecl": "LinearRegression/performance/OLSPerfMyrPrep.ecl.xml",
                "olsperfmyr.ecl": "LinearRegression/performance/OLSPerfMyr.ecl.xml",
                "olsperfprep.ecl": "LinearRegression/performance/OLSPerfPrep.ecl.xml"
            },
            "bundle.ecl": "LinearRegression/Bundle.ecl.xml",
            "ols.ecl": "LinearRegression/OLS.ecl.xml"
        },
        "logisticregression": {
            "dimm.ecl": "LogisticRegression/dimm.ecl.xml",
            "null_deviance.ecl": "LogisticRegression/Null_Deviance.ecl.xml",
            "logitpredict.ecl": "LogisticRegression/LogitPredict.ecl.xml",
            "constants.ecl": "LogisticRegression/Constants.ecl.xml",
            "binomialconfusion.ecl": "LogisticRegression/BinomialConfusion.ecl.xml",
            "logitscore.ecl": "LogisticRegression/LogitScore.ecl.xml",
            "model_deviance.ecl": "LogisticRegression/Model_Deviance.ecl.xml",
            "deviance_analysis.ecl": "LogisticRegression/Deviance_Analysis.ecl.xml",
            "types.ecl": "LogisticRegression/Types.ecl.xml",
            "performance": {
                "runbinomial.ecl": "LogisticRegression/performance/RunBinomial.ecl.xml"
            },
            "extractbeta_ci.ecl": "LogisticRegression/ExtractBeta_CI.ecl.xml",
            "distributions.ecl": "LogisticRegression/Distributions.ecl.xml",
            "extractbeta.ecl": "LogisticRegression/ExtractBeta.ecl.xml",
            "deviance_detail.ecl": "LogisticRegression/Deviance_Detail.ecl.xml",
            "extractreport.ecl": "LogisticRegression/ExtractReport.ecl.xml",
            "irls": {
                "getmodel.ecl": "LogisticRegression/IRLS/GetModel.ecl.xml",
                "getmodel_global.ecl": "LogisticRegression/IRLS/GetModel_global.ecl.xml",
                "getmodel_local.ecl": "LogisticRegression/IRLS/GetModel_local.ecl.xml"
            },
            "binomiallogisticregression.ecl": "LogisticRegression/BinomialLogisticRegression.ecl.xml",
            "bundle.ecl": "LogisticRegression/Bundle.ecl.xml",
            "datastats.ecl": "LogisticRegression/DataStats.ecl.xml",
            "tests": {
                "check_dist.ecl": "LogisticRegression/Tests/Check_Dist.ecl.xml"
            },
            "confusion.ecl": "LogisticRegression/Confusion.ecl.xml",
            "validation": {
                "unit_test_dimm.ecl": "LogisticRegression/validation/unit_test_dimm.ecl.xml",
                "discrete_germands.ecl": "LogisticRegression/validation/discrete_GermanDS.ecl.xml",
                "binomialregression.ecl": "LogisticRegression/validation/BinomialRegression.ecl.xml",
                "irisds.ecl": "LogisticRegression/validation/IrisDS.ecl.xml"
            },
            "extractbeta_pval.ecl": "LogisticRegression/ExtractBeta_pval.ecl.xml"
        }
    }
}