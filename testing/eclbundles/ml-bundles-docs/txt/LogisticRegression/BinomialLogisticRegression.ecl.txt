IMPORTS
=======


LogisticRegression <pkg.toc.txt>
LogisticRegression.Constants <Constants.ecl.txt>
ML_Core.Interfaces <../ML_Core/Interfaces/pkg.toc.txt>
ML_Core.Types <../ML_Core/Types.ecl.txt>

DESCRIPTIONS
============


----------------------------------------------------------------------------------------------------------------------------------
MODULE : BinomialLogisticRegression(UNSIGNED max_iter=200, REAL8 epsilon=Constants.default_epsilon,
                                   REAL8 ridge=Constants.default_ridge)
----------------------------------------------------------------------------------------------------------------------------------

Binomial logistic regression using iteratively re-weighted least squares.

Parameter : max_iter ||| maximum number of iterations to try

Parameter : epsilon ||| the minimum change in the Beta value
            estimate to continue

Parameter : ridge ||| a value to populate a diagonal matrix
            that is added to a matrix help assure that the
            matrix is invertible.

Parent : ML_Core.Interfaces.IClassify <../ML_Core/Interfaces/IClassify.ecl.txt>
    
    ----------------------------------------------------------------------------------------------------------------------------------
    FUNCTION : DATASET(Types.Layout_Model) GetModel(DATASET(Types.NumericField) observations,
                                                   DATASET(Types.DiscreteField) classifications) ||| OVERRIDE
    ----------------------------------------------------------------------------------------------------------------------------------
    
    Calculate the model to fit the observation data to the observed classes.
    
    Parameter : observations ||| the observed explanatory values
    
    Parameter : classifications ||| the observed classification
                used to build the model
    
    Return : the encoded model
    
    ----------------------------------------------------------------------------------------------------------------------------------
    FUNCTION : DATASET(Types.Classify_Result) Classify(DATASET(Types.Layout_Model) model,
                                                      DATASET(Types.NumericField) new_observations) ||| OVERRIDE
    ----------------------------------------------------------------------------------------------------------------------------------
    
    Classify the observations using a model.
    
    Parameter : model ||| The model, which must be produced by a
                corresponding getModel function.
    
    Parameter : new_observations ||| observations to be classified
    
    Return : Classification with a confidence value
    
    ----------------------------------------------------------------------------------------------------------------------------------
    FUNCTION : DATASET(Types.Confusion_Detail) Report(DATASET(Types.Layout_Model) model,
                                                     DATASET(Types.NumericField) observations, DATASET(Types.DiscreteField) classifications)
                                                     ||| OVERRIDE
    ----------------------------------------------------------------------------------------------------------------------------------
    
    Report the confusion matrix for the classifier and training data.
    
    Parameter : model ||| the encoded model
    
    Parameter : observations ||| the explanatory values.
    
    Parameter : classifications ||| the classifications associated
                with the observations
    
    Return : the confusion matrix showing correct and incorrect
             results
