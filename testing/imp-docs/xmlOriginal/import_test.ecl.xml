<Meta>
 <Source name="ML_Core.Types" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl">
  <Definition body="37"
              end="3074"
              exported="1"
              fullname="ML_Core.Types"
              inherittype="local"
              line="2"
              name="Types"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
              start="22">
   <Type>module</Type>
   <Definition body="944"
               end="955"
               exported="1"
               fullname="ml_core.types.t_recordid"
               inherittype="local"
               line="22"
               name="t_RecordID"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="924">
    <Type>attribute</Type>
   </Definition>
   <Definition body="981"
               end="992"
               exported="1"
               fullname="ml_core.types.t_fieldnumber"
               inherittype="local"
               line="23"
               name="t_FieldNumber"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="958">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1016"
               end="1023"
               exported="1"
               fullname="ml_core.types.t_fieldreal"
               inherittype="local"
               line="24"
               name="t_FieldReal"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="995">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1047"
               end="1057"
               exported="1"
               fullname="ml_core.types.t_fieldsign"
               inherittype="local"
               line="25"
               name="t_FieldSign"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="1026">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1080"
               end="1090"
               exported="1"
               fullname="ml_core.types.t_discrete"
               inherittype="local"
               line="26"
               name="t_Discrete"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="1060">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1109"
               end="1120"
               exported="1"
               fullname="ml_core.types.t_item"
               inherittype="local"
               line="27"
               name="t_Item"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="1093">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1188"
               end="1200"
               exported="1"
               fullname="ml_core.types.t_count"
               inherittype="local"
               line="28"
               name="t_Count"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="1171">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1258"
               end="1269"
               exported="1"
               fullname="ml_core.types.t_work_item"
               inherittype="local"
               line="29"
               name="t_Work_Item"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="1237">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1391"
               end="1600"
               exported="1"
               fullname="ml_core.types.anyfield"
               inherittype="local"
               line="32"
               name="AnyField"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="1369">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
   </Definition>
   <Definition body="1673"
               end="1720"
               exported="1"
               fullname="ml_core.types.numericfield"
               inherittype="local"
               line="39"
               name="NumericField"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="1651">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
    <Field name="value"/>
   </Definition>
   <Definition body="1797"
               end="1843"
               exported="1"
               fullname="ml_core.types.discretefield"
               inherittype="local"
               line="44"
               name="DiscreteField"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="1774">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
    <Field name="value"/>
   </Definition>
   <Definition body="1953"
               end="2200"
               exported="1"
               fullname="ml_core.types.layout_model"
               inherittype="local"
               line="49"
               name="Layout_Model"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="1931">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
    <Field name="value"/>
   </Definition>
   <Definition body="2261"
               end="2336"
               exported="1"
               fullname="ml_core.types.classify_result"
               inherittype="local"
               line="57"
               name="Classify_Result"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="2236">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
    <Field name="value"/>
    <Field name="conf"/>
   </Definition>
   <Definition body="2357"
               end="2410"
               exported="1"
               fullname="ml_core.types.l_result"
               inherittype="local"
               line="60"
               name="l_result"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="2339">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
    <Field name="value"/>
    <Field name="conf"/>
   </Definition>
   <Definition body="2440"
               end="2639"
               exported="1"
               fullname="ml_core.types.confusion_detail"
               inherittype="local"
               line="62"
               name="Confusion_Detail"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="2414">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="classifier"/>
    <Field name="actual_class"/>
    <Field name="predict_class"/>
    <Field name="occurs"/>
    <Field name="correct"/>
   </Definition>
   <Definition body="2711"
               end="2782"
               exported="1"
               fullname="ml_core.types.itemelement"
               inherittype="local"
               line="72"
               name="ItemElement"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="2690">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="value"/>
    <Field name="id"/>
   </Definition>
   <Definition body="2848"
               end="2858"
               exported="1"
               fullname="ml_core.types.t_node"
               inherittype="local"
               line="79"
               name="t_node"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="2831">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2942"
               end="2953"
               exported="1"
               fullname="ml_core.types.t_level"
               inherittype="local"
               line="80"
               name="t_level"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="2925">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2995"
               end="3069"
               exported="1"
               fullname="ml_core.types.nodeid"
               inherittype="local"
               line="81"
               name="NodeID"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Types.ecl"
               start="2978">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="node_id"/>
    <Field name="level"/>
   </Definition>
   <Parents/>
  </Definition>
 </Source>
 <Source name="Config" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Config.ecl">
  <Definition body="115"
              end="310"
              exported="1"
              fullname="Config"
              inherittype="local"
              line="3"
              name="Config"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Config.ecl"
              start="99">
   <Type>module</Type>
   <Definition body="144"
               end="156"
               exported="1"
               fullname="config.maxlookup"
               inherittype="local"
               line="4"
               name="MaxLookup"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Config.ecl"
               start="125">
    <Type>attribute</Type>
   </Definition>
   <Definition body="207"
               end="211"
               exported="1"
               fullname="config.discrete"
               inherittype="local"
               line="5"
               name="Discrete"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Config.ecl"
               start="189">
    <Type>attribute</Type>
   </Definition>
   <Definition body="291"
               end="305"
               exported="1"
               fullname="config.roundingerror"
               inherittype="local"
               line="6"
               name="RoundingError"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Config.ecl"
               start="268">
    <Type>attribute</Type>
   </Definition>
   <Parents/>
  </Definition>
 </Source>
 <Source name="std.system.ThorLib" sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl">
  <Definition body="464"
              end="1191"
              inherittype="local"
              line="11"
              name="externals"
              source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl"
              start="452">
   <Type>module</Type>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="node"
               inherittype="local"
               line="13"
               name="node"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="nodes"
               inherittype="local"
               line="14"
               name="nodes"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="l2p"
               inherittype="local"
               line="15"
               name="l2p"
               start="0">
    <Type>function</Type>
    <Params>
     <Param name="name"/>
     <Param name="create"/>
    </Params>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="getfileoffset"
               inherittype="local"
               line="16"
               name="getFileOffset"
               start="0">
    <Type>function</Type>
    <Params>
     <Param name="lfname"/>
    </Params>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="daliserver"
               inherittype="local"
               line="17"
               name="daliServer"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="cluster"
               inherittype="local"
               line="18"
               name="cluster"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="getexpandlogicalname"
               inherittype="local"
               line="19"
               name="getExpandLogicalName"
               start="0">
    <Type>function</Type>
    <Params>
     <Param name="name"/>
    </Params>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="group"
               inherittype="local"
               line="20"
               name="group"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="platform"
               inherittype="local"
               line="21"
               name="platform"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Parents/>
  </Definition>
 </Source>
 <Source name="ML_Core.Utils.SequenceInField" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Utils/SequenceInField.ecl">
  <Definition body="770"
              end="2150"
              exported="1"
              fullname="ml_core.utils.sequenceinfield"
              inherittype="local"
              line="16"
              name="SequenceInField"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Utils/SequenceInField.ecl"
              start="712">
   <Type>macro</Type>
   <Documentation>
    <content>&#10;&#32;* Given a file which is sorted by the work item identifier and
 * INFIELD (and possibly other values), add sequence numbers within
 * the range of each infield.
 * Slighly elaborate code is to avoid having to partition the data
 * to one value of infield per node and to work with very large
 * numbers of records where a global count project would be
 * inappropriate.
 * This is useful for assigning rank positions with the groupings.
 *@param infile the input file, any type
 *@param infield field name of grouping field
 *@param seq name of the field to receive the sequence number
 *@param wi_name work item field name, default is wi
 *@return a file of the same type with sequence numbers applied&#10;&#32;</content>
   </Documentation>
   <Params>
    <Param name="infile"/>
    <Param name="infield"/>
    <Param name="seq"/>
    <Param name="wi_name"/>
   </Params>
  </Definition>
 </Source>
 <Source name="FieldAggregates" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl">
  <Definition body="167"
              end="5644"
              exported="1"
              fullname="fieldaggregates"
              inherittype="local"
              line="6"
              name="FieldAggregates"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl"
              start="111">
   <Type>module</Type>
   <Params>
    <Param name="d"/>
   </Params>
   <Parents/>
   <Definition body="644"
               end="681"
               exported="1"
               fullname="fieldaggregates.simple"
               inherittype="local"
               line="19"
               name="Simple"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl"
               start="629">
    <Type>attribute</Type>
   </Definition>
   <Definition body="915"
               end="918"
               exported="1"
               fullname="fieldaggregates.simpleranked"
               inherittype="local"
               line="28"
               name="SimpleRanked"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl"
               start="893">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1516"
               end="1790"
               exported="1"
               fullname="fieldaggregates.medians"
               inherittype="local"
               line="42"
               name="Medians"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl"
               start="1500">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2557"
               end="2693"
               exported="1"
               fullname="fieldaggregates.minmednext"
               inherittype="local"
               line="63"
               name="MinMedNext"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl"
               start="2538">
    <Type>attribute</Type>
   </Definition>
   <Definition body="3021"
               end="3154"
               exported="1"
               fullname="fieldaggregates.buckets"
               inherittype="local"
               line="74"
               name="Buckets"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl"
               start="2976">
    <Type>function</Type>
    <Params>
     <Param name="n"/>
    </Params>
   </Definition>
   <Definition body="3207"
               end="3460"
               exported="1"
               fullname="fieldaggregates.bucketranges"
               inherittype="local"
               line="78"
               name="BucketRanges"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl"
               start="3157">
    <Type>function</Type>
    <Params>
     <Param name="n"/>
    </Params>
   </Definition>
   <Definition body="3672"
               end="3716"
               fullname="fieldaggregates.t"
               inherittype="local"
               line="93"
               name="T"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl"
               start="3661">
    <Type>attribute</Type>
   </Definition>
   <Definition body="3841"
               end="4298"
               exported="1"
               fullname="fieldaggregates.modes"
               inherittype="local"
               line="96"
               name="Modes"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl"
               start="3827">
    <Type>attribute</Type>
   </Definition>
   <Definition body="4338"
               end="4432"
               exported="1"
               fullname="fieldaggregates.cardinality"
               inherittype="local"
               line="106"
               name="Cardinality"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl"
               start="4318">
    <Type>attribute</Type>
   </Definition>
   <Definition body="4619"
               end="4802"
               exported="1"
               fullname="fieldaggregates.rankedinput"
               inherittype="local"
               line="117"
               name="RankedInput"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl"
               start="4598">
    <Type>attribute</Type>
   </Definition>
   <Definition body="5093"
               end="5291"
               exported="1"
               fullname="fieldaggregates.ntiles"
               inherittype="local"
               line="128"
               name="NTiles"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl"
               start="5058">
    <Type>function</Type>
    <Params>
     <Param name="n"/>
    </Params>
   </Definition>
   <Definition body="5334"
               end="5613"
               exported="1"
               fullname="fieldaggregates.ntileranges"
               inherittype="local"
               line="132"
               name="NTileRanges"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/FieldAggregates.ecl"
               start="5294">
    <Type>function</Type>
    <Params>
     <Param name="n"/>
    </Params>
   </Definition>
  </Definition>
  <Import body="0"
          end="7"
          inherittype="local"
          line="1"
          name="ML_Core"
          start="7"/>
  <Import body="0"
          end="28"
          fullname="ML_Core.Types"
          inherittype="local"
          line="2"
          name="Types"
          ref="ML_Core.Types"
          start="28"/>
  <Import body="0"
          end="59"
          fullname="ML_Core.Utils"
          inherittype="local"
          line="3"
          name="Utils"
          ref="ML_Core.Utils"
          remotescope="1"
          start="59"/>
  <Import body="0"
          end="90"
          fullname="std.system.ThorLib"
          inherittype="local"
          line="4"
          name="ThorLib"
          ref="std.system.ThorLib"
          start="90"/>
 </Source>
 <Source name="Discretize" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl">
  <Definition body="463"
              end="4477"
              exported="1"
              fullname="Discretize"
              inherittype="local"
              line="13"
              name="Discretize"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
              start="443">
   <Type>module</Type>
   <Parents/>
   <Definition body="663"
               end="696"
               exported="1"
               inherittype="local"
               line="18"
               name="c_Method"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
               start="645">
    <Type>attribute</Type>
   </Definition>
   <Definition body="717"
               end="944"
               exported="1"
               fullname="discretize.r_method"
               inherittype="local"
               line="19"
               name="r_Method"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
               start="699">
    <Type>record</Type>
    <Field name="fields"/>
    <Field name="method"/>
    <Field name="iParam1"/>
    <Field name="rParam1"/>
    <Field name="rParam2"/>
   </Definition>
   <Definition body="1406"
               end="1463"
               exported="1"
               fullname="discretize.i_byrounding"
               inherittype="local"
               line="35"
               name="i_ByRounding"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
               start="1299">
    <Type>function</Type>
    <Params>
     <Param name="f"/>
     <Param name="Scale"/>
     <Param name="Delta"/>
    </Params>
   </Definition>
   <Definition body="1596"
               end="1750"
               exported="1"
               fullname="discretize.byrounding"
               inherittype="local"
               line="39"
               name="ByRounding"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
               start="1492">
    <Type>function</Type>
    <Params>
     <Param name="d"/>
     <Param name="Scale"/>
     <Param name="Delta"/>
    </Params>
   </Definition>
   <Definition body="2175"
               end="2225"
               exported="1"
               fullname="discretize.i_bybucketing"
               inherittype="local"
               line="52"
               name="i_ByBucketing"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
               start="2051">
    <Type>function</Type>
    <Params>
     <Param name="f"/>
     <Param name="N"/>
    </Params>
   </Definition>
   <Definition body="2344"
               end="2618"
               exported="1"
               fullname="discretize.bybucketing"
               inherittype="local"
               line="55"
               name="ByBucketing"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
               start="2228">
    <Type>function</Type>
    <Params>
     <Param name="d"/>
     <Param name="N"/>
    </Params>
   </Definition>
   <Definition body="2973"
               end="3020"
               exported="1"
               fullname="discretize.i_bytiling"
               inherittype="local"
               line="69"
               name="i_ByTiling"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
               start="2855">
    <Type>function</Type>
    <Params>
     <Param name="f"/>
     <Param name="N"/>
    </Params>
   </Definition>
   <Definition body="3134"
               end="3406"
               exported="1"
               fullname="discretize.bytiling"
               inherittype="local"
               line="72"
               name="ByTiling"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
               start="3023">
    <Type>function</Type>
    <Params>
     <Param name="d"/>
     <Param name="N"/>
    </Params>
   </Definition>
   <Definition body="3821"
               end="4471"
               exported="1"
               fullname="discretize.do"
               inherittype="local"
               line="87"
               name="Do"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
               start="3741">
    <Type>function</Type>
    <Params>
     <Param name="d"/>
     <Param name="to_do"/>
    </Params>
   </Definition>
   <Documentation>
    <content>&#10;&#32;&#32;This module exists to turn a dataset of numberfields into a dataset
  of DiscreteFields.  This is not quite as trivial as it seems as there
  are a number of different ways to make the underlying data discrete;
  and even within one method there may be different parameters.
  Further - it is quite probable that different methods are going to be
  desired for each field.
  @internal True&#10;</content>
   </Documentation>
  </Definition>
  <Import body="0"
          end="7"
          inherittype="local"
          line="1"
          name="ML_Core"
          start="7"/>
  <Import body="0"
          end="28"
          fullname="ML_Core.Types"
          inherittype="local"
          line="2"
          name="Types"
          ref="ML_Core.Types"
          start="28"/>
 </Source>
 <Source name="ML_Core.Constants" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Constants.ecl">
  <Definition body="47"
              end="224"
              exported="1"
              fullname="ML_Core.Constants"
              inherittype="local"
              line="4"
              name="Constants"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Constants.ecl"
              start="28">
   <Type>module</Type>
   <Parents/>
   <Definition body="98"
               end="127"
               exported="1"
               fullname="ml_core.constants.pi"
               inherittype="local"
               line="8"
               name="Pi"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Constants.ecl"
               start="86">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;* Constant PI&#10;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="189"
               end="218"
               exported="1"
               fullname="ml_core.constants.root_2"
               inherittype="local"
               line="12"
               name="Root_2"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Constants.ecl"
               start="173">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;* Constant square root of 2&#10;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Documentation>
    <content>&#10;&#32;* Useful constants&#10;&#32;</content>
   </Documentation>
  </Definition>
 </Source>
 <Source sourcePath="lib_stringlib"/>
 <Source name="std.Str" sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl">
  <Import body="0"
          end="731"
          fullname="lib_stringlib"
          inherittype="local"
          line="20"
          name="lib_stringlib"
          ref="lib_stringlib"
          remotescope="1"
          start="731"/>
  <Definition body="259"
              end="502"
              inherittype="local"
              line="6"
              name="externals"
              source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
              start="247">
   <Type>module</Type>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="encodebase64"
               inherittype="local"
               line="8"
               name="EncodeBase64"
               start="0">
    <Type>function</Type>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="decodebase64"
               inherittype="local"
               line="9"
               name="DecodeBase64"
               start="0">
    <Type>function</Type>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Parents/>
  </Definition>
  <Definition body="517"
              end="17753"
              exported="1"
              fullname="std.Str"
              inherittype="local"
              line="12"
              name="Str"
              source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
              start="504">
   <Type>module</Type>
   <Definition body="1180"
               end="1243"
               exported="1"
               fullname="std.str.compareignorecase"
               inherittype="local"
               line="31"
               name="CompareIgnoreCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="1118">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Compares the two strings case insensitively.  Returns a negative integer, zero, or a positive integer according to
 * whether the first string is less than, equal to, or greater than the second.
 * 
 * @param src1          The first string to be compared.
 * @param src2          The second string to be compared.
 * @see                 Str.EqualIgnoreCase&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src1"/>
     <Param name="src2"/>
    </Params>
   </Definition>
   <Definition body="1556"
               end="1591"
               exported="1"
               fullname="std.str.equalignorecase"
               inherittype="local"
               line="42"
               name="EqualIgnoreCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="1497">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Tests whether the two strings are identical ignoring differences in case.
 * 
 * @param src1          The first string to be compared.
 * @param src2          The second string to be compared.
 * @see                 Str.CompareIgnoreCase&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src1"/>
     <Param name="src2"/>
    </Params>
   </Definition>
   <Definition body="2071"
               end="2132"
               exported="1"
               fullname="std.str.find"
               inherittype="local"
               line="54"
               name="Find"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="1996">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the character position of the nth match of the search string with the first string.
 * If no match is found the attribute returns 0.
 * If an instance is omitted the position of the first instance is returned.
 * 
 * @param src           The string that is searched
 * @param sought        The string being sought.
 * @param instance      Which match instance are we interested in?&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="sought"/>
     <Param name="instance"/>
    </Params>
   </Definition>
   <Definition body="2387"
               end="2441"
               exported="1"
               fullname="std.str.findcount"
               inherittype="local"
               line="64"
               name="FindCount"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="2331">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the number of occurences of the second string within the first string.
 * 
 * @param src           The string that is searched
 * @param sought        The string being sought.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="sought"/>
    </Params>
   </Definition>
   <Definition body="2867"
               end="2943"
               exported="1"
               fullname="std.str.wildmatch"
               inherittype="local"
               line="75"
               name="WildMatch"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="2790">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Tests if the search string matches the pattern.
 * The pattern can contain wildcards &apos;?&apos; (single character) and &apos;*&apos; (multiple character).
 * 
 * @param src           The string that is being tested.
 * @param pattern       The pattern to match against.
 * @param ignore_case   Whether to ignore differences in case between characters&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="_pattern"/>
     <Param name="ignore_case"/>
    </Params>
   </Definition>
   <Definition body="3421"
               end="3491"
               exported="1"
               fullname="std.str.contains"
               inherittype="local"
               line="87"
               name="Contains"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="3345">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Tests if the search string contains each of the characters in the pattern.
 * If the pattern contains duplicate characters those characters will match once for each occurence in the pattern.
 * 
 * @param src           The string that is being tested.
 * @param pattern       The pattern to match against.
 * @param ignore_case   Whether to ignore differences in case between characters&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="_pattern"/>
     <Param name="ignore_case"/>
    </Params>
   </Definition>
   <Definition body="3818"
               end="3872"
               exported="1"
               fullname="std.str.filterout"
               inherittype="local"
               line="98"
               name="FilterOut"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="3765">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the first string with all characters within the second string removed.
 * 
 * @param src           The string that is being tested.
 * @param filter        The string containing the set of characters to be excluded.
 * @see                 Str.Filter&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="filter"/>
    </Params>
   </Definition>
   <Definition body="4203"
               end="4254"
               exported="1"
               fullname="std.str.filter"
               inherittype="local"
               line="108"
               name="Filter"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="4153">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the first string with all characters not within the second string removed.
 * 
 * @param src           The string that is being tested.
 * @param filter        The string containing the set of characters to be included.
 * @see                 Str.FilterOut&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="filter"/>
    </Params>
   </Definition>
   <Definition body="4817"
               end="4891"
               exported="1"
               fullname="std.str.substituteincluded"
               inherittype="local"
               line="121"
               name="SubstituteIncluded"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="4733">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the source string with the replacement character substituted for all characters included in the
 * filter string.
 * MORE: Should this be a general string substitution?
 * 
 * @param src           The string that is being tested.
 * @param filter        The string containing the set of characters to be included.
 * @param replace_char  The character to be substituted into the result.
 * @see                 Std.Str.Translate, Std.Str.SubstituteExcluded&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="Filter"/>
     <Param name="replace_char"/>
    </Params>
   </Definition>
   <Definition body="5439"
               end="5510"
               exported="1"
               fullname="std.str.substituteexcluded"
               inherittype="local"
               line="135"
               name="SubstituteExcluded"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="5355">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the source string with the replacement character substituted for all characters not included in the
 * filter string.
 * MORE: Should this be a general string substitution?
 * 
 * @param src           The string that is being tested.
 * @param filter        The string containing the set of characters to be included.
 * @param replace_char  The character to be substituted into the result.
 * @see                 Std.Str.SubstituteIncluded&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="Filter"/>
     <Param name="replace_char"/>
    </Params>
   </Definition>
   <Definition body="6161"
               end="6230"
               exported="1"
               fullname="std.str.translate"
               inherittype="local"
               line="149"
               name="Translate"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="6088">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the source string with the all characters that match characters in the search string replaced
 * with the character at the corresponding position in the replacement string.
 *
 * @param src           The string that is being tested.
 * @param search        The string containing the set of characters to be included.
 * @param replacement   The string containing the characters to act as replacements.
 * @see                 Std.Str.SubstituteIncluded&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="search"/>
     <Param name="replacement"/>
    </Params>
   </Definition>
   <Definition body="6432"
               end="6480"
               exported="1"
               fullname="std.str.tolowercase"
               inherittype="local"
               line="158"
               name="ToLowerCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="6392">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the argument string with all upper case characters converted to lower case.
 * 
 * @param src           The string that is being converted.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Definition body="6681"
               end="6729"
               exported="1"
               fullname="std.str.touppercase"
               inherittype="local"
               line="166"
               name="ToUpperCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="6641">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Return the argument string with all lower case characters converted to upper case.
 * 
 * @param src           The string that is being converted.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Definition body="7037"
               end="7087"
               exported="1"
               fullname="std.str.tocapitalcase"
               inherittype="local"
               line="176"
               name="ToCapitalCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="6995">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the argument string with the first letter of each word in upper case and all other
 * letters left as-is.
 * A contiguous sequence of alphanumeric characters is treated as a word.
 * 
 * @param src           The string that is being converted.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Definition body="7392"
               end="7440"
               exported="1"
               fullname="std.str.totitlecase"
               inherittype="local"
               line="186"
               name="ToTitleCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="7352">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the argument string with the first letter of each word in upper case and all other
 * letters lower case.
 * A contiguous sequence of alphanumeric characters is treated as a word.
 *
 * @param src           The string that is being converted.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Definition body="7678"
               end="7722"
               exported="1"
               fullname="std.str.reverse"
               inherittype="local"
               line="195"
               name="Reverse"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="7642">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the argument string with all characters in reverse order.
 * Note the argument is not TRIMMED before it is reversed.
 * 
 * @param src           The string that is being reversed.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Definition body="8104"
               end="8175"
               exported="1"
               fullname="std.str.findreplace"
               inherittype="local"
               line="205"
               name="FindReplace"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="8029">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the source string with the replacement string substituted for all instances of the search string.
 * 
 * @param src           The string that is being transformed.
 * @param sought        The string to be replaced.
 * @param replacement   The string to be substituted into the result.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="sought"/>
     <Param name="replacement"/>
    </Params>
   </Definition>
   <Definition body="8436"
               end="8490"
               exported="1"
               fullname="std.str.extract"
               inherittype="local"
               line="215"
               name="Extract"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="8380">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the nth element from a comma separated string.
 * 
 * @param src           The string containing the comma separated list.
 * @param instance      Which item to select from the list.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="instance"/>
    </Params>
   </Definition>
   <Definition body="8838"
               end="8886"
               exported="1"
               fullname="std.str.cleanspaces"
               inherittype="local"
               line="225"
               name="CleanSpaces"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="8798">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the source string with all instances of multiple adjacent space characters (2 or more spaces together)
 * reduced to a single space character.  Leading and trailing spaces are removed, and tab characters are converted
 * to spaces.
 * 
 * @param src           The string to be cleaned.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Definition body="9296"
               end="9333"
               exported="1"
               fullname="std.str.startswith"
               inherittype="local"
               line="236"
               name="StartsWith"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="9241">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns true if the prefix string matches the leading characters in the source string.  Trailing spaces are 
 * stripped from the prefix before matching.
 * // x.myString.StartsWith(&apos;x&apos;) as an alternative syntax would be even better
 * 
 * @param src           The string being searched in.
 * @param prefix        The prefix to search for.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="prefix"/>
    </Params>
   </Definition>
   <Definition body="9664"
               end="9720"
               exported="1"
               fullname="std.str.endswith"
               inherittype="local"
               line="245"
               name="EndsWith"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="9611">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns true if the suffix string matches the trailing characters in the source string.  Trailing spaces are 
 * stripped from both strings before matching.
 * 
 * @param src           The string being searched in.
 * @param suffix        The prefix to search for.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="suffix"/>
    </Params>
   </Definition>
   <Definition body="10046"
               end="10138"
               exported="1"
               fullname="std.str.removesuffix"
               inherittype="local"
               line="255"
               name="RemoveSuffix"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="9990">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Removes the suffix from the search string, if present, and returns the result.  Trailing spaces are 
 * stripped from both strings before matching.
 * 
 * @param src           The string being searched in.
 * @param suffix        The prefix to search for.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="suffix"/>
    </Params>
   </Definition>
   <Definition body="10472"
               end="10530"
               exported="1"
               fullname="std.str.extractmultiple"
               inherittype="local"
               line="266"
               name="ExtractMultiple"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="10412">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns a string containing a list of elements from a comma separated string.
 *
 * @param src           The string containing the comma separated list.
 * @param mask          A bitmask of which elements should be included.  Bit 0 is item1, bit1 item 2 etc.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="mask"/>
    </Params>
   </Definition>
   <Definition body="11012"
               end="11077"
               exported="1"
               fullname="std.str.countwords"
               inherittype="local"
               line="277"
               name="CountWords"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="10923">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the number of words that the string contains.  Words are separated by one or more separator strings. No 
 * spaces are stripped from either string before matching.
 * 
 * @param src           The string being searched in.
 * @param separator     The string used to separate words
 * @param allow_blank   Indicates if empty/blank string items are included in the results.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="separator"/>
     <Param name="allow_blank"/>
    </Params>
   </Definition>
   <Definition body="11563"
               end="11628"
               exported="1"
               fullname="std.str.splitwords"
               inherittype="local"
               line="288"
               name="SplitWords"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="11470">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the list of words extracted from the string.  Words are separated by one or more separator strings. No 
 * spaces are stripped from either string before matching.
 * 
 * @param src           The string being searched in.
 * @param separator     The string used to separate words
 * @param allow_blank   Indicates if empty/blank string items are included in the results.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="separator"/>
     <Param name="allow_blank"/>
    </Params>
   </Definition>
   <Definition body="12002"
               end="12058"
               exported="1"
               fullname="std.str.combinewords"
               inherittype="local"
               line="299"
               name="CombineWords"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="11934">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the list of words extracted from the string.  Words are separated by one or more separator strings. No
 * spaces are stripped from either string before matching.
 *
 * @param words         The set of strings to be combined.
 * @param separator     The string used to separate words.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="words"/>
     <Param name="separator"/>
    </Params>
   </Definition>
   <Definition body="12489"
               end="12548"
               exported="1"
               fullname="std.str.editdistance"
               inherittype="local"
               line="311"
               name="EditDistance"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="12428">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the minimum edit distance between the two strings.  An insert change or delete counts as a single edit.
 * The two strings are trimmed before comparing.
 * 
 * @param _left         The first string to be compared.
 * @param _right        The second string to be compared.
 * @return              The minimum edit distance between the two strings.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="_left"/>
     <Param name="_right"/>
    </Params>
   </Definition>
   <Definition body="13081"
               end="13160"
               exported="1"
               fullname="std.str.editdistancewithinradius"
               inherittype="local"
               line="324"
               name="EditDistanceWithinRadius"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="12992">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns true if the minimum edit distance between the two strings is with a specific range.
 * The two strings are trimmed before comparing.
 * 
 * @param _left         The first string to be compared.
 * @param _right        The second string to be compared.
 * @param radius        The maximum edit distance that is accepable.
 * @return              Whether or not the two strings are within the given specified edit distance.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="_left"/>
     <Param name="_right"/>
     <Param name="radius"/>
    </Params>
   </Definition>
   <Definition body="13427"
               end="13478"
               exported="1"
               fullname="std.str.wordcount"
               inherittype="local"
               line="335"
               name="WordCount"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="13385">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the number of words in the string.  Words are separated by one or more spaces.
 * 
 * @param text          The string to be broken into words.
 * @return              The number of words in the string.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="text"/>
    </Params>
   </Definition>
   <Definition body="13824"
               end="13879"
               exported="1"
               fullname="std.str.getnthword"
               inherittype="local"
               line="346"
               name="GetNthWord"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="13771">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns the n-th word from the string.  Words are separated by one or more spaces.
 * 
 * @param text          The string to be broken into words.
 * @param n             Which word should be returned from the function.
 * @return              The number of words in the string.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="text"/>
     <Param name="n"/>
    </Params>
   </Definition>
   <Definition body="14236"
               end="14291"
               exported="1"
               fullname="std.str.excludefirstword"
               inherittype="local"
               line="357"
               name="ExcludeFirstWord"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="14197">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns everything except the first word from the string.  Words are separated by one or more whitespace characters.
 * Whitespace before and after the first word is also removed.
 *
 * @param text          The string to be broken into words.
 * @return              The string excluding the first word.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="text"/>
    </Params>
   </Definition>
   <Definition body="14689"
               end="14742"
               exported="1"
               fullname="std.str.excludelastword"
               inherittype="local"
               line="367"
               name="ExcludeLastWord"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="14651">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns everything except the last word from the string.  Words are separated by one or more whitespace characters.
 * Whitespace after a word is removed with the word and leading whitespace is removed with the first word.
 *
 * @param text          The string to be broken into words.
 * @return              The string excluding the last word.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="text"/>
    </Params>
   </Definition>
   <Definition body="15223"
               end="15278"
               exported="1"
               fullname="std.str.excludenthword"
               inherittype="local"
               line="378"
               name="ExcludeNthWord"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="15173">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Returns everything except the nth word from the string.  Words are separated by one or more whitespace characters.
 * Whitespace after a word is removed with the word and leading whitespace is removed with the first word.
 *
 * @param text          The string to be broken into words.
 * @param n             Which word should be returned from the function.
 * @return              The string excluding the nth word.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="text"/>
     <Param name="n"/>
    </Params>
   </Definition>
   <Definition body="15636"
               end="15782"
               exported="1"
               fullname="std.str.findword"
               inherittype="local"
               line="388"
               name="FindWord"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="15558">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;* Tests if the search string contains the supplied word as a whole word.
 *
 * @param src           The string that is being tested.
 * @param word          The word to be searched for.
 * @param ignore_case   Whether to ignore differences in case between characters.&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="word"/>
     <Param name="ignore_case"/>
    </Params>
   </Definition>
   <Definition body="16077"
               end="16124"
               exported="1"
               fullname="std.str.repeat"
               inherittype="local"
               line="402"
               name="Repeat"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="16028">
    <Type>function</Type>
    <Params>
     <Param name="text"/>
     <Param name="n"/>
    </Params>
   </Definition>
   <Definition body="16391"
               end="16435"
               exported="1"
               fullname="std.str.tohexpairs"
               inherittype="local"
               line="411"
               name="ToHexPairs"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="16352">
    <Type>function</Type>
    <Params>
     <Param name="value"/>
    </Params>
   </Definition>
   <Definition body="16864"
               end="16912"
               exported="1"
               fullname="std.str.fromhexpairs"
               inherittype="local"
               line="424"
               name="FromHexPairs"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="16819">
    <Type>function</Type>
    <Params>
     <Param name="hex_pairs"/>
    </Params>
   </Definition>
   <Definition body="17282"
               end="17313"
               exported="1"
               fullname="std.str.encodebase64"
               inherittype="local"
               line="437"
               name="EncodeBase64"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="17241">
    <Type>function</Type>
    <Params>
     <Param name="value"/>
    </Params>
   </Definition>
   <Definition body="17716"
               end="17747"
               exported="1"
               fullname="std.str.decodebase64"
               inherittype="local"
               line="450"
               name="DecodeBase64"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"
               start="17675">
    <Type>function</Type>
    <Params>
     <Param name="value"/>
    </Params>
   </Definition>
   <Parents/>
  </Definition>
 </Source>
 <Source name="import_test" sourcePath="/media/sarthak/Data/ecldoc/testing/import-test/import_test.ecl">
  <Definition body="88"
              end="129"
              exported="1"
              fullname="import_test"
              inherittype="local"
              line="5"
              name="import_test"
              source="/media/sarthak/Data/ecldoc/testing/import-test/import_test.ecl"
              start="67">
   <Type>module</Type>
   <Definition body="112"
               end="124"
               exported="1"
               fullname="Discretize"
               inherittype="local"
               line="6"
               name="mod_1"
               source="/media/sarthak/Data/ecldoc/testing/import-test/import_test.ecl"
               start="97">
    <Type>module</Type>
    <Parents/>
    <Definition body="663"
                end="696"
                exported="1"
                inherittype="local"
                line="18"
                name="c_Method"
                source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
                start="645">
     <Type>attribute</Type>
    </Definition>
    <Definition body="717"
                end="944"
                exported="1"
                fullname="discretize.r_method"
                inherittype="local"
                line="19"
                name="r_Method"
                source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
                start="699">
     <Type>record</Type>
     <Field name="fields"/>
     <Field name="method"/>
     <Field name="iParam1"/>
     <Field name="rParam1"/>
     <Field name="rParam2"/>
    </Definition>
    <Definition body="1406"
                end="1463"
                exported="1"
                fullname="discretize.i_byrounding"
                inherittype="local"
                line="35"
                name="i_ByRounding"
                source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
                start="1299">
     <Type>function</Type>
     <Params>
      <Param name="f"/>
      <Param name="Scale"/>
      <Param name="Delta"/>
     </Params>
    </Definition>
    <Definition body="1596"
                end="1750"
                exported="1"
                fullname="discretize.byrounding"
                inherittype="local"
                line="39"
                name="ByRounding"
                source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
                start="1492">
     <Type>function</Type>
     <Params>
      <Param name="d"/>
      <Param name="Scale"/>
      <Param name="Delta"/>
     </Params>
    </Definition>
    <Definition body="2175"
                end="2225"
                exported="1"
                fullname="discretize.i_bybucketing"
                inherittype="local"
                line="52"
                name="i_ByBucketing"
                source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
                start="2051">
     <Type>function</Type>
     <Params>
      <Param name="f"/>
      <Param name="N"/>
     </Params>
    </Definition>
    <Definition body="2344"
                end="2618"
                exported="1"
                fullname="discretize.bybucketing"
                inherittype="local"
                line="55"
                name="ByBucketing"
                source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
                start="2228">
     <Type>function</Type>
     <Params>
      <Param name="d"/>
      <Param name="N"/>
     </Params>
    </Definition>
    <Definition body="2973"
                end="3020"
                exported="1"
                fullname="discretize.i_bytiling"
                inherittype="local"
                line="69"
                name="i_ByTiling"
                source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
                start="2855">
     <Type>function</Type>
     <Params>
      <Param name="f"/>
      <Param name="N"/>
     </Params>
    </Definition>
    <Definition body="3134"
                end="3406"
                exported="1"
                fullname="discretize.bytiling"
                inherittype="local"
                line="72"
                name="ByTiling"
                source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
                start="3023">
     <Type>function</Type>
     <Params>
      <Param name="d"/>
      <Param name="N"/>
     </Params>
    </Definition>
    <Definition body="3821"
                end="4471"
                exported="1"
                fullname="discretize.do"
                inherittype="local"
                line="87"
                name="Do"
                source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/ML_Core/Discretize.ecl"
                start="3741">
     <Type>function</Type>
     <Params>
      <Param name="d"/>
      <Param name="to_do"/>
     </Params>
    </Definition>
    <Documentation>
     <content>&#10;&#32;&#32;This module exists to turn a dataset of numberfields into a dataset
  of DiscreteFields.  This is not quite as trivial as it seems as there
  are a number of different ways to make the underlying data discrete;
  and even within one method there may be different parameters.
  Further - it is quite probable that different methods are going to be
  desired for each field.
  @internal True&#10;</content>
    </Documentation>
   </Definition>
   <Parents/>
  </Definition>
  <Import body="0"
          end="7"
          fullname="Discretize"
          inherittype="local"
          line="1"
          name="Discretize"
          ref="Discretize"
          start="7">
   <Documentation>
    <content>&#10;&#32;&#32;This module exists to turn a dataset of numberfields into a dataset
  of DiscreteFields.  This is not quite as trivial as it seems as there
  are a number of different ways to make the underlying data discrete;
  and even within one method there may be different parameters.
  Further - it is quite probable that different methods are going to be
  desired for each field.
  @internal True&#10;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="26"
          fullname="ML_Core.Constants"
          inherittype="local"
          line="2"
          name="Constants"
          ref="ML_Core.Constants"
          start="26">
   <Documentation>
    <content>&#10;&#32;* Useful constants&#10;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="57"
          fullname="std.Str"
          inherittype="local"
          line="3"
          name="Str"
          ref="std.Str"
          start="57"/>
 </Source>
</Meta>
