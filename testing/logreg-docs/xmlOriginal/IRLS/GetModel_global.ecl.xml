<Meta>
 <Source name="ML_Core" sourcePath="/home/sarthak/.HPCCSystems/bundles/ML_Core.ecl">
  <Definition body="70"
              end="80"
              exported="1"
              fullname="_versions.ML_Core.V3_1_0.ML_Core"
              global="1"
              inherittype="local"
              line="1"
              name="ML_Core"
              source="/home/sarthak/.HPCCSystems/bundles/ML_Core.ecl"
              start="53">
   <Type>module</Type>
   <Parents/>
  </Definition>
  <Import body="0"
          end="7"
          fullname="_versions.ML_Core.V3_1_0.ML_Core"
          inherittype="local"
          line="1"
          name="_ML_Core"
          ref="_versions.ML_Core.V3_1_0.ML_Core"
          remotescope="1"
          start="7">
   <loc>loc</loc>
  </Import>
 </Source>
 <Source name="_versions.ML_Core.V3_1_0.ML_Core.Types" sourcePath="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl">
  <Definition body="37"
              end="3074"
              exported="1"
              fullname="_versions.ML_Core.V3_1_0.ML_Core.Types"
              inherittype="local"
              line="2"
              name="Types"
              source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
              start="22">
   <Type>module</Type>
   <Definition body="944"
               end="955"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.t_recordid"
               inherittype="local"
               line="22"
               name="t_RecordID"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="924">
    <Type>attribute</Type>
   </Definition>
   <Definition body="981"
               end="992"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.t_fieldnumber"
               inherittype="local"
               line="23"
               name="t_FieldNumber"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="958">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1016"
               end="1023"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.t_fieldreal"
               inherittype="local"
               line="24"
               name="t_FieldReal"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="995">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1047"
               end="1057"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.t_fieldsign"
               inherittype="local"
               line="25"
               name="t_FieldSign"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="1026">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1080"
               end="1090"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.t_discrete"
               inherittype="local"
               line="26"
               name="t_Discrete"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="1060">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1109"
               end="1120"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.t_item"
               inherittype="local"
               line="27"
               name="t_Item"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="1093">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1188"
               end="1200"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.t_count"
               inherittype="local"
               line="28"
               name="t_Count"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="1171">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1258"
               end="1269"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.t_work_item"
               inherittype="local"
               line="29"
               name="t_Work_Item"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="1237">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1391"
               end="1600"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.anyfield"
               inherittype="local"
               line="32"
               name="AnyField"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="1369">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
   </Definition>
   <Definition body="1673"
               end="1720"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.numericfield"
               inherittype="local"
               line="39"
               name="NumericField"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="1651">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
    <Field name="value"/>
   </Definition>
   <Definition body="1797"
               end="1843"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.discretefield"
               inherittype="local"
               line="44"
               name="DiscreteField"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="1774">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
    <Field name="value"/>
   </Definition>
   <Definition body="1953"
               end="2200"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.layout_model"
               inherittype="local"
               line="49"
               name="Layout_Model"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="1931">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
    <Field name="value"/>
   </Definition>
   <Definition body="2261"
               end="2336"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.classify_result"
               inherittype="local"
               line="57"
               name="Classify_Result"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="2236">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
    <Field name="value"/>
    <Field name="conf"/>
   </Definition>
   <Definition body="2357"
               end="2410"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.l_result"
               inherittype="local"
               line="60"
               name="l_result"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="2339">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
    <Field name="value"/>
    <Field name="conf"/>
   </Definition>
   <Definition body="2440"
               end="2639"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.confusion_detail"
               inherittype="local"
               line="62"
               name="Confusion_Detail"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="2414">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="classifier"/>
    <Field name="actual_class"/>
    <Field name="predict_class"/>
    <Field name="occurs"/>
    <Field name="correct"/>
   </Definition>
   <Definition body="2711"
               end="2782"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.itemelement"
               inherittype="local"
               line="72"
               name="ItemElement"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="2690">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="value"/>
    <Field name="id"/>
   </Definition>
   <Definition body="2848"
               end="2858"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.t_node"
               inherittype="local"
               line="79"
               name="t_node"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="2831">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2942"
               end="2953"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.t_level"
               inherittype="local"
               line="80"
               name="t_level"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="2925">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2995"
               end="3069"
               exported="1"
               fullname="_versions.ml_core.v3_1_0.ml_core.types.nodeid"
               inherittype="local"
               line="81"
               name="NodeID"
               source="/home/sarthak/.HPCCSystems/bundles/_versions/ML_Core/V3_1_0/ML_Core/Types.ecl"
               start="2978">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="node_id"/>
    <Field name="level"/>
   </Definition>
   <Parents/>
  </Definition>
 </Source>
 <Source name="PBblas.Types" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl">
  <Definition body="516"
              end="4363"
              exported="1"
              fullname="PBblas.Types"
              inherittype="local"
              line="11"
              name="Types"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl"
              start="501">
   <Type>module</Type>
   <Parents/>
   <Definition body="692"
               end="703"
               exported="1"
               fullname="pbblas.types.dimension_t"
               inherittype="local"
               line="16"
               name="dimension_t"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl"
               start="670">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Type for matrix dimensions.  Uses UNSIGNED four as matrixes
    * are not designed to support more than 4 B rows or columns.&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="851"
               end="862"
               exported="1"
               fullname="pbblas.types.partition_t"
               inherittype="local"
               line="20"
               name="partition_t"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl"
               start="829">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Type for partition id -- only supports up to 64K partitions&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="967"
               end="988"
               exported="1"
               fullname="pbblas.types.work_item_t"
               inherittype="local"
               line="24"
               name="work_item_t"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl"
               start="945">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Type for work-item id -- only supports up to 64K work items&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="1109"
               end="1116"
               exported="1"
               fullname="pbblas.types.value_t"
               inherittype="local"
               line="30"
               name="value_t"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl"
               start="1087">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Type for matrix cell values
    * 
    * WARNING: type used in C++ attribute&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="1272"
               end="1281"
               exported="1"
               fullname="pbblas.types.m_label_t"
               inherittype="local"
               line="35"
               name="m_label_t"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl"
               start="1250">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Type for matrix label.  Used for Matrix dimensions (see Layout_Dims)
    * and for partitions (see Layout_Part)&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="1404"
               end="1439"
               exported="1"
               inherittype="local"
               line="41"
               name="Triangle"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl"
               start="1382">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Enumeration for Triangle type
    * 
    * WARNING: type used in C++ attribute&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="1564"
               end="1606"
               exported="1"
               inherittype="local"
               line="47"
               name="Diagonal"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl"
               start="1542">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Enumeration for Diagonal type
    * 
    * WARNING: type used in C++ attribute&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="1729"
               end="1758"
               exported="1"
               inherittype="local"
               line="53"
               name="Side"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl"
               start="1707">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Enumeration for Side type
    * 
    * WARNING: type used in C++ attribute&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="1893"
               end="1904"
               exported="1"
               fullname="pbblas.types.t_mu_no"
               inherittype="local"
               line="60"
               name="t_mu_no"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl"
               start="1871">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Type for matrix universe number
    *
    * Allow up to 64k matrices in one universe
    *&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="3736"
               end="3974"
               exported="1"
               fullname="pbblas.types.layout_cell"
               inherittype="local"
               line="94"
               name="Layout_Cell"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl"
               start="3714">
    <Type>record</Type>
    <Field name="wi_id"/>
    <Field name="x"/>
    <Field name="y"/>
    <Field name="v"/>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="4234"
               end="4358"
               exported="1"
               fullname="pbblas.types.layout_norm"
               inherittype="local"
               line="108"
               name="Layout_Norm"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Types.ecl"
               start="4213">
    <Type>record</Type>
    <Field name="wi_id"/>
    <Field name="v"/>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Layout for Norm results.
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field v	    Real value for the norm&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Import body="0"
          end="248"
          fullname="_versions.ML_Core.V3_1_0.ML_Core"
          inherittype="local"
          line="4"
          name="ML_Core"
          ref="_versions.ML_Core.V3_1_0.ML_Core"
          remotescope="1"
          start="248">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="264"
          fullname="_versions.ML_Core.V3_1_0.ML_Core.Types"
          inherittype="local"
          line="5"
          name="MlTypes"
          ref="_versions.ML_Core.V3_1_0.ML_Core.Types"
          start="264">
   <loc>loc</loc>
  </Import>
 </Source>
 <Source name="Constants" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl">
  <Definition body="168"
              end="1315"
              exported="1"
              fullname="Constants"
              inherittype="local"
              line="4"
              name="Constants"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
              start="149">
   <Type>module</Type>
   <Definition body="208"
               end="215"
               exported="1"
               fullname="constants.limit_card"
               inherittype="local"
               line="5"
               name="limit_card"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="178">
    <Type>attribute</Type>
   </Definition>
   <Definition body="275"
               end="287"
               exported="1"
               fullname="constants.default_epsilon"
               inherittype="local"
               line="6"
               name="default_epsilon"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="244">
    <Type>attribute</Type>
   </Definition>
   <Definition body="319"
               end="328"
               exported="1"
               fullname="constants.default_ridge"
               inherittype="local"
               line="7"
               name="default_ridge"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="290">
    <Type>attribute</Type>
   </Definition>
   <Definition body="360"
               end="402"
               exported="1"
               fullname="constants.local_cap"
               inherittype="local"
               line="8"
               name="local_cap"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="331">
    <Type>attribute</Type>
   </Definition>
   <Definition body="452"
               end="455"
               exported="1"
               fullname="constants.id_base"
               inherittype="local"
               line="10"
               name="id_base"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="435">
    <Type>attribute</Type>
   </Definition>
   <Definition body="476"
               end="489"
               exported="1"
               fullname="constants.id_iters"
               inherittype="local"
               line="11"
               name="id_iters"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="458">
    <Type>attribute</Type>
   </Definition>
   <Definition body="510"
               end="524"
               exported="1"
               fullname="constants.id_delta"
               inherittype="local"
               line="12"
               name="id_delta"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="492">
    <Type>attribute</Type>
   </Definition>
   <Definition body="547"
               end="561"
               exported="1"
               fullname="constants.id_correct"
               inherittype="local"
               line="13"
               name="id_correct"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="527">
    <Type>attribute</Type>
   </Definition>
   <Definition body="586"
               end="602"
               exported="1"
               fullname="constants.id_incorrect"
               inherittype="local"
               line="14"
               name="id_incorrect"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="564">
    <Type>attribute</Type>
   </Definition>
   <Definition body="626"
               end="674"
               exported="1"
               fullname="constants.id_stat_set"
               inherittype="local"
               line="15"
               name="id_stat_set"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="605">
    <Type>attribute</Type>
   </Definition>
   <Definition body="695"
               end="713"
               exported="1"
               fullname="constants.id_betas"
               inherittype="local"
               line="16"
               name="id_betas"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="677">
    <Type>attribute</Type>
   </Definition>
   <Definition body="800"
               end="803"
               exported="1"
               fullname="constants.id_betas_coef"
               inherittype="local"
               line="18"
               name="id_betas_coef"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="777">
    <Type>attribute</Type>
   </Definition>
   <Definition body="827"
               end="830"
               exported="1"
               fullname="constants.id_betas_se"
               inherittype="local"
               line="19"
               name="id_betas_SE"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="806">
    <Type>attribute</Type>
   </Definition>
   <Definition body="880"
               end="883"
               exported="1"
               fullname="constants.base_builder"
               inherittype="local"
               line="21"
               name="base_builder"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="858">
    <Type>attribute</Type>
   </Definition>
   <Definition body="920"
               end="938"
               exported="1"
               fullname="constants.base_max_iter"
               inherittype="local"
               line="22"
               name="base_max_iter"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="897">
    <Type>attribute</Type>
   </Definition>
   <Definition body="963"
               end="982"
               exported="1"
               fullname="constants.base_epsilon"
               inherittype="local"
               line="23"
               name="base_epsilon"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="941">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1008"
               end="1026"
               exported="1"
               fullname="constants.base_ind_vars"
               inherittype="local"
               line="24"
               name="base_ind_vars"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="985">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1052"
               end="1071"
               exported="1"
               fullname="constants.base_dep_vars"
               inherittype="local"
               line="25"
               name="base_dep_vars"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="1029">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1092"
               end="1111"
               exported="1"
               fullname="constants.base_obs"
               inherittype="local"
               line="26"
               name="base_obs"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="1074">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1185"
               end="1188"
               exported="1"
               fullname="constants.builder_irls_local"
               inherittype="local"
               line="28"
               name="builder_irls_local"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="1157">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1259"
               end="1262"
               exported="1"
               fullname="constants.builder_irls_global"
               inherittype="local"
               line="29"
               name="builder_irls_global"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="1230">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1307"
               end="1310"
               exported="1"
               fullname="constants.builder_softmax"
               inherittype="local"
               line="30"
               name="builder_softmax"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Constants.ecl"
               start="1282">
    <Type>attribute</Type>
   </Definition>
   <Parents/>
  </Definition>
 </Source>
 <Source name="Types" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl">
  <Import body="0"
          end="7"
          fullname="_versions.ML_Core.V3_1_0.ML_Core.Types"
          inherittype="local"
          line="1"
          name="Core_Types"
          ref="_versions.ML_Core.V3_1_0.ML_Core.Types"
          start="7">
   <loc>loc</loc>
  </Import>
  <Definition body="77"
              end="98"
              fullname="anyfield"
              inherittype="local"
              line="3"
              name="AnyField"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
              start="62">
   <Type>record</Type>
   <Field name="wi"/>
   <Field name="id"/>
   <Field name="number"/>
  </Definition>
  <Definition body="114"
              end="139"
              fullname="numericfield"
              inherittype="local"
              line="4"
              name="NumericField"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
              start="99">
   <Type>record</Type>
   <Field name="wi"/>
   <Field name="id"/>
   <Field name="number"/>
   <Field name="value"/>
  </Definition>
  <Definition body="155"
              end="181"
              fullname="discretefield"
              inherittype="local"
              line="5"
              name="DiscreteField"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
              start="140">
   <Type>record</Type>
   <Field name="wi"/>
   <Field name="id"/>
   <Field name="number"/>
   <Field name="value"/>
  </Definition>
  <Definition body="197"
              end="222"
              fullname="layout_model"
              inherittype="local"
              line="6"
              name="Layout_Model"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
              start="182">
   <Type>record</Type>
   <Field name="wi"/>
   <Field name="id"/>
   <Field name="number"/>
   <Field name="value"/>
  </Definition>
  <Definition body="238"
              end="262"
              fullname="t_work_item"
              inherittype="local"
              line="7"
              name="t_work_item"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
              start="223">
   <Type>attribute</Type>
  </Definition>
  <Definition body="278"
              end="301"
              fullname="t_recordid"
              inherittype="local"
              line="8"
              name="t_RecordID"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
              start="263">
   <Type>attribute</Type>
  </Definition>
  <Definition body="317"
              end="343"
              fullname="t_fieldnumber"
              inherittype="local"
              line="9"
              name="t_FieldNumber"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
              start="302">
   <Type>attribute</Type>
  </Definition>
  <Definition body="359"
              end="383"
              fullname="t_fieldreal"
              inherittype="local"
              line="10"
              name="t_FieldReal"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
              start="344">
   <Type>attribute</Type>
  </Definition>
  <Definition body="399"
              end="422"
              fullname="t_discrete"
              inherittype="local"
              line="11"
              name="t_Discrete"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
              start="384">
   <Type>attribute</Type>
  </Definition>
  <Definition body="439"
              end="4032"
              exported="1"
              fullname="Types"
              inherittype="local"
              line="13"
              name="Types"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
              start="424">
   <Type>module</Type>
   <Definition body="469"
               end="480"
               exported="1"
               fullname="types.t_universe"
               inherittype="local"
               line="14"
               name="t_Universe"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="449">
    <Type>attribute</Type>
   </Definition>
   <Definition body="503"
               end="654"
               exported="1"
               fullname="types.field_desc"
               inherittype="local"
               line="15"
               name="Field_Desc"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="483">
    <Type>record</Type>
    <Field name="number"/>
    <Field name="cardinality"/>
    <Field name="min_value"/>
    <Field name="max_value"/>
   </Definition>
   <Definition body="676"
               end="1054"
               exported="1"
               fullname="types.data_info"
               inherittype="local"
               line="21"
               name="Data_Info"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="657">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="dependent_fields"/>
    <Field name="dependent_records"/>
    <Field name="independent_fields"/>
    <Field name="independent_records"/>
    <Field name="dependent_count"/>
    <Field name="independent_count"/>
    <Field name="dependent_stats"/>
    <Field name="independent_stats"/>
   </Definition>
   <Definition body="1081"
               end="1127"
               exported="1"
               fullname="types.numericfield_u"
               inherittype="local"
               line="32"
               name="NumericField_U"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="1057">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
    <Field name="value"/>
    <Field name="u"/>
   </Definition>
   <Definition body="1155"
               end="1202"
               exported="1"
               fullname="types.discretefield_u"
               inherittype="local"
               line="35"
               name="DiscreteField_U"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="1130">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
    <Field name="value"/>
    <Field name="u"/>
   </Definition>
   <Definition body="1232"
               end="1329"
               exported="1"
               fullname="types.layout_column_map"
               inherittype="local"
               line="38"
               name="Layout_Column_Map"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="1205">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="orig_number"/>
    <Field name="remap_number"/>
   </Definition>
   <Definition body="1358"
               end="1523"
               exported="1"
               fullname="types.classifier_stats"
               inherittype="local"
               line="43"
               name="Classifier_Stats"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="1332">
    <Type>record</Type>
    <Field name="column"/>
    <Field name="max_delta"/>
    <Field name="iterations"/>
    <Field name="correct"/>
    <Field name="incorrect"/>
   </Definition>
   <Definition body="1548"
               end="1774"
               exported="1"
               fullname="types.model_report"
               inherittype="local"
               line="50"
               name="Model_Report"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="1526">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="max_iterations"/>
    <Field name="epsilon"/>
    <Field name="dep_vars"/>
    <Field name="ind_vars"/>
    <Field name="obs"/>
    <Field name="builder"/>
    <Field name="stats"/>
   </Definition>
   <Definition body="1813"
               end="2925"
               exported="1"
               fullname="types.binomial_confusion_summary"
               inherittype="local"
               line="60"
               name="Binomial_Confusion_Summary"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="1777">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="classifier"/>
    <Field name="true_positive"/>
    <Field name="true_negative"/>
    <Field name="false_positive"/>
    <Field name="false_negative"/>
    <Field name="cond_pos"/>
    <Field name="pred_pos"/>
    <Field name="cond_neg"/>
    <Field name="pred_neg"/>
    <Field name="prevalence"/>
    <Field name="accuracy"/>
    <Field name="true_pos_rate"/>
    <Field name="false_neg_rate"/>
    <Field name="false_pos_rate"/>
    <Field name="true_neg_rate"/>
    <Field name="pos_pred_val"/>
    <Field name="false_disc_rate"/>
    <Field name="false_omit_rate"/>
    <Field name="neg_pred_val"/>
   </Definition>
   <Definition body="2948"
               end="3104"
               exported="1"
               fullname="types.model_coef"
               inherittype="local"
               line="82"
               name="Model_Coef"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="2928">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="ind_col"/>
    <Field name="dep_nom"/>
    <Field name="w"/>
    <Field name="SE"/>
   </Definition>
   <Definition body="3138"
               end="3198"
               exported="1"
               fullname="types.confidence_model_coef"
               inherittype="local"
               line="89"
               name="Confidence_Model_Coef"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="3107">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="ind_col"/>
    <Field name="dep_nom"/>
    <Field name="w"/>
    <Field name="SE"/>
    <Field name="upper"/>
    <Field name="lower"/>
   </Definition>
   <Definition body="3226"
               end="3284"
               exported="1"
               fullname="types.pval_model_coef"
               inherittype="local"
               line="93"
               name="pval_Model_Coef"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="3201">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="ind_col"/>
    <Field name="dep_nom"/>
    <Field name="w"/>
    <Field name="SE"/>
    <Field name="z"/>
    <Field name="p_value"/>
   </Definition>
   <Definition body="3311"
               end="3350"
               exported="1"
               fullname="types.raw_prediction"
               inherittype="local"
               line="97"
               name="Raw_Prediction"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="3287">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="number"/>
    <Field name="raw"/>
   </Definition>
   <Definition body="3383"
               end="3665"
               exported="1"
               fullname="types.observation_deviance"
               inherittype="local"
               line="100"
               name="Observation_Deviance"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="3353">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="id"/>
    <Field name="classifier"/>
    <Field name="actual"/>
    <Field name="predicted"/>
    <Field name="mod_ll"/>
    <Field name="mod_dev_component"/>
    <Field name="mod_dev_residual"/>
    <Field name="nil_ll"/>
    <Field name="nil_dev_component"/>
    <Field name="nil_dev_residual"/>
   </Definition>
   <Definition body="3693"
               end="3832"
               exported="1"
               fullname="types.deviance_record"
               inherittype="local"
               line="113"
               name="Deviance_Record"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="3668">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="classifier"/>
    <Field name="df"/>
    <Field name="deviance"/>
    <Field name="AIC"/>
   </Definition>
   <Definition body="3855"
               end="4027"
               exported="1"
               fullname="types.aod_record"
               inherittype="local"
               line="120"
               name="AOD_Record"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/./Types.ecl"
               start="3835">
    <Type>record</Type>
    <Field name="wi"/>
    <Field name="classifier"/>
    <Field name="residual_df"/>
    <Field name="df"/>
    <Field name="residual_dev"/>
    <Field name="deviance"/>
    <Field name="p_value"/>
   </Definition>
   <Parents/>
  </Definition>
 </Source>
 <Source name="PBblas.Converted" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl">
  <Import body="0"
          end="7"
          fullname="PBblas"
          inherittype="local"
          line="1"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="7">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="27"
          fullname="PBblas.Types"
          inherittype="local"
          line="2"
          name="Types"
          ref="PBblas.Types"
          start="27">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="264"
          fullname="_versions.ML_Core.V3_1_0.ML_Core.Types"
          inherittype="local"
          line="5"
          name="MlTypes"
          ref="_versions.ML_Core.V3_1_0.ML_Core.Types"
          start="264">
   <loc>loc</loc>
  </Import>
  <Definition body="89"
              end="111"
              fullname="pbblas.numericfield"
              inherittype="local"
              line="4"
              name="NumericField"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
              start="74">
   <Type>record</Type>
   <Field name="wi"/>
   <Field name="id"/>
   <Field name="number"/>
   <Field name="value"/>
  </Definition>
  <Definition body="128"
              end="151"
              fullname="pbblas.discretefield"
              inherittype="local"
              line="5"
              name="DiscreteField"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
              start="112">
   <Type>record</Type>
   <Field name="wi"/>
   <Field name="id"/>
   <Field name="number"/>
   <Field name="value"/>
  </Definition>
  <Definition body="167"
              end="186"
              fullname="pbblas.layout_cell"
              inherittype="local"
              line="6"
              name="Layout_Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
              start="152">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="360"
              end="2759"
              exported="1"
              fullname="PBblas.Converted"
              inherittype="local"
              line="12"
              name="Converted"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
              start="341">
   <Type>module</Type>
   <Parents/>
   <Definition body="726"
               end="975"
               exported="1"
               fullname="pbblas.converted.nftomatrix"
               inherittype="local"
               line="22"
               name="NFToMatrix"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
               start="657">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Convert NumericField dataset to Matrix
    *
    * @param  recs  Record Dataset in DATASET(NumericField) format
    * @return       Matrix in DATASET(Layout_Cell) format
    * @see          PBblas/Types.Layout_Cell
    * @see          ML_Core/Types.NumericField
    *&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="recs"/>
    </Params>
   </Definition>
   <Definition body="1338"
               end="1588"
               exported="1"
               fullname="pbblas.converted.dftomatrix"
               inherittype="local"
               line="41"
               name="DFToMatrix"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
               start="1268">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Convert DiscreteField dataset to Matrix
    *
    * @param  recs  Record Dataset in DATASET(DiscreteField) format
    * @return       Matrix in DATASET(Layout_Cell) format
    * @see          PBblas/Types.Layout_Cell
    * @see          ML_Core/Types.DiscreteField
    *&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="recs"/>
    </Params>
   </Definition>
   <Definition body="1910"
               end="2165"
               exported="1"
               fullname="pbblas.converted.matrixtonf"
               inherittype="local"
               line="59"
               name="MatrixToNF"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
               start="1842">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Convert Matrix to NumericField dataset
    *
    * @param  mat  Matrix in DATASET(Layout_Cell) format
    * @return      NumericField Dataset
    * @see         PBblas/Types.Layout_Cell
    * @see         ML_Core/Types.NumericField&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="mat"/>
    </Params>
   </Definition>
   <Definition body="2491"
               end="2754"
               exported="1"
               fullname="pbblas.converted.matrixtodf"
               inherittype="local"
               line="77"
               name="MatrixToDF"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
               start="2422">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Convert Matrix to DiscreteField dataset
    *
    * @param  mat  Matrix in DATASET(Layout_Cell) format
    * @return      DiscreteField Dataset
    * @see         PBblas/Types.Layout_Cell
    * @see         ML_Core/Types.DiscreteField&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="mat"/>
    </Params>
   </Definition>
   <Documentation>
    <content>&#10;&#32;&#32;* Module to convert between ML_Core/Types Field layouts (i.e. NumericField and
  * DiscreteField) and PBblas matrix layout (i.e. Layout_Cell)&#10;&#32;&#32;</content>
   </Documentation>
  </Definition>
 </Source>
 <Source name="PBblas.internal.Types" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl">
  <Import body="0"
          end="249"
          fullname="PBblas"
          inherittype="local"
          line="5"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="249">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="271"
          fullname="PBblas.Types"
          inherittype="local"
          line="6"
          name="eTypes"
          ref="PBblas.Types"
          start="271">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Definition body="309"
              end="329"
              fullname="pbblas.internal.dimension_t"
              inherittype="local"
              line="7"
              name="dimension_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
              start="295">
   <Type>attribute</Type>
  </Definition>
  <Definition body="344"
              end="364"
              fullname="pbblas.internal.partition_t"
              inherittype="local"
              line="8"
              name="partition_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
              start="330">
   <Type>attribute</Type>
  </Definition>
  <Definition body="379"
              end="399"
              fullname="pbblas.internal.work_item_t"
              inherittype="local"
              line="9"
              name="work_item_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
              start="365">
   <Type>attribute</Type>
  </Definition>
  <Definition body="636"
              end="8878"
              exported="1"
              fullname="PBblas.internal.Types"
              inherittype="local"
              line="16"
              name="Types"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
              start="621">
   <Type>module</Type>
   <Parents/>
   <Definition body="747"
               end="758"
               exported="1"
               fullname="pbblas.internal.types.partition_t"
               inherittype="local"
               line="20"
               name="partition_t"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
               start="725">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Type for partition id -- only supports up to 64K partitions&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="852"
               end="863"
               exported="1"
               fullname="pbblas.internal.types.node_t"
               inherittype="local"
               line="24"
               name="node_t"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
               start="830">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Type for node id -- only supports up to 64K nodes&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="984"
               end="991"
               exported="1"
               fullname="pbblas.internal.types.value_t"
               inherittype="local"
               line="30"
               name="value_t"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
               start="962">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Type for matrix cell values
    * 
    * WARNING: type used in C++ attribute&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="1147"
               end="1156"
               exported="1"
               fullname="pbblas.internal.types.m_label_t"
               inherittype="local"
               line="35"
               name="m_label_t"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
               start="1125">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Type for matrix label.  Used for Matrix dimensions (see Layout_Dims)
    * and for partitions (see Layout_Part)&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="1893"
               end="1907"
               exported="1"
               fullname="pbblas.internal.types.matrix_t"
               inherittype="local"
               line="58"
               name="matrix_t"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
               start="1871">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Type for dense matrix storage
    *
    * Stored as a set of values in column/row order:
    * [r1c1, r2c1, ... rMc1,
    *  r1c2, r2c2, ... rMc2,
    *  .
    *  .
    *  .
    *  r1cN, r2cN, ... rMcN]
    * 
    * WARNING: type used in C++ attribute
    * Note: This type is not distributed, so should only be used to represent
    * small matrixes(&lt; 1M cells).  Larger matrixes can be represented
    * using Layout_Cell or Layout_Part, both of which can be distributed.
    * A dense matrix can be converted to a scalable sparse form (DATASET(Layout_Cell))
    * using the utility module FromR8Set
    *
    * @see		Layout_Cell
    * @see		Layout_Part
    * @see		Std/PBblas/FromR8Set.ecl&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="1987"
               end="2035"
               exported="1"
               inherittype="local"
               line="63"
               name="PartitionType"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
               start="1964">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Enumeration for Partitioning Type&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="2403"
               end="2426"
               exported="1"
               fullname="pbblas.internal.types.partitiontypestring"
               inherittype="local"
               line="73"
               name="PartitionTypeString"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
               start="2356">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Translation of PartitionType enumeration&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="pt"/>
    </Params>
   </Definition>
   <Definition body="2445"
               end="2955"
               exported="1"
               inherittype="local"
               line="74"
               name="OpType"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
               start="2429">
    <Type>attribute</Type>
   </Definition>
   <Definition body="3090"
               end="3101"
               exported="1"
               fullname="pbblas.internal.types.t_mu_no"
               inherittype="local"
               line="88"
               name="t_mu_no"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
               start="3068">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Type for matrix universe number
    *
    * Allow up to 64k matrices in one universe
    *&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="5873"
               end="6389"
               exported="1"
               fullname="pbblas.internal.types.layout_part"
               inherittype="local"
               line="133"
               name="Layout_Part"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
               start="5851">
    <Type>record</Type>
    <Field name="m_label"/>
    <Field name="wi_id"/>
    <Field name="partition_id"/>
    <Field name="node_id"/>
    <Field name="m_rows"/>
    <Field name="m_cols"/>
    <Field name="row_blocks"/>
    <Field name="col_blocks"/>
    <Field name="block_row"/>
    <Field name="block_col"/>
    <Field name="part_rows"/>
    <Field name="part_cols"/>
    <Field name="first_row"/>
    <Field name="first_col"/>
    <Field name="mat_part"/>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Alternate form for storage of large matrixes as a set of partitions
    * Each partition holds the dense form of a piece of the matrix (see matrix_t)
    * as well as information about its relationship to the larger matrix.
    * The full matrix is then carried as DATASET(Layout_Part).
    * Utility module Converted provides functions for converting a matrix in cell
    * form (see Layout_cell) to partitions and vice versa.
    * This form is primarily used internally to PBblas functions, but can also
    * be used as an intermediate form to avoid repeated conversions from cell
    * form.
    * A work-item id field allows multiple matrixes to be carried in the
    * same dataset.  This supports the &quot;myriad&quot; style interface whereby the
    * same operation can be performed on multiple sets of matrixes at once.
    * The m_label field allows for the separation of multiple matrixes with the
    * same wi_id for operations requiring multiple matrixes.  This allows
    * multiple work-items with multiple matrixes each to be carried in the same
    * dataset.

    * @field wi_id          Work Item Number -- An identifier from 1 to 64K-1 that
    *                         separates and identifies individual matrixes
    * @field m_label        A user provided label indicating to which matrix the dimensions
    *                       apply, when used to describe a set of related matrixes (e.g.,
    *                       &apos;A&apos;, &apos;B&apos;, and &apos;C&apos;) for the same work item used in an operation.    * @field partition_id	A unique ID for this partition within the matrix
    * @field partition_id   The 1-based id of this partition, unique within a work-item
    * @field node_id		The node on which this partition is stored
    * @field m_rows         The number of rows in the full matrix
    * @field m_cols         The number of columns in the full matrix
    * @field row_blocks     The number of row partitions in use
    * @field col_blocks     The number of column partitions in use
    * @field block_row		The row of this partition within the block partition matrix
    * @field block_col		The column of this partition &quot;
    * @field part_rows		The number of rows stored within this partition
    * @field part_cols		The number of columns stored within this partition
    * @field first_row		The first row of the original matrix stored within this
    *						partition
    * @field first_col		The first column of the original matrix stored within this
    *						partition
    * @field mat_part		The dense representation of the cells values within this
    *						partition (see matrix_t)
    * @see		matrix_t
    * @see		Layout_Cell
    * @see		Std/PBblas/Converted&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="7167"
               end="7354"
               exported="1"
               fullname="pbblas.internal.types.layout_target"
               inherittype="local"
               line="164"
               name="Layout_Target"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
               start="7144">
    <Type>record</Type>
    <Field name="t_part_id"/>
    <Field name="t_node_id"/>
    <Field name="t_block_row"/>
    <Field name="t_block_col"/>
    <Field name="t_term"/>
    <Field name="m_label"/>
    <Field name="wi_id"/>
    <Field name="partition_id"/>
    <Field name="node_id"/>
    <Field name="m_rows"/>
    <Field name="m_cols"/>
    <Field name="row_blocks"/>
    <Field name="col_blocks"/>
    <Field name="block_row"/>
    <Field name="block_col"/>
    <Field name="part_rows"/>
    <Field name="part_cols"/>
    <Field name="first_row"/>
    <Field name="first_col"/>
    <Field name="mat_part"/>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Represents the relationship of a partition to the partition holding the
    * results of a matrix operation.  This is used internally to PBblas functions
    * to tie an input partition to its output.  It is not relevant to users of
    * PBblas.
    *
    * @field t_part_id		The output partition to which this partition is related
    * @field t_node_id		The node on which the output partition is located
    * @field t_block_row	The row of the output partition within its partition matrix
    * @field t_block_col	The column of the output partition within its partition matrix
    * @field t_term			A row/column number used to correlate related input partitions used
    *						in calculating the results of the output partition&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="8306"
               end="8658"
               exported="1"
               fullname="pbblas.internal.types.layout_dims"
               inherittype="local"
               line="186"
               name="Layout_Dims"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
               start="8285">
    <Type>record</Type>
    <Field name="m_label"/>
    <Field name="wi_id"/>
    <Field name="m_rows"/>
    <Field name="m_cols"/>
    <Field name="block_rows"/>
    <Field name="block_cols"/>
    <Field name="row_blocks"/>
    <Field name="col_blocks"/>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Record format for matrix and matrix partition dimensions.  Each record describes
    * A single matrix or matrix partition.  Partitions use all of the fields, while
    * a non-partitioned matrix only uses the first two (i.e. m_rows and m_cols).
    * @field m_label A user provided label indicating to which matrix the dimensions
    *                apply, when used to describe a set of related matrixes (e.g.,
    *                &apos;A&apos;, &apos;B&apos;, and &apos;C&apos;) for the same work item used in an operation.
    * @field m_rows The number of rows in the full matrix
    * @field m_cols The number of colums in the full matrix
    * @field block_rows The number of rows in each partition of the matrix
    * @field block_cols The number of columns in each partition
    * @field row_blocks The number of row partitions in use for the matrix
    * @field col_blocks The number of column partitions in use for the matrix&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="8837"
               end="8873"
               exported="1"
               fullname="pbblas.internal.types.layout_wi_id"
               inherittype="local"
               line="202"
               name="Layout_WI_ID"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
               start="8815">
    <Type>record</Type>
    <Field name="wi_id"/>
    <Documentation>
     <content>&#32;&#10;&#32;&#32;&#32;&#32;* Record for a list of work-item ids used internally
    *
    * @field wi_id  The wi_id, typically from a myriad set of matrixes
    *&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Documentation>
    <content>&#10;&#32;&#32;* Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Definition>
 </Source>
 <Source name="std.system.Thorlib" sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl">
  <Definition body="464"
              end="1191"
              inherittype="local"
              line="11"
              name="externals"
              source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl"
              start="452">
   <Type>module</Type>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="node"
               inherittype="local"
               line="13"
               name="node"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="nodes"
               inherittype="local"
               line="14"
               name="nodes"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="l2p"
               inherittype="local"
               line="15"
               name="l2p"
               start="0">
    <Type>function</Type>
    <Params>
     <Param name="name"/>
     <Param name="create"/>
    </Params>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="getfileoffset"
               inherittype="local"
               line="16"
               name="getFileOffset"
               start="0">
    <Type>function</Type>
    <Params>
     <Param name="lfname"/>
    </Params>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="daliserver"
               inherittype="local"
               line="17"
               name="daliServer"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="cluster"
               inherittype="local"
               line="18"
               name="cluster"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="getexpandlogicalname"
               inherittype="local"
               line="19"
               name="getExpandLogicalName"
               start="0">
    <Type>function</Type>
    <Params>
     <Param name="name"/>
    </Params>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="group"
               inherittype="local"
               line="20"
               name="group"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="platform"
               inherittype="local"
               line="21"
               name="platform"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Parents/>
  </Definition>
 </Source>
 <Source name="PBblas.internal.BlockDimensions" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl">
  <Import body="0"
          end="251"
          fullname="PBblas"
          inherittype="local"
          line="5"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="251">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="289"
          fullname="PBblas.Types"
          inherittype="local"
          line="6"
          name="Types"
          ref="PBblas.Types"
          start="289">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="294"
          fullname="PBblas.internal"
          inherittype="local"
          line="7"
          name="int"
          ref="PBblas.internal"
          remotescope="1"
          start="294">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="310"
          fullname="PBblas.internal.Types"
          inherittype="local"
          line="7"
          name="iTypes"
          ref="PBblas.internal.Types"
          start="310">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="339"
          fullname="std.system.Thorlib"
          inherittype="local"
          line="9"
          name="Thorlib"
          ref="std.system.Thorlib"
          start="339">
   <loc>loc</loc>
  </Import>
  <Definition body="309"
              end="329"
              fullname="pbblas.internal.dimension_t"
              inherittype="local"
              line="7"
              name="dimension_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
              start="295">
   <Type>attribute</Type>
  </Definition>
  <Definition body="404"
              end="426"
              inherittype="local"
              line="12"
              name="p_types"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
              start="394">
   <Type>attribute</Type>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Enumeration for Partitioning Type&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="1665"
              end="6225"
              exported="1"
              fullname="pbblas.internal.blockdimensions"
              inherittype="local"
              line="37"
              name="BlockDimensions"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
              start="1563">
   <Type>module</Type>
   <Params>
    <Param name="N"/>
    <Param name="M"/>
    <Param name="max_partition_size_or"/>
    <Param name="nodes_override"/>
   </Params>
   <Parents/>
   <Definition body="1879"
               end="1972"
               fullname="pbblas.internal.blockdimensions.max_partition_size"
               inherittype="local"
               line="41"
               name="max_partition_size"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="1851">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2126"
               end="2180"
               fullname="pbblas.internal.blockdimensions.nodes"
               inherittype="local"
               line="45"
               name="nodes"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="2111">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2312"
               end="2387"
               fullname="pbblas.internal.blockdimensions.single_partition_size"
               inherittype="local"
               line="47"
               name="single_partition_size"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="2281">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2513"
               end="2625"
               fullname="pbblas.internal.blockdimensions.round_up_to_nodes"
               inherittype="local"
               line="49"
               name="round_up_to_nodes"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="2459">
    <Type>function</Type>
    <Params>
     <Param name="d"/>
    </Params>
   </Definition>
   <Definition body="2644"
               end="2651"
               fullname="pbblas.internal.blockdimensions.cells"
               inherittype="local"
               line="54"
               name="cells"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="2629">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2708"
               end="2715"
               fullname="pbblas.internal.blockdimensions.is_square"
               inherittype="local"
               line="55"
               name="is_square"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="2689">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2785"
               end="2798"
               fullname="pbblas.internal.blockdimensions.min_rc"
               inherittype="local"
               line="56"
               name="min_rc"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="2769">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2853"
               end="2865"
               fullname="pbblas.internal.blockdimensions.max_rc"
               inherittype="local"
               line="57"
               name="max_rc"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="2837">
    <Type>attribute</Type>
   </Definition>
   <Definition body="4282"
               end="4333"
               fullname="pbblas.internal.blockdimensions.test_d"
               inherittype="local"
               line="78"
               name="test_D"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="4254">
    <Type>attribute</Type>
   </Definition>
   <Definition body="4484"
               end="4859"
               fullname="pbblas.internal.blockdimensions.calc_vector_block_size"
               inherittype="local"
               line="81"
               name="calc_vector_block_size"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="4420">
    <Type>function</Type>
    <Params>
     <Param name="dlimit"/>
    </Params>
   </Definition>
   <Definition body="5188"
               end="5551"
               exported="1"
               fullname="pbblas.internal.blockdimensions.partitioning"
               inherittype="local"
               line="94"
               name="Partitioning"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="5166">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The type of partitioning employed: Types.PartitionType.square, .row, or .column or .single&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="5647"
               end="5776"
               exported="1"
               fullname="pbblas.internal.blockdimensions.pn"
               inherittype="local"
               line="102"
               name="PN"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="5623">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The row dimension of the optimal Partition Matrix&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="5875"
               end="6004"
               exported="1"
               fullname="pbblas.internal.blockdimensions.pm"
               inherittype="local"
               line="107"
               name="PM"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="5851">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The column dimension of the optimal Partition Matrix&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="6096"
               end="6111"
               exported="1"
               fullname="pbblas.internal.blockdimensions.blockrows"
               inherittype="local"
               line="112"
               name="BlockRows"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="6077">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The number of rows in each partition (i.e. block)&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="6205"
               end="6220"
               exported="1"
               fullname="pbblas.internal.blockdimensions.blockcols"
               inherittype="local"
               line="116"
               name="BlockCols"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensions.ecl"
               start="6186">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The number of columns in each partition (i.e. block)&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Documentation>
    <content>&#10;&#32;&#32;* Auto-Partitioning for a Single Matrix
  *
  * Given an input of N and M describing the dimensions of a matrix (N rows x M columns),
  * calculate the optimal square (d x d), row (d x 1), or column (1 x d) partition  
  * matrix dimensions: PN and BM,  subject to the following constraints:
  * 1) Cells per partition &lt;= 1,000,000
  * 2) Partitions should not be empty:  At least one row and column in each partition
  * 3) The number of partitions should be a multiple of the number of nodes
  * 4) Partition size as large as possible
  *
  * Note: These constraints are in priority order.  (1) should always be met.  Others are best effort.
  * Note: This module is used internally to PBblas, and should not be needed by users of PBblas
  *
  * @param N		The row dimension of the matrix to be partitioned
  * @param M		The column dimension of the matrix to be partitioned
  * @param max_partition_size The largest allowed partition size.  For advanced use only.
  * @param nodes_override For testing only.  Overrides the number of nodes in the cluster.
  *                          Should never be used in production.&#10;&#32;&#32;</content>
   </Documentation>
  </Definition>
 </Source>
 <Source name="PBblas.internal.BlockDimensionsMultiply" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl">
  <Import body="0"
          end="250"
          fullname="PBblas"
          inherittype="local"
          line="4"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="250">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="272"
          fullname="PBblas.internal"
          inherittype="local"
          line="5"
          name="int"
          ref="PBblas.internal"
          remotescope="1"
          start="272">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="289"
          fullname="PBblas.Types"
          inherittype="local"
          line="6"
          name="Types"
          ref="PBblas.Types"
          start="289">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="310"
          fullname="PBblas.internal.Types"
          inherittype="local"
          line="7"
          name="iTypes"
          ref="PBblas.internal.Types"
          start="310">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Definition body="309"
              end="329"
              fullname="pbblas.internal.dimension_t"
              inherittype="local"
              line="7"
              name="dimension_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
              start="295">
   <Type>attribute</Type>
  </Definition>
  <Definition body="1973"
              end="5853"
              exported="1"
              fullname="pbblas.internal.blockdimensionsmultiply"
              inherittype="local"
              line="36"
              name="BlockDimensionsMultiply"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
              start="1859">
   <Type>module</Type>
   <Params>
    <Param name="N"/>
    <Param name="M"/>
    <Param name="P"/>
    <Param name="max_part_size_or"/>
    <Param name="nodes_or"/>
   </Params>
   <Parents/>
   <Definition body="2191"
               end="2257"
               fullname="pbblas.internal.blockdimensionsmultiply.max_part_size"
               inherittype="local"
               line="41"
               name="max_part_size"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="2168">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2277"
               end="2282"
               fullname="pbblas.internal.blockdimensionsmultiply.a_cells"
               inherittype="local"
               line="42"
               name="a_cells"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="2260">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2302"
               end="2307"
               fullname="pbblas.internal.blockdimensionsmultiply.b_cells"
               inherittype="local"
               line="43"
               name="b_cells"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="2285">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2327"
               end="2332"
               fullname="pbblas.internal.blockdimensionsmultiply.c_cells"
               inherittype="local"
               line="44"
               name="c_cells"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="2310">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2354"
               end="2388"
               exported="1"
               fullname="pbblas.internal.blockdimensionsmultiply.min_cells"
               inherittype="local"
               line="45"
               name="min_cells"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="2335">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2410"
               end="2444"
               exported="1"
               fullname="pbblas.internal.blockdimensionsmultiply.max_cells"
               inherittype="local"
               line="46"
               name="max_cells"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="2391">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2484"
               end="3190"
               fullname="pbblas.internal.blockdimensionsmultiply.a_first"
               inherittype="local"
               line="48"
               name="A_first"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="2448">
    <Type>attribute</Type>
   </Definition>
   <Definition body="3229"
               end="3940"
               fullname="pbblas.internal.blockdimensionsmultiply.b_first"
               inherittype="local"
               line="63"
               name="B_first"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="3193">
    <Type>attribute</Type>
   </Definition>
   <Definition body="3979"
               end="4654"
               fullname="pbblas.internal.blockdimensionsmultiply.c_first"
               inherittype="local"
               line="78"
               name="C_first"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="3943">
    <Type>attribute</Type>
   </Definition>
   <Definition body="4731"
               end="4813"
               fullname="pbblas.internal.blockdimensionsmultiply.solution"
               inherittype="local"
               line="94"
               name="solution"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="4713">
    <Type>attribute</Type>
   </Definition>
   <Definition body="4932"
               end="4945"
               exported="1"
               fullname="pbblas.internal.blockdimensionsmultiply.pn"
               inherittype="local"
               line="99"
               name="PN"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="4920">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The row dimension of A&apos;s partition matrix and of the C and result partition matrixes&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="5070"
               end="5083"
               exported="1"
               fullname="pbblas.internal.blockdimensionsmultiply.pm"
               inherittype="local"
               line="103"
               name="PM"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="5058">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The column dimension of A&apos;s partition matrix and the row dimension of B&apos;s partition matrix&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="5205"
               end="5218"
               exported="1"
               fullname="pbblas.internal.blockdimensionsmultiply.pp"
               inherittype="local"
               line="107"
               name="PP"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="5193">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The column dimension of B&apos;s partition matrix and of the C and result partition matrixes&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="5325"
               end="5340"
               exported="1"
               fullname="pbblas.internal.blockdimensionsmultiply.ablockrows"
               inherittype="local"
               line="111"
               name="AblockRows"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="5305">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The number of rows in each partition of A, C and result matrixes&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="5481"
               end="5496"
               exported="1"
               fullname="pbblas.internal.blockdimensionsmultiply.ablockcols"
               inherittype="local"
               line="115"
               name="AblockCols"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="5461">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The number of columns in each partition of A, and the number of rows in each partition of B matrix&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="5607"
               end="5622"
               exported="1"
               fullname="pbblas.internal.blockdimensionsmultiply.bblockcols"
               inherittype="local"
               line="119"
               name="BblockCols"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="5587">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The number of columns in each partition of B, C, and result matrixes&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="5780"
               end="5848"
               exported="1"
               fullname="pbblas.internal.blockdimensionsmultiply.partitioning"
               inherittype="local"
               line="125"
               name="Partitioning"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsMultiply.ecl"
               start="5737">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The type of partitioning used. See Types.PartitionType
    *
    * @see Std/PBblas/Types.ecl&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Documentation>
    <content>&#10;* Auto-Partitioning for Multiply operations
*
* Given an input of N, M, and P, describing the dimensions of A (N x M), B (M x P), and C (N x P) 
* matrixes, calculate the optimal square (d x d), row (d x 1), or column (1 x d) partition  
* matrix dimensions: PN, PM, and PP, representing the dimensions of the three partition
* matrixes for A, B, and C respectively (P(A): PN x PM, P(B): PM x PP, P(C): PN x PP). 
* Each of the partition matrixes is subject to the following constraints:
* 1) Cells per partition &lt;= 1,000,000
* 2) Partitions should not be empty:  At least one row and column in each partition
* 3) The number of partitions should be a multiple of the number of nodes
* 4) Partition size as large as possible
*
* Note: These constraints are in priority order.  (1) should always be met.  Others are best effort.
* Note: This module is used internally to PBblas, and should not be needed by users of PBblas
*
* @param N		The Row dimension of the A matrix (multiplier) and the C (addend) and Result matrixes
* @param M		The Column dimension of the A matrix and the Row dimension of the B matrix (multiplicand)
* @param P		The Column dimension of the B matrix and of the C and Result matrixes
* @param max_part_size_or Overrides the largest allowed partition size.  For advanced use only.
* @param nodes_or For testing only.  Overrides the number of nodes in the cluster.
*                          Should never be used in production.
* @see			Std/PBblas/BlockDimensions&#10;</content>
   </Documentation>
  </Definition>
 </Source>
 <Source name="PBblas.internal.BlockDimensionsSolve" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl">
  <Import body="0"
          end="250"
          fullname="PBblas"
          inherittype="local"
          line="4"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="250">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="272"
          fullname="PBblas.internal"
          inherittype="local"
          line="5"
          name="int"
          ref="PBblas.internal"
          remotescope="1"
          start="272">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="289"
          fullname="PBblas.Types"
          inherittype="local"
          line="6"
          name="Types"
          ref="PBblas.Types"
          start="289">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Definition body="309"
              end="329"
              fullname="pbblas.internal.dimension_t"
              inherittype="local"
              line="7"
              name="dimension_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
              start="295">
   <Type>attribute</Type>
  </Definition>
  <Definition body="2007"
              end="3584"
              exported="1"
              fullname="pbblas.internal.blockdimensionssolve"
              inherittype="local"
              line="39"
              name="BlockDimensionsSolve"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl"
              start="1911">
   <Type>module</Type>
   <Params>
    <Param name="N"/>
    <Param name="M"/>
    <Param name="max_part_size_or"/>
    <Param name="nodes_or"/>
   </Params>
   <Parents/>
   <Definition body="2224"
               end="2290"
               fullname="pbblas.internal.blockdimensionssolve.max_part_size"
               inherittype="local"
               line="44"
               name="max_part_size"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl"
               start="2201">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2310"
               end="2315"
               fullname="pbblas.internal.blockdimensionssolve.a_cells"
               inherittype="local"
               line="45"
               name="a_cells"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl"
               start="2293">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2335"
               end="2340"
               fullname="pbblas.internal.blockdimensionssolve.b_cells"
               inherittype="local"
               line="46"
               name="b_cells"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl"
               start="2318">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2362"
               end="2385"
               exported="1"
               fullname="pbblas.internal.blockdimensionssolve.min_cells"
               inherittype="local"
               line="47"
               name="min_cells"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl"
               start="2343">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2407"
               end="2430"
               exported="1"
               fullname="pbblas.internal.blockdimensionssolve.max_cells"
               inherittype="local"
               line="48"
               name="max_cells"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl"
               start="2388">
    <Type>attribute</Type>
   </Definition>
   <Definition body="2654"
               end="2667"
               fullname="pbblas.internal.blockdimensionssolve.pn0"
               inherittype="local"
               line="53"
               name="PN0"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl"
               start="2641">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The row dimension of the optimal Partition Matrix&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="2887"
               end="2937"
               fullname="pbblas.internal.blockdimensionssolve.pm0"
               inherittype="local"
               line="57"
               name="PM0"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl"
               start="2874">
    <Type>attribute</Type>
   </Definition>
   <Definition body="3057"
               end="3062"
               exported="1"
               fullname="pbblas.internal.blockdimensionssolve.pn"
               inherittype="local"
               line="62"
               name="PN"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl"
               start="3045">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The row and column dimension of A&apos;s partition matrix and either row or column of B&apos;s&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="3215"
               end="3220"
               exported="1"
               fullname="pbblas.internal.blockdimensionssolve.pm"
               inherittype="local"
               line="67"
               name="PM"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl"
               start="3203">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The row or column dimension of B and X(result) matrixes depending on the type
    * of solve (see module description).&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="3377"
               end="3392"
               exported="1"
               fullname="pbblas.internal.blockdimensionssolve.ablockdim"
               inherittype="local"
               line="72"
               name="AblockDim"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl"
               start="3358">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The number of rows and columns in each partition of A
    * @return  The side dimension of &apos;A&apos; matrix (a is square)&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Definition body="3564"
               end="3579"
               exported="1"
               fullname="pbblas.internal.blockdimensionssolve.bblockdim"
               inherittype="local"
               line="77"
               name="BblockDim"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/BlockDimensionsSolve.ecl"
               start="3545">
    <Type>attribute</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* The number of rows or columns in each partition of B and X (result) depending
    * on the type of solve (see module description).&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
   </Definition>
   <Documentation>
    <content>&#10;* Auto-Partitioning for Solve operations
*
* Given an input of N and M, describing the dimensions of A (N x N), B (N x M) or (M x N)
* matrixes, calculate the optimal square (d x d) partitioning for A and rectangular
* partitioning for B.  Calculate the partition matrix dimensions: PN and PM representing the
* dimensions of the partition
* matrixes for A and B respectively (P(A): PN x PN, P(B): PM x PN or PN x PM.
* Note that for solving Ax=B, B will be N x M, and for solving xA = B, B will be M x N.
* Each of the partition matrixes is subject to the following constraints:
* 1) Cells per partition &lt;= 1,000,000
* 2) Partitions should not be empty:  At least one row and column in each partition
* 3) The number of partitions should be a multiple of the number of nodes
* 4) Partition size as large as possible
*
* Note: These constraints are in priority order.  (1) should always be met.  Others are best effort.
* Note: This module is used internally to PBblas, and should not be needed by users of PBblas
*
* @param N    The Row and Column dimension of the A matrix and either the Row or Column
*                dimension of B (depending on the type of solve).
* @param M    The Column or Row dimension of B (depending on the type of
*                solve)
* @param max_part_size_or Overrides the largest allowed partition size.
*                For advanced use only.
* @param nodes_or For testing only.  Overrides the number of nodes in the cluster.
*                          Should never be used in production.
* @see      Std/PBblas/BlockDimensions&#10;</content>
   </Documentation>
  </Definition>
 </Source>
 <Source name="PBblas.internal.MatDims" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl">
  <Import body="0"
          end="250"
          fullname="PBblas"
          inherittype="local"
          line="4"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="250">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="272"
          fullname="PBblas.internal"
          inherittype="local"
          line="5"
          name="int"
          ref="PBblas.internal"
          remotescope="1"
          start="272">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="289"
          fullname="PBblas.Types"
          inherittype="local"
          line="6"
          name="Types"
          ref="PBblas.Types"
          start="289">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="310"
          fullname="PBblas.internal.Types"
          inherittype="local"
          line="7"
          name="iTypes"
          ref="PBblas.internal.Types"
          start="310">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Definition body="309"
              end="329"
              fullname="pbblas.internal.dimension_t"
              inherittype="local"
              line="7"
              name="dimension_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
              start="295">
   <Type>attribute</Type>
  </Definition>
  <Definition body="379"
              end="399"
              fullname="pbblas.internal.work_item_t"
              inherittype="local"
              line="9"
              name="work_item_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
              start="365">
   <Type>attribute</Type>
  </Definition>
  <Definition body="413"
              end="432"
              fullname="pbblas.internal.layout_cell"
              inherittype="local"
              line="10"
              name="Layout_Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
              start="399">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="447"
              end="467"
              fullname="pbblas.internal.layout_dims"
              inherittype="local"
              line="11"
              name="Layout_Dims"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
              start="433">
   <Type>record</Type>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="block_rows"/>
   <Field name="block_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Record format for matrix and matrix partition dimensions.  Each record describes
    * A single matrix or matrix partition.  Partitions use all of the fields, while
    * a non-partitioned matrix only uses the first two (i.e. m_rows and m_cols).
    * @field m_label A user provided label indicating to which matrix the dimensions
    *                apply, when used to describe a set of related matrixes (e.g.,
    *                &apos;A&apos;, &apos;B&apos;, and &apos;C&apos;) for the same work item used in an operation.
    * @field m_rows The number of rows in the full matrix
    * @field m_cols The number of colums in the full matrix
    * @field block_rows The number of rows in each partition of the matrix
    * @field block_cols The number of columns in each partition
    * @field row_blocks The number of row partitions in use for the matrix
    * @field col_blocks The number of column partitions in use for the matrix&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="482"
              end="497"
              inherittype="local"
              line="12"
              name="OpType"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
              start="468">
   <Type>attribute</Type>
  </Definition>
  <Definition body="512"
              end="530"
              fullname="pbblas.internal.m_label_t"
              inherittype="local"
              line="13"
              name="m_label_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
              start="498">
   <Type>attribute</Type>
  </Definition>
  <Definition body="658"
              end="14974"
              exported="1"
              fullname="PBblas.internal.MatDims"
              inherittype="local"
              line="19"
              name="MatDims"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
              start="641">
   <Type>module</Type>
   <Parents/>
   <Definition body="1478"
               end="1840"
               exported="1"
               fullname="pbblas.internal.matdims.fromcells"
               inherittype="local"
               line="33"
               name="FromCells"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
               start="1409">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Get basic matrix dimensions (m_rows, m_cols) from a dataset of cells (Layout_Cell).
    * Multiple matrices can be included in the dataset separated by wi_id.  One record of 
    * Layout_Dims will be produced for each matrix in the input set. 
    * 
    * @param cells   dataset of Layout_Cell containing the matrixes to be dimensioned
    * @param m_label a single text label to be attached to the dimensions so that
    *                this set of dimensions can be distinguished from another set
    *                used by the same operation (e.g. &apos;A&apos;, &apos;B&apos;, or &apos;C&apos;)
    * @return        DATASET(Layout_Dims), one record per work item
    * @see Std/PBblas/Types.Layout_Cell
    * @see Std/PBblas/Types.Layout_Dims&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="cells"/>
     <Param name="m_label"/>
    </Params>
   </Definition>
   <Definition body="2238"
               end="2621"
               exported="1"
               fullname="pbblas.internal.matdims.partitionedfromdims"
               inherittype="local"
               line="52"
               name="PartitionedFromDims"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
               start="2182">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Determine optimal partitioning scheme for one or more matrixes based on the dimensions
    * provided.
    * 
    * @param dims            DATASET(Layout_Dims), typically output from FromCells above
    * @return                DATASET(Layout_Dims), with partition info filled in
    * @see Std/PBblas/Types.Layout_Dims&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="dims"/>
    </Params>
   </Definition>
   <Definition body="3389"
               end="3525"
               exported="1"
               fullname="pbblas.internal.matdims.partitionedfromcells"
               inherittype="local"
               line="78"
               name="PartitionedFromCells"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
               start="3309">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Generate a partitioning scheme from a set of matrices in cell form.
    * Essentially a shortcut for FromCells followed by PartitionedFromDims
    * 
    * @param cells   DATASET(Layout_Cell) representing one or more matrixes
    * @param m_label a single text label to be attached to the dimensions so that
    *                this set of dimensions can be distinguished from another set
    *                used by the same operation (e.g. &apos;A&apos;, &apos;B&apos;, or &apos;C&apos;)
    * @return        DATASET(Layout_Dims) with partition info filled in
    * @see Std/PBblas/Types.Layout_Dims
    * @see Std/PBblas/Types.Layout_Cell
    * @see FromCells
    * @see PartitionedFromDims&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="cells"/>
     <Param name="m_label"/>
    </Params>
   </Definition>
   <Definition body="4788"
               end="14044"
               exported="1"
               fullname="pbblas.internal.matdims.partitionedfromdimsforop"
               inherittype="local"
               line="104"
               name="PartitionedFromDimsForOp"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
               start="4716">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Determines an optimal partitioning scheme for a set of matrixes involved in
    * a given operation.  This handles interlocking dimensions such as those involved
    * in a multiplication operation.  Note that calling this function with OpType.single
    * is equivalent to calling PartitionedFromDims above.
    * The input dimensions include dimensions from different work-items (separated by
    * wi_id) as well as dimensions from separate matrixes (e.g. A, B, and C/result)
    * within a work-item (separated by m_label).
    * Each operation-type may have a different expected set of m_labels and will perform
    * its interlock calculations accordingly.
    * 
    * @param op              The operation requiring partitioning.  See Types.OpType
    * @param dims            DATASET(Layout_Dims) typically returned by FromCells above
    * @return                DATASET(Layout_Dims) with patition info filled in.
    *                        This will contain one entry per work item, per
    *                        matrix label.
    * @see Std/PBblas/Types.Layout_Dims
    * @see Std/PBblas/Types.OpType
    * @see FromCells
    * @see PartitionedFromDims&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="op"/>
     <Param name="dims"/>
    </Params>
   </Definition>
   <Definition body="14514"
               end="14969"
               exported="1"
               fullname="pbblas.internal.matdims.transposedims"
               inherittype="local"
               line="315"
               name="TransposeDims"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
               start="14461">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Transpose rows and columns for a set of matrix dimensions.
    * Can be used for single matrix dimensions or partitioned matrixes.
    * Returns one record for each input record.  Many matrixes can
    * be included in one call.
    *
    * @param dims_in   The dimensions to be transposed in Layout_Dims format
    * @return          DATASET(Layout_Dims), the input dimensions transposed
    *&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="dims_in"/>
    </Params>
   </Definition>
   <Documentation>
    <content>&#10;&#32;&#32;* Module to calculate matrix dimensions and matrix partition dimensions from
  * matrix cells.
  *&#10;&#32;&#32;</content>
   </Documentation>
  </Definition>
 </Source>
 <Source name="PBblas.MatUtils" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl">
  <Import body="0"
          end="27"
          fullname="PBblas.Types"
          inherittype="local"
          line="2"
          name="Types"
          ref="PBblas.Types"
          start="27">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="250"
          fullname="PBblas"
          inherittype="local"
          line="5"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="250">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="291"
          fullname="PBblas.internal"
          inherittype="local"
          line="7"
          name="int"
          ref="PBblas.internal"
          remotescope="1"
          start="291">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="322"
          fullname="PBblas.internal.Types"
          inherittype="local"
          line="8"
          name="iTypes"
          ref="PBblas.internal.Types"
          start="322">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="350"
          fullname="PBblas.internal.MatDims"
          inherittype="local"
          line="9"
          name="MatDims"
          ref="PBblas.internal.MatDims"
          start="350">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Module to calculate matrix dimensions and matrix partition dimensions from
  * matrix cells.
  *&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Definition body="167"
              end="186"
              fullname="pbblas.layout_cell"
              inherittype="local"
              line="6"
              name="Layout_Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
              start="152">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="379"
              end="398"
              fullname="pbblas.dimension_t"
              inherittype="local"
              line="11"
              name="dimension_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="364">
   <Type>attribute</Type>
  </Definition>
  <Definition body="414"
              end="429"
              fullname="pbblas.value_t"
              inherittype="local"
              line="12"
              name="value_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="399">
   <Type>attribute</Type>
  </Definition>
  <Definition body="480"
              end="500"
              fullname="pbblas.layout_dims"
              inherittype="local"
              line="14"
              name="Layout_Dims"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="465">
   <Type>record</Type>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="block_rows"/>
   <Field name="block_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Record format for matrix and matrix partition dimensions.  Each record describes
    * A single matrix or matrix partition.  Partitions use all of the fields, while
    * a non-partitioned matrix only uses the first two (i.e. m_rows and m_cols).
    * @field m_label A user provided label indicating to which matrix the dimensions
    *                apply, when used to describe a set of related matrixes (e.g.,
    *                &apos;A&apos;, &apos;B&apos;, and &apos;C&apos;) for the same work item used in an operation.
    * @field m_rows The number of rows in the full matrix
    * @field m_cols The number of colums in the full matrix
    * @field block_rows The number of rows in each partition of the matrix
    * @field block_cols The number of columns in each partition
    * @field row_blocks The number of row partitions in use for the matrix
    * @field col_blocks The number of column partitions in use for the matrix&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="516"
              end="537"
              fullname="pbblas.layout_wi_id"
              inherittype="local"
              line="15"
              name="Layout_WI_ID"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="501">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Documentation>
    <content>&#32;&#10;&#32;&#32;&#32;&#32;* Record for a list of work-item ids used internally
    *
    * @field wi_id  The wi_id, typically from a myriad set of matrixes
    *&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="553"
              end="572"
              fullname="pbblas.work_item_t"
              inherittype="local"
              line="16"
              name="work_item_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="538">
   <Type>attribute</Type>
  </Definition>
  <Definition body="716"
              end="3765"
              exported="1"
              fullname="PBblas.MatUtils"
              inherittype="local"
              line="22"
              name="MatUtils"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="698">
   <Type>module</Type>
   <Parents/>
   <Definition body="1185"
               end="1412"
               exported="1"
               fullname="pbblas.matutils.getworkitems"
               inherittype="local"
               line="35"
               name="GetWorkItems"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
               start="1113">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Get a list of work-item ids from a matrix containing one or more work items
    *
    * @param cells     A matrix in Layout_Cell format
    * @return          DATASET(Layout_WI_ID), one record per work-item
    * @see			   PBblas/Types.Layout_Cell
    * @see			   PBblas/Types.Layout_WI_ID&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="cells"/>
    </Params>
   </Definition>
   <Definition body="2122"
               end="3175"
               exported="1"
               fullname="pbblas.matutils.insertcols"
               inherittype="local"
               line="57"
               name="InsertCols"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
               start="2003">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Insert one or more columns of a fixed value into a matrix.
    * Columns are inserted before the first original column.
    *
    * This attribute supports the myriad interface.  Multiple independent matrixes
    * can be represented by M.
    *
    * @param M              the input matrix
    * @param cols_to_insert the number of columns to insert, default 1
    * @param insert_val     the value for each cell of the new column(s),     
    *                       default 0
    * @return               matrix in Layout_Cell format with additional column(s)
    *&#32;&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="M"/>
     <Param name="cols_to_insert"/>
     <Param name="insert_val"/>
    </Params>
   </Definition>
   <Definition body="3565"
               end="3759"
               exported="1"
               fullname="pbblas.matutils.transpose"
               inherittype="local"
               line="96"
               name="Transpose"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
               start="3501">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Transpose a matrix
    * 
    * This attribute supports the myriad interface.  Multiple independent matrixes
    * can be represented by M.
    *
    * @param M  A matrix represented as DATASET(Layout_Cell)
    * @return   Transposed matrix in Layout_Cell format
    * @see      PBblas/Types.Layout_Cell&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="M"/>
    </Params>
   </Definition>
   <Documentation>
    <content>&#10;&#32;&#32;* Provides various utility attributes for manipulating cell-based matrixes
  * @see Std/PBblas/Types.Layout_Cell&#10;&#32;&#32;</content>
   </Documentation>
  </Definition>
 </Source>
 <Source sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/plugins/lib_eclblas.ecllib"/>
 <Source name="std.BLAS" sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl">
  <Definition body="853"
              end="11458"
              exported="1"
              fullname="std.BLAS"
              inherittype="local"
              line="19"
              name="BLAS"
              source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
              start="839">
   <Type>module</Type>
   <Definition body="947"
               end="1456"
               exported="1"
               fullname="std.BLAS.Types"
               inherittype="local"
               line="21"
               name="Types"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="932">
    <Type>module</Type>
    <Definition body="982"
                end="1008"
                exported="1"
                fullname="std.blas.types.value_t"
                inherittype="local"
                line="22"
                name="value_t"
                source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
                start="960">
     <Type>attribute</Type>
    </Definition>
    <Definition body="1049"
                end="1079"
                exported="1"
                fullname="std.blas.types.dimension_t"
                inherittype="local"
                line="23"
                name="dimension_t"
                source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
                start="1027">
     <Type>attribute</Type>
    </Definition>
    <Definition body="1120"
                end="1147"
                exported="1"
                fullname="std.blas.types.matrix_t"
                inherittype="local"
                line="24"
                name="matrix_t"
                source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
                start="1098">
     <Type>attribute</Type>
    </Definition>
    <Definition body="1193"
                end="1220"
                exported="1"
                inherittype="local"
                line="25"
                name="Triangle"
                source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
                start="1171">
     <Type>attribute</Type>
    </Definition>
    <Definition body="1287"
                end="1314"
                exported="1"
                inherittype="local"
                line="26"
                name="Diagonal"
                source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
                start="1265">
     <Type>attribute</Type>
    </Definition>
    <Definition body="1388"
                end="1411"
                exported="1"
                inherittype="local"
                line="27"
                name="Side"
                source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
                start="1366">
     <Type>attribute</Type>
    </Definition>
    <Parents/>
   </Definition>
   <Definition body="1799"
               end="1802"
               exported="1"
               fullname="std.blas.icellfunc"
               inherittype="local"
               line="37"
               name="ICellFunc"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="1639">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* Function prototype for Apply2Cell.
   * @param v the value
   * @param r the row ordinal
   * @param c the column ordinal
   * @return the updated value&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="v"/>
     <Param name="r"/>
     <Param name="c"/>
    </Params>
   </Definition>
   <Definition body="2237"
               end="2557"
               exported="1"
               fullname="std.blas.apply2cells"
               inherittype="local"
               line="49"
               name="Apply2Cells"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="2017">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* Iterate matrix and apply function to each cell
   *@param m number of rows
   *@param n number of columns
   *@param x matrix
   *@param f function to apply
   *@return updated matrix&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="m"/>
     <Param name="n"/>
     <Param name="x"/>
     <Param name="f"/>
    </Params>
   </Definition>
   <Definition body="3082"
               end="3130"
               exported="1"
               fullname="std.blas.dasum"
               inherittype="local"
               line="73"
               name="dasum"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="2934">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* Absolute sum, the 1 norm of a vector.
   *@param m the number of entries
   *@param x the column major matrix holding the vector
   *@param incx the increment for x, 1 in the case of an actual vector
   *@param skipped default is zero, the number of entries stepped over
   * to get to the first entry
   *@return the sum of the absolute values&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="m"/>
     <Param name="x"/>
     <Param name="incx"/>
     <Param name="skipped"/>
    </Params>
   </Definition>
   <Definition body="3887"
               end="3964"
               exported="1"
               fullname="std.blas.daxpy"
               inherittype="local"
               line="90"
               name="daxpy"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="3626">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;* alpha*X + Y
 * @param N number of elements in vector
 * @param alpha the scalar multiplier
 * @param X the column major matrix holding the vector X
 * @param incX the increment or stride for the vector
 * @param Y the column major matrix holding the vector Y
 * @param incY the increment or stride of Y
 * @param x_skipped number of entries skipped to get to the first X
 * @param y_skipped number of entries skipped to get to the first Y
 * @return the updated matrix&#13;&#10;&#32;</content>
    </Documentation>
    <Params>
     <Param name="N"/>
     <Param name="alpha"/>
     <Param name="X"/>
     <Param name="incX"/>
     <Param name="Y"/>
     <Param name="incY"/>
     <Param name="x_skipped"/>
     <Param name="y_skipped"/>
    </Params>
   </Definition>
   <Definition body="4764"
               end="4846"
               exported="1"
               fullname="std.blas.dgemm"
               inherittype="local"
               line="109"
               name="dgemm"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="4465">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* alpha*op(A) op(B) + beta*C where op() is transpose
   * @param transposeA true when transpose of A is used
   * @param transposeB true when transpose of B is used
   * @param M number of rows in product
   * @param N number of columns in product
   * @param K number of columns/rows for the multiplier/multiplicand
   * @param alpha scalar used on A
   * @param A matrix A
   * @param B matrix B
   * @param beta scalar for matrix C
   * @param C matrix C or empty&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="transposeA"/>
     <Param name="transposeB"/>
     <Param name="M"/>
     <Param name="N"/>
     <Param name="K"/>
     <Param name="alpha"/>
     <Param name="A"/>
     <Param name="B"/>
     <Param name="beta"/>
     <Param name="C"/>
    </Params>
   </Definition>
   <Definition body="5261"
               end="5298"
               exported="1"
               fullname="std.blas.dgetf2"
               inherittype="local"
               line="124"
               name="dgetf2"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="5153">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* Compute LU Factorization of matrix A.
   * @param m number of rows of A
   * @param n number of columns of A
   * @return composite matrix of factors, lower triangle has an
   *         implied diagonal of ones.  Upper triangle has the diagonal of the
   *         composite.&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="m"/>
     <Param name="n"/>
     <Param name="a"/>
    </Params>
   </Definition>
   <Definition body="6087"
               end="6133"
               exported="1"
               fullname="std.blas.dpotf2"
               inherittype="local"
               line="143"
               name="dpotf2"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="5934">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* DPOTF2 computes the Cholesky factorization of a real symmetric
   * positive definite matrix A.
   *The factorization has the form
   * A = U**T * U ,  if UPLO = &apos;U&apos;, or
   * A = L  * L**T,  if UPLO = &apos;L&apos;,
   * where U is an upper triangular matrix and L is lower triangular.
   * This is the unblocked version of the algorithm, calling Level 2 BLAS.
   * @param tri indicate whether upper or lower triangle is used
   * @param r number of rows/columns in the square matrix
   * @param A the square matrix
   * @param clear clears the unused triangle
   * @return the triangular matrix requested.&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="tri"/>
     <Param name="r"/>
     <Param name="A"/>
     <Param name="clear"/>
    </Params>
   </Definition>
   <Definition body="6683"
               end="6738"
               exported="1"
               fullname="std.blas.dscal"
               inherittype="local"
               line="157"
               name="dscal"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="6507">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* Scale a vector alpha
   * @param N number of elements in the vector
   * @param alpha the scaling factor
   * @param X the column major matrix holding the vector
   * @param incX the stride to get to the next element in the vector
   * @param skipped the number of elements skipped to get to the first element
   * @return the updated matrix&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="N"/>
     <Param name="alpha"/>
     <Param name="X"/>
     <Param name="incX"/>
     <Param name="skipped"/>
    </Params>
   </Definition>
   <Definition body="7689"
               end="7765"
               exported="1"
               fullname="std.blas.dsyrk"
               inherittype="local"
               line="177"
               name="dsyrk"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="7415">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* Implements symmetric rank update C &lt;- alpha A**T A + beta C or
   * c &lt;- alpha A A**T + beta C.  C is N x N.
   * @param tri update upper or lower triangle
   * @param transposeA Transpose the A matrix to be NxK
   * @param N number of rows
   * @param K number of columns in the update matrix or transpose
   * @param alpha the alpha scalar
   * @param A the update matrix, either NxK or KxN
   * @param beta the beta scalar
   * @param C the matrix to update
   * @param clear clear the triangle that is not updated.  BLAS assumes
   * that symmetric matrices have only one of the triangles and this
   * option lets you make that true.&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="tri"/>
     <Param name="transposeA"/>
     <Param name="N"/>
     <Param name="K"/>
     <Param name="alpha"/>
     <Param name="A"/>
     <Param name="beta"/>
     <Param name="C"/>
     <Param name="clear"/>
    </Params>
   </Definition>
   <Definition body="8753"
               end="8833"
               exported="1"
               fullname="std.blas.dtrsm"
               inherittype="local"
               line="199"
               name="dtrsm"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="8458">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* Triangular matrix solver.  op(A) X = alpha B or X op(A) = alpha B
   * where op is Transpose, X and B is MxN
   * @param side side for A, Side.Ax is op(A) X = alpha B
   * @param tri Says whether A is Upper or Lower triangle
   * @param transposeA is op(A) the transpose of A
   * @param diag is the diagonal an implied unit diagonal or supplied
   * @param M number of rows
   * @param N number of columns
   * @param lda the leading dimension of the A matrix, either M or N
   * @param alpha the scalar multiplier for B
   * @param A a triangular matrix
   * @param B the matrix of values for the solve
   * @return the matrix of coefficients to get B.&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="side"/>
     <Param name="tri"/>
     <Param name="transposeA"/>
     <Param name="diag"/>
     <Param name="M"/>
     <Param name="N"/>
     <Param name="lda"/>
     <Param name="alpha"/>
     <Param name="A"/>
     <Param name="B"/>
    </Params>
   </Definition>
   <Definition body="9216"
               end="9529"
               exported="1"
               fullname="std.blas.extract_diag"
               inherittype="local"
               line="213"
               name="extract_diag"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="9043">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* Extract the diagonal of he matrix
   * @param m number of rows
   * @param n number of columns
   * @param x matrix from which to extract the diagonal
   * @return diagonal matrix&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="m"/>
     <Param name="n"/>
     <Param name="x"/>
    </Params>
   </Definition>
   <Definition body="10129"
               end="10180"
               exported="1"
               fullname="std.blas.extract_tri"
               inherittype="local"
               line="236"
               name="extract_tri"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="9932">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* Extract the upper or lower triangle.  Diagonal can be actual or implied
   * unit diagonal.
   * @param m number of rows
   * @param n number of columns
   * @param tri Upper or Lower specifier, Triangle.Lower or Triangle.Upper
   * @param dt Use Diagonal.NotUnitTri or Diagonal.UnitTri
   * @param a Matrix, usually a composite from factoring
   * @return the triangle&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="m"/>
     <Param name="n"/>
     <Param name="tri"/>
     <Param name="dt"/>
     <Param name="a"/>
    </Params>
   </Definition>
   <Definition body="10545"
               end="10585"
               exported="1"
               fullname="std.blas.make_diag"
               inherittype="local"
               line="249"
               name="make_diag"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="10418">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* Generate a diagonal matrix.
   * @param m number of diagonal entries
   * @param v option value, defaults to 1
   * @param X optional input of diagonal values, multiplied by v.
   * @return a diagonal matrix&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="m"/>
     <Param name="v"/>
     <Param name="X"/>
    </Params>
   </Definition>
   <Definition body="11071"
               end="11098"
               exported="1"
               fullname="std.blas.make_vector"
               inherittype="local"
               line="268"
               name="make_vector"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="10967">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* Make a vector of dimension m
   * @param m number of elements
   * @param v the values, defaults to 1
   * @return the vector&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="m"/>
     <Param name="v"/>
    </Params>
   </Definition>
   <Definition body="11426"
               end="11452"
               exported="1"
               fullname="std.blas.trace"
               inherittype="local"
               line="279"
               name="trace"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/BLAS.ecl"
               start="11297">
    <Type>function</Type>
    <Documentation>
     <content>&#13;&#10;&#32;&#32;&#32;* The trace of the input matrix
   * @param m number of rows
   * @param n number of columns
   * @param x the matrix
   * @return the trace (sum of the diagonal entries)&#13;&#10;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="m"/>
     <Param name="n"/>
     <Param name="x"/>
    </Params>
   </Definition>
   <Parents/>
  </Definition>
  <Import body="0"
          end="808"
          fullname="lib_eclblas"
          inherittype="local"
          line="17"
          name="LIB_ECLBLAS"
          ref="lib_eclblas"
          remotescope="1"
          start="808">
   <loc>loc</loc>
  </Import>
 </Source>
 <Source name="PBblas.internal.MakeR8Set" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MakeR8Set.ecl">
  <Import body="0"
          end="251"
          fullname="PBblas"
          inherittype="local"
          line="5"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="251">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="289"
          fullname="PBblas.Types"
          inherittype="local"
          line="6"
          name="Types"
          ref="PBblas.Types"
          start="289">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Definition body="309"
              end="329"
              fullname="pbblas.internal.dimension_t"
              inherittype="local"
              line="7"
              name="dimension_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
              start="295">
   <Type>attribute</Type>
  </Definition>
  <Definition body="331"
              end="346"
              fullname="pbblas.internal.value_t"
              inherittype="local"
              line="8"
              name="value_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MakeR8Set.ecl"
              start="321">
   <Type>attribute</Type>
  </Definition>
  <Definition body="413"
              end="432"
              fullname="pbblas.internal.layout_cell"
              inherittype="local"
              line="10"
              name="Layout_Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
              start="399">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="1327"
              end="2264"
              exported="1"
              fullname="pbblas.internal.maker8set"
              inherittype="local"
              line="24"
              name="makeR8Set"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MakeR8Set.ecl"
              start="1080">
   <Type>embed</Type>
   <Documentation>
    <content>&#10;&#32;&#32;* Take a dataset of cells (or sub-matrix thereof) and pack into a dense matrix.
  * in column major order [r1c1, r2c1, r3c1, ..., rNc1, r1c2, ..., rNcM].
  * First row and first column are one based.
  *
  * @param  r         The number of rows in the matrix or sub-matrix
  * @param  s         The number of columns in the matrix or sub-matrix
  * @param first_row  The first row to include in the submatrix
  * @param first_col  The first column to include in the submatrix
  * @param D          The matrix to convert in Layout_Cell form
  * @param transpose  Boolean to transpose the matrix during conversion (optional)
  * @return           Dense matrix or sub-matrix (SET OF REAL8)&#10;&#32;&#32;</content>
   </Documentation>
   <Params>
    <Param name="r"/>
    <Param name="s"/>
    <Param name="first_row"/>
    <Param name="first_col"/>
    <Param name="D"/>
    <Param name="transpose"/>
   </Params>
  </Definition>
 </Source>
 <Source name="PBblas.internal.Converted" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Converted.ecl">
  <Import body="0"
          end="289"
          fullname="PBblas.Types"
          inherittype="local"
          line="6"
          name="Types"
          ref="PBblas.Types"
          start="289">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="310"
          fullname="PBblas.internal.Types"
          inherittype="local"
          line="7"
          name="iTypes"
          ref="PBblas.internal.Types"
          start="310">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="339"
          fullname="std.system.Thorlib"
          inherittype="local"
          line="9"
          name="Thorlib"
          ref="std.system.Thorlib"
          start="339">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="834"
          fullname="PBblas"
          inherittype="local"
          line="16"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="834">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="877"
          fullname="PBblas.internal"
          inherittype="local"
          line="18"
          name="int"
          ref="PBblas.internal"
          remotescope="1"
          start="877">
   <loc>loc</loc>
  </Import>
  <Definition body="309"
              end="329"
              fullname="pbblas.internal.dimension_t"
              inherittype="local"
              line="7"
              name="dimension_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Types.ecl"
              start="295">
   <Type>attribute</Type>
  </Definition>
  <Definition body="413"
              end="432"
              fullname="pbblas.internal.layout_cell"
              inherittype="local"
              line="10"
              name="Layout_Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
              start="399">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="447"
              end="467"
              fullname="pbblas.internal.layout_dims"
              inherittype="local"
              line="11"
              name="Layout_Dims"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
              start="433">
   <Type>record</Type>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="block_rows"/>
   <Field name="block_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Record format for matrix and matrix partition dimensions.  Each record describes
    * A single matrix or matrix partition.  Partitions use all of the fields, while
    * a non-partitioned matrix only uses the first two (i.e. m_rows and m_cols).
    * @field m_label A user provided label indicating to which matrix the dimensions
    *                apply, when used to describe a set of related matrixes (e.g.,
    *                &apos;A&apos;, &apos;B&apos;, and &apos;C&apos;) for the same work item used in an operation.
    * @field m_rows The number of rows in the full matrix
    * @field m_cols The number of colums in the full matrix
    * @field block_rows The number of rows in each partition of the matrix
    * @field block_cols The number of columns in each partition
    * @field row_blocks The number of row partitions in use for the matrix
    * @field col_blocks The number of column partitions in use for the matrix&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="512"
              end="530"
              fullname="pbblas.internal.m_label_t"
              inherittype="local"
              line="13"
              name="m_label_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/MatDims.ecl"
              start="498">
   <Type>attribute</Type>
  </Definition>
  <Definition body="956"
              end="975"
              fullname="pbblas.internal.partition_t"
              inherittype="local"
              line="21"
              name="partition_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Converted.ecl"
              start="942">
   <Type>attribute</Type>
   <Documentation>
    <content>&#32;&#10;&#32;&#32;* Module:  Converted
  *
  * Utility module to convert matrixes between Cell-based form and Partition-based form
  * Cell based matrixes provide a (potentially) sparse form organized as 
  * DATASET(Layout_Cell).
  * Partition based matrixes are organized as a set of partitions (DATASET(Layout_Part)),
  * with each partition holding a part of the matrix (in dense form).
  * Both forms allow the matrix to be distributed among nodes so that it can be larger
  * than the memory on any one node.
  * This module provides a FromCells method as well as a FromParts method.&#10;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="1024"
              end="1039"
              fullname="pbblas.internal.node_t"
              inherittype="local"
              line="23"
              name="node_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Converted.ecl"
              start="1010">
   <Type>attribute</Type>
  </Definition>
  <Definition body="1086"
              end="1106"
              fullname="pbblas.internal.layout_part"
              inherittype="local"
              line="25"
              name="Layout_Part"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Converted.ecl"
              start="1072">
   <Type>record</Type>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="partition_id"/>
   <Field name="node_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Field name="block_row"/>
   <Field name="block_col"/>
   <Field name="part_rows"/>
   <Field name="part_cols"/>
   <Field name="first_row"/>
   <Field name="first_col"/>
   <Field name="mat_part"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Alternate form for storage of large matrixes as a set of partitions
    * Each partition holds the dense form of a piece of the matrix (see matrix_t)
    * as well as information about its relationship to the larger matrix.
    * The full matrix is then carried as DATASET(Layout_Part).
    * Utility module Converted provides functions for converting a matrix in cell
    * form (see Layout_cell) to partitions and vice versa.
    * This form is primarily used internally to PBblas functions, but can also
    * be used as an intermediate form to avoid repeated conversions from cell
    * form.
    * A work-item id field allows multiple matrixes to be carried in the
    * same dataset.  This supports the &quot;myriad&quot; style interface whereby the
    * same operation can be performed on multiple sets of matrixes at once.
    * The m_label field allows for the separation of multiple matrixes with the
    * same wi_id for operations requiring multiple matrixes.  This allows
    * multiple work-items with multiple matrixes each to be carried in the same
    * dataset.

    * @field wi_id          Work Item Number -- An identifier from 1 to 64K-1 that
    *                         separates and identifies individual matrixes
    * @field m_label        A user provided label indicating to which matrix the dimensions
    *                       apply, when used to describe a set of related matrixes (e.g.,
    *                       &apos;A&apos;, &apos;B&apos;, and &apos;C&apos;) for the same work item used in an operation.    * @field partition_id	A unique ID for this partition within the matrix
    * @field partition_id   The 1-based id of this partition, unique within a work-item
    * @field node_id		The node on which this partition is stored
    * @field m_rows         The number of rows in the full matrix
    * @field m_cols         The number of columns in the full matrix
    * @field row_blocks     The number of row partitions in use
    * @field col_blocks     The number of column partitions in use
    * @field block_row		The row of this partition within the block partition matrix
    * @field block_col		The column of this partition &quot;
    * @field part_rows		The number of rows stored within this partition
    * @field part_cols		The number of columns stored within this partition
    * @field first_row		The first row of the original matrix stored within this
    *						partition
    * @field first_col		The first column of the original matrix stored within this
    *						partition
    * @field mat_part		The dense representation of the cells values within this
    *						partition (see matrix_t)
    * @see		matrix_t
    * @see		Layout_Cell
    * @see		Std/PBblas/Converted&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="1196"
              end="7181"
              exported="1"
              fullname="PBblas.internal.Converted"
              inherittype="local"
              line="29"
              name="Converted"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Converted.ecl"
              start="1177">
   <Type>module</Type>
   <Definition body="1222"
               end="1545"
               fullname="pbblas.internal.converted.work1"
               inherittype="local"
               line="31"
               name="Work1"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Converted.ecl"
               start="1207">
    <Type>record</Type>
    <Field name="wi_id"/>
    <Field name="x"/>
    <Field name="y"/>
    <Field name="v"/>
    <Field name="partition_id"/>
    <Field name="node_id"/>
    <Field name="m_rows"/>
    <Field name="m_cols"/>
    <Field name="row_blocks"/>
    <Field name="col_blocks"/>
    <Field name="block_rows"/>
    <Field name="block_cols"/>
    <Field name="block_row"/>
    <Field name="block_col"/>
    <Field name="m_label"/>
   </Definition>
   <Definition body="2744"
               end="5680"
               exported="1"
               fullname="pbblas.internal.converted.fromcells"
               inherittype="local"
               line="65"
               name="FromCells"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Converted.ecl"
               start="2617">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Convert a matrix in cell-based form (i.e. DATASET(Layout_Cell)) to a partition-based
    * form (i.e. DATASET(Layout_Part).  Partition sizes will be automatically determined.
    * See PBblas/Internal/MatDims.
    * Note that the cell-based form may be sparse (i.e. contains only non-zero cells).
    * The resulting partition-based matrix will contain zero in any cell not specified.
    * Partitions will no non-zero cells will be omitted.
    *
    * This module supports the &quot;myriad&quot; style interface in that both dimension
    * and matrix parameters may describe many separate matrices with different
    * work item ids.
    *
    * @param dims    A DATASET(Layout_Dims) of partitioned dimensions
    * @param cells   A DATASET(Layout_Cell) containing the cells of the matrix
    * @return        DATASET(Layout_Part) -- A dataset of partitions describing
    *                the same matrix(es) as the input cells.
    * @see PBblas/Types.Layout_Cell
    * @see PBblas/internal/Types.Layout_Part
    * @see PBblas/internal/Types.Layout_Dims&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="dims"/>
     <Param name="cells"/>
     <Param name="transpose"/>
    </Params>
   </Definition>
   <Definition body="6553"
               end="7176"
               exported="1"
               fullname="pbblas.internal.converted.fromparts"
               inherittype="local"
               line="145"
               name="FromParts"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/internal/Converted.ecl"
               start="6477">
    <Type>function</Type>
    <Documentation>
     <content>&#10;&#32;&#32;&#32;&#32;* Convert a matrix in Partition-based form (i.e. DATASET(Layout_Part))
    * to Cell-based form (i.e. DATASET(Layout_Cell)).
    * Note that the returned cell-based matrix is sparse, in that it will only 
    * contain rows for cells that were non-zero in the original matrix.
    *
    * This interface supports &quot;myriad&quot; style, in that the partitions may 
    * represent many independent matrixes separated by different work item ids.
    * 
    * @param parts_recs     A DATASET(Layout_Parts) specifying the matrix(es) to
    *                       be converted
    * @param transpose      BOOLEAN parameter causes each matrix to be transposed
    *                       during conversion
    * @see Std/PBblas/Types.Layout_Cell
    * @see Std/PBblas/Types.Layout_Part&#10;&#32;&#32;&#32;&#32;</content>
    </Documentation>
    <Params>
     <Param name="part_recs"/>
     <Param name="transpose"/>
    </Params>
   </Definition>
   <Parents/>
  </Definition>
 </Source>
 <Source name="PBblas.gemm" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl">
  <Import body="0"
          end="27"
          fullname="PBblas.Types"
          inherittype="local"
          line="2"
          name="Types"
          ref="PBblas.Types"
          start="27">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="251"
          fullname="PBblas"
          inherittype="local"
          line="5"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="251">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="292"
          fullname="PBblas.internal"
          inherittype="local"
          line="7"
          name="int"
          ref="PBblas.internal"
          remotescope="1"
          start="292">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="322"
          fullname="PBblas.internal.Types"
          inherittype="local"
          line="8"
          name="iTypes"
          ref="PBblas.internal.Types"
          start="322">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="351"
          fullname="std.BLAS"
          inherittype="local"
          line="9"
          name="BLAS"
          ref="std.BLAS"
          start="351">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="350"
          fullname="PBblas.internal.MatDims"
          inherittype="local"
          line="9"
          name="MatDims"
          ref="PBblas.internal.MatDims"
          start="350">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Module to calculate matrix dimensions and matrix partition dimensions from
  * matrix cells.
  *&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="388"
          fullname="std.system.Thorlib"
          inherittype="local"
          line="11"
          name="Thorlib"
          ref="std.system.Thorlib"
          start="388">
   <loc>loc</loc>
  </Import>
  <Definition body="167"
              end="186"
              fullname="pbblas.layout_cell"
              inherittype="local"
              line="6"
              name="Layout_Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
              start="152">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="379"
              end="398"
              fullname="pbblas.dimension_t"
              inherittype="local"
              line="11"
              name="dimension_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="364">
   <Type>attribute</Type>
  </Definition>
  <Definition body="414"
              end="429"
              fullname="pbblas.value_t"
              inherittype="local"
              line="12"
              name="value_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="399">
   <Type>attribute</Type>
  </Definition>
  <Definition body="456"
              end="476"
              fullname="pbblas.layout_part"
              inherittype="local"
              line="13"
              name="Layout_Part"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="442">
   <Type>record</Type>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="partition_id"/>
   <Field name="node_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Field name="block_row"/>
   <Field name="block_col"/>
   <Field name="part_rows"/>
   <Field name="part_cols"/>
   <Field name="first_row"/>
   <Field name="first_col"/>
   <Field name="mat_part"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Alternate form for storage of large matrixes as a set of partitions
    * Each partition holds the dense form of a piece of the matrix (see matrix_t)
    * as well as information about its relationship to the larger matrix.
    * The full matrix is then carried as DATASET(Layout_Part).
    * Utility module Converted provides functions for converting a matrix in cell
    * form (see Layout_cell) to partitions and vice versa.
    * This form is primarily used internally to PBblas functions, but can also
    * be used as an intermediate form to avoid repeated conversions from cell
    * form.
    * A work-item id field allows multiple matrixes to be carried in the
    * same dataset.  This supports the &quot;myriad&quot; style interface whereby the
    * same operation can be performed on multiple sets of matrixes at once.
    * The m_label field allows for the separation of multiple matrixes with the
    * same wi_id for operations requiring multiple matrixes.  This allows
    * multiple work-items with multiple matrixes each to be carried in the same
    * dataset.

    * @field wi_id          Work Item Number -- An identifier from 1 to 64K-1 that
    *                         separates and identifies individual matrixes
    * @field m_label        A user provided label indicating to which matrix the dimensions
    *                       apply, when used to describe a set of related matrixes (e.g.,
    *                       &apos;A&apos;, &apos;B&apos;, and &apos;C&apos;) for the same work item used in an operation.    * @field partition_id	A unique ID for this partition within the matrix
    * @field partition_id   The 1-based id of this partition, unique within a work-item
    * @field node_id		The node on which this partition is stored
    * @field m_rows         The number of rows in the full matrix
    * @field m_cols         The number of columns in the full matrix
    * @field row_blocks     The number of row partitions in use
    * @field col_blocks     The number of column partitions in use
    * @field block_row		The row of this partition within the block partition matrix
    * @field block_col		The column of this partition &quot;
    * @field part_rows		The number of rows stored within this partition
    * @field part_cols		The number of columns stored within this partition
    * @field first_row		The first row of the original matrix stored within this
    *						partition
    * @field first_col		The first column of the original matrix stored within this
    *						partition
    * @field mat_part		The dense representation of the cells values within this
    *						partition (see matrix_t)
    * @see		matrix_t
    * @see		Layout_Cell
    * @see		Std/PBblas/Converted&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="480"
              end="500"
              fullname="pbblas.layout_dims"
              inherittype="local"
              line="14"
              name="Layout_Dims"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="465">
   <Type>record</Type>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="block_rows"/>
   <Field name="block_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Record format for matrix and matrix partition dimensions.  Each record describes
    * A single matrix or matrix partition.  Partitions use all of the fields, while
    * a non-partitioned matrix only uses the first two (i.e. m_rows and m_cols).
    * @field m_label A user provided label indicating to which matrix the dimensions
    *                apply, when used to describe a set of related matrixes (e.g.,
    *                &apos;A&apos;, &apos;B&apos;, and &apos;C&apos;) for the same work item used in an operation.
    * @field m_rows The number of rows in the full matrix
    * @field m_cols The number of colums in the full matrix
    * @field block_rows The number of rows in each partition of the matrix
    * @field block_cols The number of columns in each partition
    * @field row_blocks The number of row partitions in use for the matrix
    * @field col_blocks The number of column partitions in use for the matrix&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="493"
              end="515"
              fullname="pbblas.layout_target"
              inherittype="local"
              line="14"
              name="Layout_Target"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="477">
   <Type>record</Type>
   <Field name="t_part_id"/>
   <Field name="t_node_id"/>
   <Field name="t_block_row"/>
   <Field name="t_block_col"/>
   <Field name="t_term"/>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="partition_id"/>
   <Field name="node_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Field name="block_row"/>
   <Field name="block_col"/>
   <Field name="part_rows"/>
   <Field name="part_cols"/>
   <Field name="first_row"/>
   <Field name="first_col"/>
   <Field name="mat_part"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Represents the relationship of a partition to the partition holding the
    * results of a matrix operation.  This is used internally to PBblas functions
    * to tie an input partition to its output.  It is not relevant to users of
    * PBblas.
    *
    * @field t_part_id		The output partition to which this partition is related
    * @field t_node_id		The node on which the output partition is located
    * @field t_block_row	The row of the output partition within its partition matrix
    * @field t_block_col	The column of the output partition within its partition matrix
    * @field t_term			A row/column number used to correlate related input partitions used
    *						in calculating the results of the output partition&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="553"
              end="572"
              fullname="pbblas.work_item_t"
              inherittype="local"
              line="16"
              name="work_item_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="538">
   <Type>attribute</Type>
  </Definition>
  <Definition body="620"
              end="635"
              inherittype="local"
              line="18"
              name="OpType"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="611">
   <Type>attribute</Type>
  </Definition>
  <Definition body="680"
              end="706"
              fullname="pbblas.emptyc"
              inherittype="local"
              line="21"
              name="emptyC"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="671">
   <Type>attribute</Type>
  </Definition>
  <Definition body="736"
              end="740"
              fullname="pbblas.empty_array"
              inherittype="local"
              line="22"
              name="empty_array"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="707">
   <Type>attribute</Type>
  </Definition>
  <Definition body="754"
              end="787"
              fullname="pbblas.wi_id_list"
              inherittype="local"
              line="23"
              name="wi_id_list"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="741">
   <Type>record</Type>
   <Field name="wi_id"/>
  </Definition>
  <Definition body="3277"
              end="15205"
              exported="1"
              fullname="pbblas.gemm"
              inherittype="local"
              line="65"
              name="gemm"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="3017">
   <Type>function</Type>
   <Documentation>
    <content>&#10;&#32;&#32;* Extended Parallel Block Matrix Multiplication Module
  *
  * Implements: Result = alpha * op(A)op(B) + beta * C.  op is No Transpose or Transpose.
  *
  * Multiplies two matrixes A and B, with an optional pre-multiply transpose for each
  * Optionally scales the product by the scalar &quot;alpha&quot;.
  * Then adds an optional C matrix to the product after scaling C by the scalar &quot;beta&quot;.
  *
  * A, B, and C are specified as DATASET(Layout_Cell), as is the Resulting matrix.
  * Layout_Cell describes a sparse matrix stored as a list of x, y, and value.
  *
  * This interface also provides a &quot;Myriad&quot; capability allowing multiple similar
  * operations to be performed on independent sets of matrixes in parallel.
  * This is done by use of the work-item id (wi_id) in each cell of the matrixes.
  * Cells with the same wi_id are considered part of the same matrix.
  * In the myriad form, each input matrix A, B, and (optionally) C can contain many
  * independent matrixes. The wi_ids are matched up such that each operation involves
  * the A, B, and C with the same wi_id.  A and B must therefore contain the same set
  * of wi_ids, while C is optional for any wi_id.  The same parameters: alpha, beta,
  * transposeA, and transposeB are used for all work-items.
  * The result will contain cells from all provided work-items.
  *
  * Result has same shape as C if provided.  Note that matrixes are not explicitly
  * dimensioned.  The shape is determined by the highest value of x and y for each
  * work-item.
  *
  * @param transposeA    Boolean indicating whether matrix A should be transposed
  *               before multiplying
  * @param transposeB    Same as above but for matrix B
  * @param alpha      Scalar multiplier for alpha * A * B
  * @param A_in        &apos;A&apos; matrix (multiplier) in Layout_Cell format
  * @param B_in        Same as above for the &apos;B&apos; matrix (multiplicand)
  * @param C_in        Same as above for the &apos;C&apos; matrix (addend). May be omitted.
  * @param beta        A scalar multiplier for beta * C, scales the C matrix before
  *               addition. May be omitted.
  * @return                 Result matrix in Layout_Cell format.
  * @see                    PBblas/Types.Layout_Cell&#10;&#32;&#32;</content>
   </Documentation>
   <Params>
    <Param name="transposeA"/>
    <Param name="transposeB"/>
    <Param name="alpha"/>
    <Param name="A_in"/>
    <Param name="B_in"/>
    <Param name="C_in"/>
    <Param name="beta"/>
   </Params>
  </Definition>
 </Source>
 <Source name="PBblas.getrf" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl">
  <Import body="0"
          end="27"
          fullname="PBblas.Types"
          inherittype="local"
          line="2"
          name="Types"
          ref="PBblas.Types"
          start="27">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="251"
          fullname="PBblas"
          inherittype="local"
          line="5"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="251">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="292"
          fullname="PBblas.internal"
          inherittype="local"
          line="7"
          name="int"
          ref="PBblas.internal"
          remotescope="1"
          start="292">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="322"
          fullname="PBblas.internal.Types"
          inherittype="local"
          line="8"
          name="iTypes"
          ref="PBblas.internal.Types"
          start="322">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="351"
          fullname="std.BLAS"
          inherittype="local"
          line="9"
          name="BLAS"
          ref="std.BLAS"
          start="351">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="350"
          fullname="PBblas.internal.MatDims"
          inherittype="local"
          line="9"
          name="MatDims"
          ref="PBblas.internal.MatDims"
          start="350">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Module to calculate matrix dimensions and matrix partition dimensions from
  * matrix cells.
  *&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="388"
          fullname="std.system.Thorlib"
          inherittype="local"
          line="11"
          name="Thorlib"
          ref="std.system.Thorlib"
          start="388">
   <loc>loc</loc>
  </Import>
  <Definition body="167"
              end="186"
              fullname="pbblas.layout_cell"
              inherittype="local"
              line="6"
              name="Layout_Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
              start="152">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="379"
              end="398"
              fullname="pbblas.dimension_t"
              inherittype="local"
              line="11"
              name="dimension_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="364">
   <Type>attribute</Type>
  </Definition>
  <Definition body="456"
              end="476"
              fullname="pbblas.layout_part"
              inherittype="local"
              line="13"
              name="Layout_Part"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="442">
   <Type>record</Type>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="partition_id"/>
   <Field name="node_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Field name="block_row"/>
   <Field name="block_col"/>
   <Field name="part_rows"/>
   <Field name="part_cols"/>
   <Field name="first_row"/>
   <Field name="first_col"/>
   <Field name="mat_part"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Alternate form for storage of large matrixes as a set of partitions
    * Each partition holds the dense form of a piece of the matrix (see matrix_t)
    * as well as information about its relationship to the larger matrix.
    * The full matrix is then carried as DATASET(Layout_Part).
    * Utility module Converted provides functions for converting a matrix in cell
    * form (see Layout_cell) to partitions and vice versa.
    * This form is primarily used internally to PBblas functions, but can also
    * be used as an intermediate form to avoid repeated conversions from cell
    * form.
    * A work-item id field allows multiple matrixes to be carried in the
    * same dataset.  This supports the &quot;myriad&quot; style interface whereby the
    * same operation can be performed on multiple sets of matrixes at once.
    * The m_label field allows for the separation of multiple matrixes with the
    * same wi_id for operations requiring multiple matrixes.  This allows
    * multiple work-items with multiple matrixes each to be carried in the same
    * dataset.

    * @field wi_id          Work Item Number -- An identifier from 1 to 64K-1 that
    *                         separates and identifies individual matrixes
    * @field m_label        A user provided label indicating to which matrix the dimensions
    *                       apply, when used to describe a set of related matrixes (e.g.,
    *                       &apos;A&apos;, &apos;B&apos;, and &apos;C&apos;) for the same work item used in an operation.    * @field partition_id	A unique ID for this partition within the matrix
    * @field partition_id   The 1-based id of this partition, unique within a work-item
    * @field node_id		The node on which this partition is stored
    * @field m_rows         The number of rows in the full matrix
    * @field m_cols         The number of columns in the full matrix
    * @field row_blocks     The number of row partitions in use
    * @field col_blocks     The number of column partitions in use
    * @field block_row		The row of this partition within the block partition matrix
    * @field block_col		The column of this partition &quot;
    * @field part_rows		The number of rows stored within this partition
    * @field part_cols		The number of columns stored within this partition
    * @field first_row		The first row of the original matrix stored within this
    *						partition
    * @field first_col		The first column of the original matrix stored within this
    *						partition
    * @field mat_part		The dense representation of the cells values within this
    *						partition (see matrix_t)
    * @see		matrix_t
    * @see		Layout_Cell
    * @see		Std/PBblas/Converted&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="493"
              end="515"
              fullname="pbblas.layout_target"
              inherittype="local"
              line="14"
              name="Layout_Target"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="477">
   <Type>record</Type>
   <Field name="t_part_id"/>
   <Field name="t_node_id"/>
   <Field name="t_block_row"/>
   <Field name="t_block_col"/>
   <Field name="t_term"/>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="partition_id"/>
   <Field name="node_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Field name="block_row"/>
   <Field name="block_col"/>
   <Field name="part_rows"/>
   <Field name="part_cols"/>
   <Field name="first_row"/>
   <Field name="first_col"/>
   <Field name="mat_part"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Represents the relationship of a partition to the partition holding the
    * results of a matrix operation.  This is used internally to PBblas functions
    * to tie an input partition to its output.  It is not relevant to users of
    * PBblas.
    *
    * @field t_part_id		The output partition to which this partition is related
    * @field t_node_id		The node on which the output partition is located
    * @field t_block_row	The row of the output partition within its partition matrix
    * @field t_block_col	The column of the output partition within its partition matrix
    * @field t_term			A row/column number used to correlate related input partitions used
    *						in calculating the results of the output partition&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="552"
              end="568"
              inherittype="local"
              line="16"
              name="Triangle"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl"
              start="541">
   <Type>attribute</Type>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Enumeration for Triangle type
    * 
    * WARNING: type used in C++ attribute&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="576"
              end="598"
              fullname="pbblas.upper"
              inherittype="local"
              line="17"
              name="Upper"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl"
              start="569">
   <Type>attribute</Type>
  </Definition>
  <Definition body="606"
              end="628"
              fullname="pbblas.lower"
              inherittype="local"
              line="18"
              name="Lower"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl"
              start="599">
   <Type>attribute</Type>
  </Definition>
  <Definition body="620"
              end="635"
              inherittype="local"
              line="18"
              name="OpType"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="611">
   <Type>attribute</Type>
  </Definition>
  <Definition body="640"
              end="656"
              inherittype="local"
              line="19"
              name="Diagonal"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl"
              start="629">
   <Type>attribute</Type>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Enumeration for Diagonal type
    * 
    * WARNING: type used in C++ attribute&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="664"
              end="676"
              inherittype="local"
              line="20"
              name="Side"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl"
              start="657">
   <Type>attribute</Type>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Enumeration for Side type
    * 
    * WARNING: type used in C++ attribute&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="705"
              end="709"
              fullname="pbblas.empty_mat"
              inherittype="local"
              line="21"
              name="empty_mat"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl"
              start="677">
   <Type>attribute</Type>
  </Definition>
  <Definition body="751"
              end="804"
              inherittype="local"
              line="23"
              name="Term"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl"
              start="744">
   <Type>attribute</Type>
  </Definition>
  <Definition body="3077"
              end="9946"
              exported="1"
              fullname="pbblas.getrf"
              inherittype="local"
              line="67"
              name="getrf"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl"
              start="3017">
   <Type>function</Type>
   <Documentation>
    <content>&#10;&#32;&#32;* LU Factorization
  *
  * Splits a matrix into Lower and Upper triangular factors
  *
  * Produces composite LU matrix for the diagonal
  * blocks.  Iterates through the matrix a row of blocks and column of blocks at
  * a time.  Partition A into M block rows and N block columns.  The A11 cell is a
  * single block.  A12 is a single row of blocks with N-1 columns.  A21 is a single
  * column of blocks with M-1 rows.  A22 is a sub-matrix of M-1 x N-1 blocks.
  *   | A11   A12 |      |  L11   0   |    | U11        U12    |
  *   | A21   A22 |  ==  |  L21   L22 | *  |  0         U22    |
  *
  *                      | L11*U11             L11*U12         |
  *                  ==  | L21*U11         L21*U12 + L22*U22   |
  *
  * Based upon PB-BLAS: A set of parallel block basic linear algebra subprograms
  * by Choi and Dongarra
  *
  * This module supports the &quot;Myriad&quot; style interface, allowing many independent problems
  * to be worked on at once.  The A matrix can contain multiple matrixes to be factored,
  * indicated by different values for work-item id (wi_id).
  *
  * Note:  The returned matrix includes both the upper and lower factors.
  *        This matrix can be used directly by trsm which will only use
  *        the part indicated by trsm&apos;s &apos;triangle&apos; parameter (i.e. upper
  *        or lower).  To extract the upper or lower triangle explicitly
  *        for other purposes, use the ExtractTri function.  When passing
  *        the Lower matrix to the triangle solver (trsm), set the
  *        &quot;Diagonal&quot; parameter to &quot;UnitTri&quot;.  This is necessary because
  *        both triangular matrixes returned from this function are packed
  *        into a square matrix with only one diagonal.  By convention,
  *        The Lower triangle is assumed to be a Unit Triangle (diagonal
  *        all ones), so the diagonal contained in the returned matrix
  *        is for the Upper factor and must be ignored (i.e. assumed to
  *        be all ones) when referencing the Lower triangle.
  *
  * @param A    The input matrix in Types.Layout_Cell format
  * @return     Resulting factored matrix in Layout_Cell format
  * @see        Types.Layout_Cell
  * @see    ExtractTri&#10;&#32;&#32;</content>
   </Documentation>
   <Params>
    <Param name="A"/>
   </Params>
  </Definition>
 </Source>
 <Source name="PBblas.trsm" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/trsm.ecl">
  <Import body="0"
          end="27"
          fullname="PBblas.Types"
          inherittype="local"
          line="2"
          name="Types"
          ref="PBblas.Types"
          start="27">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="251"
          fullname="PBblas"
          inherittype="local"
          line="5"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="251">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="309"
          fullname="PBblas.internal"
          inherittype="local"
          line="8"
          name="int"
          ref="PBblas.internal"
          remotescope="1"
          start="309">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="322"
          fullname="PBblas.internal.Types"
          inherittype="local"
          line="8"
          name="iTypes"
          ref="PBblas.internal.Types"
          start="322">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="351"
          fullname="std.BLAS"
          inherittype="local"
          line="9"
          name="BLAS"
          ref="std.BLAS"
          start="351">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="350"
          fullname="PBblas.internal.MatDims"
          inherittype="local"
          line="9"
          name="MatDims"
          ref="PBblas.internal.MatDims"
          start="350">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Module to calculate matrix dimensions and matrix partition dimensions from
  * matrix cells.
  *&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="388"
          fullname="PBblas.internal.Converted"
          inherittype="local"
          line="11"
          name="Converted"
          ref="PBblas.internal.Converted"
          start="388">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="388"
          fullname="std.system.Thorlib"
          inherittype="local"
          line="11"
          name="Thorlib"
          ref="std.system.Thorlib"
          start="388">
   <loc>loc</loc>
  </Import>
  <Definition body="167"
              end="186"
              fullname="pbblas.layout_cell"
              inherittype="local"
              line="6"
              name="Layout_Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
              start="152">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="379"
              end="398"
              fullname="pbblas.dimension_t"
              inherittype="local"
              line="11"
              name="dimension_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="364">
   <Type>attribute</Type>
  </Definition>
  <Definition body="414"
              end="429"
              fullname="pbblas.value_t"
              inherittype="local"
              line="12"
              name="value_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="399">
   <Type>attribute</Type>
  </Definition>
  <Definition body="456"
              end="476"
              fullname="pbblas.layout_part"
              inherittype="local"
              line="13"
              name="Layout_Part"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="442">
   <Type>record</Type>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="partition_id"/>
   <Field name="node_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Field name="block_row"/>
   <Field name="block_col"/>
   <Field name="part_rows"/>
   <Field name="part_cols"/>
   <Field name="first_row"/>
   <Field name="first_col"/>
   <Field name="mat_part"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Alternate form for storage of large matrixes as a set of partitions
    * Each partition holds the dense form of a piece of the matrix (see matrix_t)
    * as well as information about its relationship to the larger matrix.
    * The full matrix is then carried as DATASET(Layout_Part).
    * Utility module Converted provides functions for converting a matrix in cell
    * form (see Layout_cell) to partitions and vice versa.
    * This form is primarily used internally to PBblas functions, but can also
    * be used as an intermediate form to avoid repeated conversions from cell
    * form.
    * A work-item id field allows multiple matrixes to be carried in the
    * same dataset.  This supports the &quot;myriad&quot; style interface whereby the
    * same operation can be performed on multiple sets of matrixes at once.
    * The m_label field allows for the separation of multiple matrixes with the
    * same wi_id for operations requiring multiple matrixes.  This allows
    * multiple work-items with multiple matrixes each to be carried in the same
    * dataset.

    * @field wi_id          Work Item Number -- An identifier from 1 to 64K-1 that
    *                         separates and identifies individual matrixes
    * @field m_label        A user provided label indicating to which matrix the dimensions
    *                       apply, when used to describe a set of related matrixes (e.g.,
    *                       &apos;A&apos;, &apos;B&apos;, and &apos;C&apos;) for the same work item used in an operation.    * @field partition_id	A unique ID for this partition within the matrix
    * @field partition_id   The 1-based id of this partition, unique within a work-item
    * @field node_id		The node on which this partition is stored
    * @field m_rows         The number of rows in the full matrix
    * @field m_cols         The number of columns in the full matrix
    * @field row_blocks     The number of row partitions in use
    * @field col_blocks     The number of column partitions in use
    * @field block_row		The row of this partition within the block partition matrix
    * @field block_col		The column of this partition &quot;
    * @field part_rows		The number of rows stored within this partition
    * @field part_cols		The number of columns stored within this partition
    * @field first_row		The first row of the original matrix stored within this
    *						partition
    * @field first_col		The first column of the original matrix stored within this
    *						partition
    * @field mat_part		The dense representation of the cells values within this
    *						partition (see matrix_t)
    * @see		matrix_t
    * @see		Layout_Cell
    * @see		Std/PBblas/Converted&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="480"
              end="500"
              fullname="pbblas.layout_dims"
              inherittype="local"
              line="14"
              name="Layout_Dims"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="465">
   <Type>record</Type>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="block_rows"/>
   <Field name="block_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Record format for matrix and matrix partition dimensions.  Each record describes
    * A single matrix or matrix partition.  Partitions use all of the fields, while
    * a non-partitioned matrix only uses the first two (i.e. m_rows and m_cols).
    * @field m_label A user provided label indicating to which matrix the dimensions
    *                apply, when used to describe a set of related matrixes (e.g.,
    *                &apos;A&apos;, &apos;B&apos;, and &apos;C&apos;) for the same work item used in an operation.
    * @field m_rows The number of rows in the full matrix
    * @field m_cols The number of colums in the full matrix
    * @field block_rows The number of rows in each partition of the matrix
    * @field block_cols The number of columns in each partition
    * @field row_blocks The number of row partitions in use for the matrix
    * @field col_blocks The number of column partitions in use for the matrix&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="493"
              end="515"
              fullname="pbblas.layout_target"
              inherittype="local"
              line="14"
              name="Layout_Target"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="477">
   <Type>record</Type>
   <Field name="t_part_id"/>
   <Field name="t_node_id"/>
   <Field name="t_block_row"/>
   <Field name="t_block_col"/>
   <Field name="t_term"/>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="partition_id"/>
   <Field name="node_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Field name="block_row"/>
   <Field name="block_col"/>
   <Field name="part_rows"/>
   <Field name="part_cols"/>
   <Field name="first_row"/>
   <Field name="first_col"/>
   <Field name="mat_part"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Represents the relationship of a partition to the partition holding the
    * results of a matrix operation.  This is used internally to PBblas functions
    * to tie an input partition to its output.  It is not relevant to users of
    * PBblas.
    *
    * @field t_part_id		The output partition to which this partition is related
    * @field t_node_id		The node on which the output partition is located
    * @field t_block_row	The row of the output partition within its partition matrix
    * @field t_block_col	The column of the output partition within its partition matrix
    * @field t_term			A row/column number used to correlate related input partitions used
    *						in calculating the results of the output partition&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="470"
              end="487"
              fullname="pbblas.matrix_t"
              inherittype="local"
              line="14"
              name="matrix_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/trsm.ecl"
              start="458">
   <Type>attribute</Type>
  </Definition>
  <Definition body="552"
              end="568"
              inherittype="local"
              line="16"
              name="Triangle"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl"
              start="541">
   <Type>attribute</Type>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Enumeration for Triangle type
    * 
    * WARNING: type used in C++ attribute&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="576"
              end="598"
              fullname="pbblas.upper"
              inherittype="local"
              line="17"
              name="Upper"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl"
              start="569">
   <Type>attribute</Type>
  </Definition>
  <Definition body="606"
              end="628"
              fullname="pbblas.lower"
              inherittype="local"
              line="18"
              name="Lower"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl"
              start="599">
   <Type>attribute</Type>
  </Definition>
  <Definition body="620"
              end="635"
              inherittype="local"
              line="18"
              name="OpType"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="611">
   <Type>attribute</Type>
  </Definition>
  <Definition body="640"
              end="656"
              inherittype="local"
              line="19"
              name="Diagonal"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl"
              start="629">
   <Type>attribute</Type>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Enumeration for Diagonal type
    * 
    * WARNING: type used in C++ attribute&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="664"
              end="676"
              inherittype="local"
              line="20"
              name="Side"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/getrf.ecl"
              start="657">
   <Type>attribute</Type>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Enumeration for Side type
    * 
    * WARNING: type used in C++ attribute&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="856"
              end="859"
              fullname="pbblas.baseterm"
              inherittype="local"
              line="26"
              name="BaseTerm"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/trsm.ecl"
              start="845">
   <Type>attribute</Type>
  </Definition>
  <Definition body="872"
              end="875"
              fullname="pbblas.rightterm"
              inherittype="local"
              line="27"
              name="RightTerm"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/trsm.ecl"
              start="860">
   <Type>attribute</Type>
  </Definition>
  <Definition body="887"
              end="890"
              fullname="pbblas.leftterm"
              inherittype="local"
              line="28"
              name="LeftTerm"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/trsm.ecl"
              start="876">
   <Type>attribute</Type>
  </Definition>
  <Definition body="3422"
              end="18081"
              exported="1"
              fullname="pbblas.trsm"
              inherittype="local"
              line="68"
              name="trsm"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/trsm.ecl"
              start="3213">
   <Type>function</Type>
   <Documentation>
    <content>&#10;&#32;&#32;* Partitioned block parallel triangular matrix solver.
  *
  * Solves for X using: AX = B or XA = B
  * A is is a square triangular matrix, X and B have the same dimensions.
  * A may be an upper triangular matrix (UX = B or XU = B), or a lower
  * triangular matrix (LX = B or XL = B).
  * Allows optional transposing and scaling of A.
  * Partially based upon an approach discussed by MJ DAYDE, IS DUFF, AP CERFACS.
  * A Parallel Block implementation of Level-3 BLAS for MIMD Vector Processors
  * ACM Tran. Mathematical Software, Vol 20, No 2, June 1994 pp 178-193
  * and other papers about PB-BLAS by Choi and Dongarra
  *
  * This module supports the &quot;Myriad&quot; style interface, allowing many independent problems
  * to be worked on at once.  Corresponding A and B matrixes are related by a common
  * work-item identifier (wi_id) within each cell of the matrix.  The returned X matrix
  * will contain cells for the same set of work-items as specified for the A and B matrices.
  *
  * @param s     Types.Side enumeration indicating whether we are solving AX = B or XA = B
  * @param tri   Types.Triangle enumeration indicating whether we are solving an Upper or
  *              Lower triangle.
  * @param transposeA Boolean indicating whether or not to transpose the A matrix before
  *                   solving
  * @param diag  Types.Diagonal enumeration indicating whether A is a unit matrix or not.
  *              This is primarily used after factoring matrixes using getrf (LU factorization).
  *              That module produces a factored matrix stored within the same space as the
  *              original matrix.  Since the diagonal is used by both factors, by convention,
  *              the Lower triangle has a unit matrix (diagonal all 1&apos;s) while the Upper
  *              triangle uses the diagonal cells.  Setting this to UnitTri, causes the
  *              contents of the diagonal to be ignored, and assumed to be 1.  NotUnitTri
  *              should be used for most other cases.
  * @param alpha Multiplier to scale A
  * @param A_in  The A matrix in Layout_Cell format
  * @param B_in  The B matrix in Layout_Cell format
  * @return      X solution matrix in Layout_Cell format
  * @see         Types.Layout_Cell
  * @see         Types.Triangle
  * @see         Types.Side&#10;&#32;&#32;</content>
   </Documentation>
   <Params>
    <Param name="s"/>
    <Param name="tri"/>
    <Param name="transposeA"/>
    <Param name="diag"/>
    <Param name="alpha"/>
    <Param name="A_in"/>
    <Param name="B_in"/>
   </Params>
  </Definition>
 </Source>
 <Source name="PBblas.Constants" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl">
  <Definition body="291"
              end="1323"
              exported="1"
              fullname="PBblas.Constants"
              inherittype="local"
              line="5"
              name="Constants"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
              start="272">
   <Type>module</Type>
   <Definition body="324"
               end="332"
               exported="1"
               fullname="pbblas.constants.block_minimum"
               inherittype="local"
               line="6"
               name="Block_Minimum"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="301">
    <Type>attribute</Type>
   </Definition>
   <Definition body="388"
               end="396"
               exported="1"
               fullname="pbblas.constants.block_nosplit"
               inherittype="local"
               line="7"
               name="Block_NoSplit"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="365">
    <Type>attribute</Type>
   </Definition>
   <Definition body="456"
               end="466"
               exported="1"
               fullname="pbblas.constants.block_maximum"
               inherittype="local"
               line="8"
               name="Block_Maximum"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="433">
    <Type>attribute</Type>
   </Definition>
   <Definition body="520"
               end="527"
               exported="1"
               fullname="pbblas.constants.block_vec_rows"
               inherittype="local"
               line="9"
               name="Block_Vec_Rows"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="497">
    <Type>attribute</Type>
   </Definition>
   <Definition body="640"
               end="647"
               fullname="pbblas.constants.error_base"
               inherittype="local"
               line="12"
               name="Error_Base"
               shared="1"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="612">
    <Type>attribute</Type>
   </Definition>
   <Definition body="678"
               end="716"
               exported="1"
               fullname="pbblas.constants.dimension_incompat"
               inherittype="local"
               line="13"
               name="Dimension_Incompat"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="650">
    <Type>attribute</Type>
   </Definition>
   <Definition body="747"
               end="763"
               exported="1"
               fullname="pbblas.constants.dimension_incompatz"
               inherittype="local"
               line="14"
               name="Dimension_IncompatZ"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="719">
    <Type>attribute</Type>
   </Definition>
   <Definition body="794"
               end="830"
               exported="1"
               fullname="pbblas.constants.distribution_error"
               inherittype="local"
               line="15"
               name="Distribution_Error"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="766">
    <Type>attribute</Type>
   </Definition>
   <Definition body="861"
               end="877"
               exported="1"
               fullname="pbblas.constants.distribution_errorz"
               inherittype="local"
               line="16"
               name="Distribution_ErrorZ"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="833">
    <Type>attribute</Type>
   </Definition>
   <Definition body="908"
               end="932"
               exported="1"
               fullname="pbblas.constants.not_square"
               inherittype="local"
               line="17"
               name="Not_Square"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="880">
    <Type>attribute</Type>
   </Definition>
   <Definition body="963"
               end="979"
               exported="1"
               fullname="pbblas.constants.not_squarez"
               inherittype="local"
               line="18"
               name="Not_SquareZ"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="935">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1010"
               end="1054"
               exported="1"
               fullname="pbblas.constants.not_positivedef"
               inherittype="local"
               line="19"
               name="Not_PositiveDef"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="982">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1085"
               end="1101"
               exported="1"
               fullname="pbblas.constants.not_positivedefz"
               inherittype="local"
               line="20"
               name="Not_PositiveDefZ"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="1057">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1132"
               end="1164"
               exported="1"
               fullname="pbblas.constants.not_single_block"
               inherittype="local"
               line="21"
               name="Not_Single_Block"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="1104">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1195"
               end="1211"
               exported="1"
               fullname="pbblas.constants.not_single_blockz"
               inherittype="local"
               line="22"
               name="Not_Single_BlockZ"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="1167">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1242"
               end="1271"
               exported="1"
               fullname="pbblas.constants.not_block_vector"
               inherittype="local"
               line="23"
               name="Not_Block_Vector"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="1214">
    <Type>attribute</Type>
   </Definition>
   <Definition body="1302"
               end="1318"
               exported="1"
               fullname="pbblas.constants.not_block_vectorz"
               inherittype="local"
               line="24"
               name="Not_Block_VectorZ"
               source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Constants.ecl"
               start="1274">
    <Type>attribute</Type>
   </Definition>
   <Parents/>
  </Definition>
 </Source>
 <Source name="PBblas.Vector2Diag" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Vector2Diag.ecl">
  <Import body="0"
          end="27"
          fullname="PBblas.Types"
          inherittype="local"
          line="2"
          name="Types"
          ref="PBblas.Types"
          start="27">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="251"
          fullname="PBblas"
          inherittype="local"
          line="5"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="251">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="271"
          fullname="PBblas.internal"
          inherittype="local"
          line="6"
          name="int"
          ref="PBblas.internal"
          remotescope="1"
          start="271">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="322"
          fullname="PBblas.internal.Types"
          inherittype="local"
          line="8"
          name="iTypes"
          ref="PBblas.internal.Types"
          start="322">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="350"
          fullname="PBblas.internal.MatDims"
          inherittype="local"
          line="9"
          name="MatDims"
          ref="PBblas.internal.MatDims"
          start="350">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Module to calculate matrix dimensions and matrix partition dimensions from
  * matrix cells.
  *&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="371"
          fullname="PBblas.Constants"
          inherittype="local"
          line="10"
          name="Constants"
          ref="PBblas.Constants"
          start="371">
   <loc>loc</loc>
  </Import>
  <Definition body="167"
              end="186"
              fullname="pbblas.layout_cell"
              inherittype="local"
              line="6"
              name="Layout_Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
              start="152">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="379"
              end="398"
              fullname="pbblas.dimension_t"
              inherittype="local"
              line="11"
              name="dimension_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="364">
   <Type>attribute</Type>
  </Definition>
  <Definition body="414"
              end="429"
              fullname="pbblas.value_t"
              inherittype="local"
              line="12"
              name="value_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="399">
   <Type>attribute</Type>
  </Definition>
  <Definition body="480"
              end="500"
              fullname="pbblas.layout_dims"
              inherittype="local"
              line="14"
              name="Layout_Dims"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="465">
   <Type>record</Type>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="block_rows"/>
   <Field name="block_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Record format for matrix and matrix partition dimensions.  Each record describes
    * A single matrix or matrix partition.  Partitions use all of the fields, while
    * a non-partitioned matrix only uses the first two (i.e. m_rows and m_cols).
    * @field m_label A user provided label indicating to which matrix the dimensions
    *                apply, when used to describe a set of related matrixes (e.g.,
    *                &apos;A&apos;, &apos;B&apos;, and &apos;C&apos;) for the same work item used in an operation.
    * @field m_rows The number of rows in the full matrix
    * @field m_cols The number of colums in the full matrix
    * @field block_rows The number of rows in each partition of the matrix
    * @field block_cols The number of columns in each partition
    * @field row_blocks The number of row partitions in use for the matrix
    * @field col_blocks The number of column partitions in use for the matrix&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="1075"
              end="1532"
              exported="1"
              fullname="pbblas.vector2diag"
              inherittype="local"
              line="28"
              name="Vector2Diag"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Vector2Diag.ecl"
              start="1003">
   <Type>function</Type>
   <Documentation>
    <content>&#10;&#32;&#32;* Convert a vector into a diagonal matrix.  
  * The typical notation is D = diag(V).
  * The input X must be a 1 x N column vector or an N x 1 row vector.
  * The resulting matrix, in either case will be N x N, with zero everywhere
  * except the diagonal.
  *
  * @param X  A row or column vector (i.e. N x 1 or 1 x N) in Layout_Cell format
  * @return   An N x N matrix in Layout_Cell format
  * @see      PBblas/Types.Layout_cell&#10;&#32;&#32;</content>
   </Documentation>
   <Params>
    <Param name="X"/>
   </Params>
  </Definition>
 </Source>
 <Source name="PBblas.IElementFunc" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/IElementFunc.ecl">
  <Import body="0"
          end="251"
          fullname="PBblas"
          inherittype="local"
          line="5"
          name="PBBlas"
          ref="PBblas"
          remotescope="1"
          start="251">
   <loc>loc</loc>
  </Import>
  <Definition body="379"
              end="398"
              fullname="pbblas.dimension_t"
              inherittype="local"
              line="11"
              name="dimension_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="364">
   <Type>attribute</Type>
  </Definition>
  <Definition body="414"
              end="429"
              fullname="pbblas.value_t"
              inherittype="local"
              line="12"
              name="value_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="399">
   <Type>attribute</Type>
  </Definition>
  <Definition body="731"
              end="734"
              exported="1"
              fullname="pbblas.ielementfunc"
              inherittype="local"
              line="21"
              name="IElementFunc"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/IElementFunc.ecl"
              start="660">
   <Type>function</Type>
   <Documentation>
    <content>&#10;&#32;&#32;* Function prototype for a function to apply to each element of the 
  * distributed matrix
  *
  * Base your function on this prototype:
  * 
  * @param v   Input value
  * @param r   Row number (1 based)
  * @param c   Column number (1 based)
  * @return    Output value
  * @see       PBblas/Apply2Elements&#10;&#32;&#32;</content>
   </Documentation>
   <Params>
    <Param name="v"/>
    <Param name="r"/>
    <Param name="c"/>
   </Params>
  </Definition>
 </Source>
 <Source name="PBblas.Apply2Elements" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Apply2Elements.ecl">
  <Import body="0"
          end="27"
          fullname="PBblas.Types"
          inherittype="local"
          line="2"
          name="Types"
          ref="PBblas.Types"
          start="27">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="251"
          fullname="PBblas"
          inherittype="local"
          line="5"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="251">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="351"
          fullname="std.BLAS"
          inherittype="local"
          line="9"
          name="BLAS"
          ref="std.BLAS"
          start="351">
   <loc>loc</loc>
  </Import>
  <Definition body="167"
              end="186"
              fullname="pbblas.layout_cell"
              inherittype="local"
              line="6"
              name="Layout_Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
              start="152">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="409"
              end="430"
              fullname="pbblas.ielementfunc"
              inherittype="local"
              line="11"
              name="IElementFunc"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Apply2Elements.ecl"
              start="394">
   <Type>function</Type>
   <Documentation>
    <content>&#10;&#32;&#32;* Function prototype for a function to apply to each element of the 
  * distributed matrix
  *
  * Base your function on this prototype:
  * 
  * @param v   Input value
  * @param r   Row number (1 based)
  * @param c   Column number (1 based)
  * @return    Output value
  * @see       PBblas/Apply2Elements&#10;&#32;&#32;</content>
   </Documentation>
   <Params>
    <Param name="v"/>
    <Param name="r"/>
    <Param name="c"/>
   </Params>
  </Definition>
  <Definition body="439"
              end="465"
              fullname="pbblas.dim_t"
              inherittype="local"
              line="12"
              name="dim_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Apply2Elements.ecl"
              start="431">
   <Type>attribute</Type>
  </Definition>
  <Definition body="414"
              end="429"
              fullname="pbblas.value_t"
              inherittype="local"
              line="12"
              name="value_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="399">
   <Type>attribute</Type>
  </Definition>
  <Definition body="1108"
              end="1332"
              exported="1"
              fullname="pbblas.apply2elements"
              inherittype="local"
              line="27"
              name="Apply2Elements"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Apply2Elements.ecl"
              start="979">
   <Type>function</Type>
   <Documentation>
    <content>&#10;&#32;&#32;* Apply a function to each element of the matrix
  *
  * Use PBblas.IElementFunc as the prototype function.
  * Input and ouput may be a single matrix, or myriad matrixes with
  * different work item ids.
  * 
  * @param X       A matrix (or multiple matrices) in Layout_Cell form
  * @param f       A function based on the IElementFunc prototype
  * @return        A matrix (or multiple matrices) in Layout_Cell form
  * @see           PBblas/IElementFunc
  * @see           PBblas/Types.Layout_Cell&#10;&#32;&#32;</content>
   </Documentation>
   <Params>
    <Param name="X"/>
    <Param name="f"/>
   </Params>
  </Definition>
 </Source>
 <Source name="PBblas.axpy" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/axpy.ecl">
  <Import body="0"
          end="27"
          fullname="PBblas.Types"
          inherittype="local"
          line="2"
          name="Types"
          ref="PBblas.Types"
          start="27">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="251"
          fullname="PBblas"
          inherittype="local"
          line="5"
          name="PBBlas"
          ref="PBblas"
          remotescope="1"
          start="251">
   <loc>loc</loc>
  </Import>
  <Definition body="167"
              end="186"
              fullname="pbblas.layout_cell"
              inherittype="local"
              line="6"
              name="Layout_Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
              start="152">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="414"
              end="429"
              fullname="pbblas.value_t"
              inherittype="local"
              line="12"
              name="value_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="399">
   <Type>attribute</Type>
  </Definition>
  <Definition body="780"
              end="1297"
              exported="1"
              fullname="pbblas.axpy"
              inherittype="local"
              line="19"
              name="axpy"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/axpy.ecl"
              start="682">
   <Type>function</Type>
   <Documentation>
    <content>&#10;&#32;&#32;*  Implements  alpha*X  + Y
  *   X and Y must have same shape
  *
  *  @param alpha  Scalar multiplier for the X matrix
  *  @param X      X matrix in DATASET(Layout_Cell) form
  *  @param Y      Y matrix in DATASET(Layout_Call) form
  *  @return	   Matrix in DATASET(Layout_Cell) form
  *  @see		   PBblas/Types.layout_cell&#10;&#32;&#32;</content>
   </Documentation>
   <Params>
    <Param name="alpha"/>
    <Param name="X"/>
    <Param name="Y"/>
   </Params>
  </Definition>
 </Source>
 <Source name="PBblas.asum" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/asum.ecl">
  <Import body="0"
          end="27"
          fullname="PBblas.Types"
          inherittype="local"
          line="2"
          name="Types"
          ref="PBblas.Types"
          start="27">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="251"
          fullname="PBblas"
          inherittype="local"
          line="5"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="251">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="292"
          fullname="PBblas.internal"
          inherittype="local"
          line="7"
          name="int"
          ref="PBblas.internal"
          remotescope="1"
          start="292">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="322"
          fullname="PBblas.internal.Types"
          inherittype="local"
          line="8"
          name="iTypes"
          ref="PBblas.internal.Types"
          start="322">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Internal Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="351"
          fullname="std.BLAS"
          inherittype="local"
          line="9"
          name="BLAS"
          ref="std.BLAS"
          start="351">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="350"
          fullname="PBblas.internal.MatDims"
          inherittype="local"
          line="9"
          name="MatDims"
          ref="PBblas.internal.MatDims"
          start="350">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Module to calculate matrix dimensions and matrix partition dimensions from
  * matrix cells.
  *&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="388"
          fullname="PBblas.internal.Converted"
          inherittype="local"
          line="11"
          name="Converted"
          ref="PBblas.internal.Converted"
          start="388">
   <loc>loc</loc>
  </Import>
  <Definition body="167"
              end="186"
              fullname="pbblas.layout_cell"
              inherittype="local"
              line="6"
              name="Layout_Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/Converted.ecl"
              start="152">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="414"
              end="429"
              fullname="pbblas.value_t"
              inherittype="local"
              line="12"
              name="value_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="399">
   <Type>attribute</Type>
  </Definition>
  <Definition body="456"
              end="476"
              fullname="pbblas.layout_part"
              inherittype="local"
              line="13"
              name="Layout_Part"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="442">
   <Type>record</Type>
   <Field name="m_label"/>
   <Field name="wi_id"/>
   <Field name="partition_id"/>
   <Field name="node_id"/>
   <Field name="m_rows"/>
   <Field name="m_cols"/>
   <Field name="row_blocks"/>
   <Field name="col_blocks"/>
   <Field name="block_row"/>
   <Field name="block_col"/>
   <Field name="part_rows"/>
   <Field name="part_cols"/>
   <Field name="first_row"/>
   <Field name="first_col"/>
   <Field name="mat_part"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Alternate form for storage of large matrixes as a set of partitions
    * Each partition holds the dense form of a piece of the matrix (see matrix_t)
    * as well as information about its relationship to the larger matrix.
    * The full matrix is then carried as DATASET(Layout_Part).
    * Utility module Converted provides functions for converting a matrix in cell
    * form (see Layout_cell) to partitions and vice versa.
    * This form is primarily used internally to PBblas functions, but can also
    * be used as an intermediate form to avoid repeated conversions from cell
    * form.
    * A work-item id field allows multiple matrixes to be carried in the
    * same dataset.  This supports the &quot;myriad&quot; style interface whereby the
    * same operation can be performed on multiple sets of matrixes at once.
    * The m_label field allows for the separation of multiple matrixes with the
    * same wi_id for operations requiring multiple matrixes.  This allows
    * multiple work-items with multiple matrixes each to be carried in the same
    * dataset.

    * @field wi_id          Work Item Number -- An identifier from 1 to 64K-1 that
    *                         separates and identifies individual matrixes
    * @field m_label        A user provided label indicating to which matrix the dimensions
    *                       apply, when used to describe a set of related matrixes (e.g.,
    *                       &apos;A&apos;, &apos;B&apos;, and &apos;C&apos;) for the same work item used in an operation.    * @field partition_id	A unique ID for this partition within the matrix
    * @field partition_id   The 1-based id of this partition, unique within a work-item
    * @field node_id		The node on which this partition is stored
    * @field m_rows         The number of rows in the full matrix
    * @field m_cols         The number of columns in the full matrix
    * @field row_blocks     The number of row partitions in use
    * @field col_blocks     The number of column partitions in use
    * @field block_row		The row of this partition within the block partition matrix
    * @field block_col		The column of this partition &quot;
    * @field part_rows		The number of rows stored within this partition
    * @field part_cols		The number of columns stored within this partition
    * @field first_row		The first row of the original matrix stored within this
    *						partition
    * @field first_col		The first column of the original matrix stored within this
    *						partition
    * @field mat_part		The dense representation of the cells values within this
    *						partition (see matrix_t)
    * @see		matrix_t
    * @see		Layout_Cell
    * @see		Std/PBblas/Converted&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="486"
              end="505"
              fullname="pbblas.layout_norm"
              inherittype="local"
              line="14"
              name="Layout_Norm"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/asum.ecl"
              start="472">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Norm results.
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field v	    Real value for the norm&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="553"
              end="572"
              fullname="pbblas.work_item_t"
              inherittype="local"
              line="16"
              name="work_item_t"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/MatUtils.ecl"
              start="538">
   <Type>attribute</Type>
  </Definition>
  <Definition body="620"
              end="635"
              inherittype="local"
              line="18"
              name="OpType"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/gemm.ecl"
              start="611">
   <Type>attribute</Type>
  </Definition>
  <Definition body="907"
              end="1168"
              exported="1"
              fullname="pbblas.asum"
              inherittype="local"
              line="28"
              name="asum"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/PBblas/asum.ecl"
              start="848">
   <Type>function</Type>
   <Documentation>
    <content>&#10;&#32;&#32;* Absolute sum -- the &quot;Entrywise&quot; 1-norm
  *
  * Compute SUM(ABS(X))
  *
  * @param X    Matrix or set of matrices in Layout_Cell format
  * @return     DATASET(Layout_Norm) with one record per work item
  * @see        PBblas/Types.Layout_Cell&#10;&#32;&#32;</content>
   </Documentation>
   <Params>
    <Param name="X"/>
   </Params>
  </Definition>
 </Source>
 <Source name="IRLS.GetModel_global" sourcePath="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl">
  <Import body="0"
          end="7"
          fullname="_versions.ML_Core.V3_1_0.ML_Core"
          inherittype="local"
          line="1"
          name="ML_Core"
          ref="_versions.ML_Core.V3_1_0.ML_Core"
          remotescope="1"
          start="7">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="23"
          fullname="_versions.ML_Core.V3_1_0.ML_Core.Types"
          inherittype="local"
          line="2"
          name="Core_Types"
          ref="_versions.ML_Core.V3_1_0.ML_Core.Types"
          start="23">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="59"
          fullname="PBblas"
          inherittype="local"
          line="3"
          name="PBblas"
          ref="PBblas"
          remotescope="1"
          start="59">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="74"
          fullname="PBblas.Types"
          inherittype="local"
          line="4"
          name="PBblas_Types"
          ref="PBblas.Types"
          start="74">
   <loc>loc</loc>
   <Documentation>
    <content>&#10;&#32;&#32;* Types for the Parallel Block Basic Linear Algebra Sub-programs support
  * WARNING: attributes marked with WARNING can not be changed without making
  * corresponding changes to the C++ attributes.&#10;&#32;&#32;</content>
   </Documentation>
  </Import>
  <Import body="0"
          end="111"
          inherittype="local"
          line="5"
          name="LR"
          start="111">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="129"
          fullname="Constants"
          inherittype="local"
          line="6"
          name="Constants"
          ref="Constants"
          start="129">
   <loc>loc</loc>
  </Import>
  <Import body="0"
          end="150"
          fullname="Types"
          inherittype="local"
          line="7"
          name="Types"
          ref="Types"
          start="150">
   <loc>loc</loc>
  </Import>
  <Definition body="201"
              end="226"
              fullname="irls.numericfield"
              inherittype="local"
              line="9"
              name="NumericField"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="186">
   <Type>record</Type>
   <Field name="wi"/>
   <Field name="id"/>
   <Field name="number"/>
   <Field name="value"/>
  </Definition>
  <Definition body="242"
              end="268"
              fullname="irls.discretefield"
              inherittype="local"
              line="10"
              name="DiscreteField"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="227">
   <Type>record</Type>
   <Field name="wi"/>
   <Field name="id"/>
   <Field name="number"/>
   <Field name="value"/>
  </Definition>
  <Definition body="284"
              end="309"
              fullname="irls.layout_model"
              inherittype="local"
              line="11"
              name="Layout_Model"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="269">
   <Type>record</Type>
   <Field name="wi"/>
   <Field name="id"/>
   <Field name="number"/>
   <Field name="value"/>
  </Definition>
  <Definition body="325"
              end="349"
              fullname="irls.t_work_item"
              inherittype="local"
              line="12"
              name="t_work_item"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="310">
   <Type>attribute</Type>
  </Definition>
  <Definition body="365"
              end="388"
              fullname="irls.t_recordid"
              inherittype="local"
              line="13"
              name="t_RecordID"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="350">
   <Type>attribute</Type>
  </Definition>
  <Definition body="404"
              end="430"
              fullname="irls.t_fieldnumber"
              inherittype="local"
              line="14"
              name="t_FieldNumber"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="389">
   <Type>attribute</Type>
  </Definition>
  <Definition body="446"
              end="470"
              fullname="irls.t_fieldreal"
              inherittype="local"
              line="15"
              name="t_FieldReal"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="431">
   <Type>attribute</Type>
  </Definition>
  <Definition body="478"
              end="504"
              fullname="irls.cell"
              inherittype="local"
              line="16"
              name="Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="471">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Matrix Cell
    *
    * Main representation of Matrix cell at interface to all PBBlas functions.
    * Matrixes are represented as DATASET(Layout_Cell), where each cell describes
    * the row and column position of the cell as well as its value.
    * Only the non-zero cells need to be contained in the dataset in order
    * to describe the matrix since all unspecified cells are considered to
    * have a value of zero.
    * The cell also contains a work-item number that allows multiple separate
    * matrixes to be carried in the same dataset.  This supports the &quot;myriad&quot;
    * style interface that allows the same operations to be performed on many
    * different sets of data at once.
    * Note that these matrixes do not have an explicit size.  They are sized
    * implicitly, based on the maximum row and column presented in the data.
    * A matrix can be converted to an explicit dense form (see matrix_t) by 
    * using the utility module MakeR8Set. This module should only be used for known
    * small matrixes (&lt; 1M cells) or for partitions of a larger matrix.
    * The Converted module provides utility
    * functions to convert to and from a set of partitions (See Layout_parts).
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field x	    1-based row position within the matrix
    * @field y	    1-based column position within the matrix
    * @field v	    Real value for the cell
    * @see		    matrix_t
    * @see		    Std/PBblas/MakeR8Set.ecl
    * @see		    Std/PBblas/Converted.ecl
    *
    * WARNING: Used as C++ attribute.  Do not change without corresponding changes
    *  to MakeR8Set.&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="519"
              end="545"
              fullname="irls.layout_norm"
              inherittype="local"
              line="17"
              name="Layout_Norm"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="505">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="v"/>
   <Documentation>
    <content>&#10;&#32;&#32;&#32;&#32;* Layout for Norm results.
    *
    * @field wi_id  Work Item Number -- An identifier from 1 to 64K-1 that
    *                 separates and identifies individual matrixes
    * @field v	    Real value for the norm&#10;&#32;&#32;&#32;&#32;</content>
   </Documentation>
  </Definition>
  <Definition body="560"
              end="665"
              fullname="irls.ext_cell"
              inherittype="local"
              line="19"
              name="Ext_Cell"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="549">
   <Type>record</Type>
   <Field name="wi_id"/>
   <Field name="x"/>
   <Field name="y"/>
   <Field name="v"/>
   <Field name="max_delta"/>
   <Field name="correct"/>
   <Field name="incorrect"/>
   <Field name="iterations"/>
  </Definition>
  <Definition body="696"
              end="715"
              fullname="irls.bernoulli_ev"
              inherittype="local"
              line="25"
              name="Bernoulli_EV"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="666">
   <Type>function</Type>
   <Params>
    <Param name="v"/>
   </Params>
  </Definition>
  <Definition body="839"
              end="856"
              fullname="irls.u_i"
              inherittype="local"
              line="26"
              name="u_i"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="723">
   <Type>function</Type>
   <Params>
    <Param name="v"/>
    <Param name="r"/>
    <Param name="c"/>
   </Params>
  </Definition>
  <Definition body="980"
              end="1009"
              fullname="irls.w_i"
              inherittype="local"
              line="29"
              name="w_i"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="864">
   <Type>function</Type>
   <Params>
    <Param name="v"/>
    <Param name="r"/>
    <Param name="c"/>
   </Params>
  </Definition>
  <Definition body="1135"
              end="1143"
              fullname="irls.abs_v"
              inherittype="local"
              line="32"
              name="abs_v"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="1017">
   <Type>function</Type>
   <Params>
    <Param name="v"/>
    <Param name="r"/>
    <Param name="c"/>
   </Params>
  </Definition>
  <Definition body="1269"
              end="1287"
              fullname="irls.sig_v"
              inherittype="local"
              line="35"
              name="sig_v"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="1151">
   <Type>function</Type>
   <Params>
    <Param name="v"/>
    <Param name="r"/>
    <Param name="c"/>
   </Params>
  </Definition>
  <Definition body="2107"
              end="10770"
              exported="1"
              fullname="irls.getmodel_global"
              inherittype="local"
              line="49"
              name="GetModel_global"
              source="/media/sarthak/Data/ecldoc/testing/eclbundles/ml-bundles/LogisticRegression/IRLS/GetModel_global.ecl"
              start="1822">
   <Type>function</Type>
   <Documentation>
    <content>&#10;&#32;* Internal function to determine values for the model coefficients
 * and selected statistics from building the model.
 * @param independents the independent values
 * @param dependents the dependent values
 * @param max_iter maximum number of iterations to try
 * @param epsilon the minimum change in the Beta value estimate to continue
 * @param ridge a value to pupulate a diagonal matrix that is added to
 * a matrix help assure that the matrix is invertible.
 * @return coefficient matrix plus model building statistics&#10;&#32;</content>
   </Documentation>
   <Params>
    <Param name="independents"/>
    <Param name="dependents"/>
    <Param name="max_iter"/>
    <Param name="epsilon"/>
    <Param name="ridge"/>
   </Params>
  </Definition>
 </Source>
</Meta>
