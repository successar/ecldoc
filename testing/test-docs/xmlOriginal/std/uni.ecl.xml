<Meta>
 <Source name="std.Uni" sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl">
  <Definition body="289"
              end="17192"
              exported="1"
              fullname="std.Uni"
              inherit_type="local"
              line="7"
              name="Uni"
              source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
              start="276">
   <Type>module</Type>
   <Definition body="640"
               end="702"
               exported="1"
               fullname="std.uni.filterout"
               inherit_type="local"
               line="17"
               name="FilterOut"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="584">
    <Type>function</Type>
    <Documentation>
     <content>Returns the first string with all characters within the second string removed.</content>
     <see>Std.Uni.Filter</see>
     <param>src           The string that is being tested.</param>
     <param>filter        The string containing the set of characters to be excluded.</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="filter"/>
    </Params>
   </Definition>
   <Definition body="1050"
               end="1109"
               exported="1"
               fullname="std.uni.filter"
               inherit_type="local"
               line="28"
               name="Filter"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="997">
    <Type>function</Type>
    <Documentation>
     <content>Returns the first string with all characters not within the second string removed.</content>
     <see>Std.Uni.FilterOut</see>
     <param>src           The string that is being tested.</param>
     <param>filter        The string containing the set of characters to be included.</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="filter"/>
    </Params>
   </Definition>
   <Definition body="1664"
               end="1744"
               exported="1"
               fullname="std.uni.substituteincluded"
               inherit_type="local"
               line="42"
               name="SubstituteIncluded"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="1577">
    <Type>function</Type>
    <Documentation>
     <content>Returns the source string with the replacement character substituted for all characters included in the filter string. MORE: Should this be a general string substitution?</content>
     <see>Std.Uni.SubstituteOut</see>
     <param>src           The string that is being tested.</param>
     <param>filter        The string containing the set of characters to be included.</param>
     <param>replace_char  The character to be substituted into the result.</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="Filter"/>
     <Param name="replace_char"/>
    </Params>
   </Definition>
   <Definition body="2308"
               end="2385"
               exported="1"
               fullname="std.uni.substituteexcluded"
               inherit_type="local"
               line="56"
               name="SubstituteExcluded"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="2221">
    <Type>function</Type>
    <Documentation>
     <content>Returns the source string with the replacement character substituted for all characters not included in the filter string. MORE: Should this be a general string substitution?</content>
     <see>Std.Uni.SubstituteIncluded</see>
     <param>src           The string that is being tested.</param>
     <param>filter        The string containing the set of characters to be included.</param>
     <param>replace_char  The character to be substituted into the result.</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="Filter"/>
     <Param name="replace_char"/>
    </Params>
   </Definition>
   <Definition body="2875"
               end="2942"
               exported="1"
               fullname="std.uni.find"
               inherit_type="local"
               line="69"
               name="Find"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="2802">
    <Type>function</Type>
    <Documentation>
     <content>Returns the character position of the nth match of the search string with the first string. If no match is found the attribute returns 0. If an instance is omitted the position of the first instance is returned.</content>
     <param>src           The string that is searched</param>
     <param>sought        The string being sought.</param>
     <param>instance      Which match instance are we interested in?</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="sought"/>
     <Param name="instance"/>
    </Params>
   </Definition>
   <Definition body="3312"
               end="3466"
               exported="1"
               fullname="std.uni.findword"
               inherit_type="local"
               line="80"
               name="FindWord"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="3232">
    <Type>function</Type>
    <Documentation>
     <content>Tests if the search string contains the supplied word as a whole word.</content>
     <param>src           The string that is being tested.</param>
     <param>word          The word to be searched for.</param>
     <param>ignore_case   Whether to ignore differences in case between characters.</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="word"/>
     <Param name="ignore_case"/>
    </Params>
   </Definition>
   <Definition body="4047"
               end="4133"
               exported="1"
               fullname="std.uni.localefind"
               inherit_type="local"
               line="97"
               name="LocaleFind"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="3945">
    <Type>function</Type>
    <Documentation>
     <content>Returns the character position of the nth match of the search string with the first string. If no match is found the attribute returns 0. If an instance is omitted the position of the first instance is returned.</content>
     <param>src           The string that is searched</param>
     <param>sought        The string being sought.</param>
     <param>instance      Which match instance are we interested in?</param>
     <param>locale_name   The locale to use for the comparison</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="sought"/>
     <Param name="instance"/>
     <Param name="locale_name"/>
    </Params>
   </Definition>
   <Definition body="5372"
               end="5478"
               exported="1"
               fullname="std.uni.localefindatstrength"
               inherit_type="local"
               line="117"
               name="LocaleFindAtStrength"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="5241">
    <Type>function</Type>
    <Documentation>
     <content>Returns the character position of the nth match of the search string with the first string. If no match is found the attribute returns 0. If an instance is omitted the position of the first instance is returned.</content>
     <param>src           The string that is searched</param>
     <param>sought        The string being sought.</param>
     <param>instance      Which match instance are we interested in?</param>
     <param>locale_name   The locale to use for the comparison</param>
     <param>strength      The strength of the comparison 1 ignores accents and case, differentiating only between letters 2 ignores case but differentiates between accents. 3 differentiates between accents and case but ignores e.g. differences between Hiragana and Katakana 4 differentiates between accents and case and e.g. Hiragana/Katakana, but ignores e.g. Hebrew cantellation marks 5 differentiates between all strings whose canonically decomposed forms (NFDï¿½Normalization Form D) are non-identical</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="tofind"/>
     <Param name="instance"/>
     <Param name="locale_name"/>
     <Param name="strength"/>
    </Params>
   </Definition>
   <Definition body="5750"
               end="5812"
               exported="1"
               fullname="std.uni.extract"
               inherit_type="local"
               line="127"
               name="Extract"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="5692">
    <Type>function</Type>
    <Documentation>
     <content>Returns the nth element from a comma separated string.</content>
     <param>src           The string containing the comma separated list.</param>
     <param>instance      Which item to select from the list.</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="instance"/>
    </Params>
   </Definition>
   <Definition body="6024"
               end="6080"
               exported="1"
               fullname="std.uni.tolowercase"
               inherit_type="local"
               line="136"
               name="ToLowerCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="5982">
    <Type>function</Type>
    <Documentation>
     <content>Returns the argument string with all upper case characters converted to lower case.</content>
     <param>src           The string that is being converted.</param>
    </Documentation>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Definition body="6291"
               end="6347"
               exported="1"
               fullname="std.uni.touppercase"
               inherit_type="local"
               line="145"
               name="ToUpperCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="6249">
    <Type>function</Type>
    <Documentation>
     <content>Return the argument string with all lower case characters converted to upper case.</content>
     <param>src           The string that is being converted.</param>
    </Documentation>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Definition body="6623"
               end="6680"
               exported="1"
               fullname="std.uni.totitlecase"
               inherit_type="local"
               line="155"
               name="ToTitleCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="6581">
    <Type>function</Type>
    <Documentation>
     <content>Returns the upper case variant of the string using the rules for a particular locale.</content>
     <param>src           The string that is being converted.</param>
     <param>locale_name   The locale to use for the comparison</param>
    </Documentation>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Definition body="6985"
               end="7060"
               exported="1"
               fullname="std.uni.localetolowercase"
               inherit_type="local"
               line="165"
               name="LocaleToLowerCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="6914">
    <Type>function</Type>
    <Documentation>
     <content>Returns the lower case variant of the string using the rules for a particular locale.</content>
     <param>src           The string that is being converted.</param>
     <param>locale_name   The locale to use for the comparison</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="locale_name"/>
    </Params>
   </Definition>
   <Definition body="7365"
               end="7440"
               exported="1"
               fullname="std.uni.localetouppercase"
               inherit_type="local"
               line="175"
               name="LocaleToUpperCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="7294">
    <Type>function</Type>
    <Documentation>
     <content>Returns the upper case variant of the string using the rules for a particular locale.</content>
     <param>src           The string that is being converted.</param>
     <param>locale_name   The locale to use for the comparison</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="locale_name"/>
    </Params>
   </Definition>
   <Definition body="7745"
               end="7821"
               exported="1"
               fullname="std.uni.localetotitlecase"
               inherit_type="local"
               line="185"
               name="LocaleToTitleCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="7674">
    <Type>function</Type>
    <Documentation>
     <content>Returns the upper case variant of the string using the rules for a particular locale.</content>
     <param>src           The string that is being converted.</param>
     <param>locale_name   The locale to use for the comparison</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="locale_name"/>
    </Params>
   </Definition>
   <Definition body="8164"
               end="8233"
               exported="1"
               fullname="std.uni.compareignorecase"
               inherit_type="local"
               line="196"
               name="CompareIgnoreCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="8100">
    <Type>function</Type>
    <Documentation>
     <content>Compares the two strings case insensitively.  Equivalent to comparing at strength 2.</content>
     <see>Std.Uni.CompareAtStrength</see>
     <param>src1          The first string to be compared.</param>
     <param>src2          The second string to be compared.</param>
    </Documentation>
    <Params>
     <Param name="src1"/>
     <Param name="src2"/>
    </Params>
   </Definition>
   <Definition body="9224"
               end="9303"
               exported="1"
               fullname="std.uni.compareatstrength"
               inherit_type="local"
               line="213"
               name="CompareAtStrength"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="9141">
    <Type>function</Type>
    <Documentation>
     <content>Compares the two strings case insensitively.  Equivalent to comparing at strength 2.</content>
     <see>Std.Uni.CompareAtStrength</see>
     <param>src1          The first string to be compared.</param>
     <param>src2          The second string to be compared.</param>
     <param>strength      The strength of the comparison 1 ignores accents and case, differentiating only between letters 2 ignores case but differentiates between accents. 3 differentiates between accents and case but ignores e.g. differences between Hiragana and Katakana 4 differentiates between accents and case and e.g. Hiragana/Katakana, but ignores e.g. Hebrew cantellation marks 5 differentiates between all strings whose canonically decomposed forms (NFDï¿½Normalization Form D) are non-identical</param>
    </Documentation>
    <Params>
     <Param name="src1"/>
     <Param name="src2"/>
     <Param name="strength"/>
    </Params>
   </Definition>
   <Definition body="9737"
               end="9825"
               exported="1"
               fullname="std.uni.localecompareignorecase"
               inherit_type="local"
               line="225"
               name="LocaleCompareIgnoreCase"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="9644">
    <Type>function</Type>
    <Documentation>
     <content>Compares the two strings case insensitively.  Equivalent to comparing at strength 2.</content>
     <see>Std.Uni.CompareAtStrength</see>
     <param>src1          The first string to be compared.</param>
     <param>src2          The second string to be compared.</param>
     <param>locale_name   The locale to use for the comparison</param>
    </Documentation>
    <Params>
     <Param name="src1"/>
     <Param name="src2"/>
     <Param name="locale_name"/>
    </Params>
   </Definition>
   <Definition body="10855"
               end="10953"
               exported="1"
               fullname="std.uni.localecompareatstrength"
               inherit_type="local"
               line="242"
               name="LocaleCompareAtStrength"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="10743">
    <Type>function</Type>
    <Documentation>
     <content>Compares the two strings case insensitively.  Equivalent to comparing at strength 2.</content>
     <param>src1          The first string to be compared.</param>
     <param>src2          The second string to be compared.</param>
     <param>locale_name   The locale to use for the comparison</param>
     <param>strength      The strength of the comparison 1 ignores accents and case, differentiating only between letters 2 ignores case but differentiates between accents. 3 differentiates between accents and case but ignores e.g. differences between Hiragana and Katakana 4 differentiates between accents and case and e.g. Hiragana/Katakana, but ignores e.g. Hebrew cantellation marks 5 differentiates between all strings whose canonically decomposed forms (NFDï¿½Normalization Form D) are non-identical</param>
    </Documentation>
    <Params>
     <Param name="src1"/>
     <Param name="src2"/>
     <Param name="locale_name"/>
     <Param name="strength"/>
    </Params>
   </Definition>
   <Definition body="11202"
               end="11254"
               exported="1"
               fullname="std.uni.reverse"
               inherit_type="local"
               line="252"
               name="Reverse"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="11164">
    <Type>function</Type>
    <Documentation>
     <content>Returns the argument string with all characters in reverse order. Note the argument is not TRIMMED before it is reversed.</content>
     <param>src           The string that is being reversed.</param>
    </Documentation>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Definition body="11650"
               end="11727"
               exported="1"
               fullname="std.uni.findreplace"
               inherit_type="local"
               line="263"
               name="FindReplace"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="11571">
    <Type>function</Type>
    <Documentation>
     <content>Returns the source string with the replacement string substituted for all instances of the search string.</content>
     <param>src           The string that is being transformed.</param>
     <param>sought        The string to be replaced.</param>
     <param>replacement   The string to be substituted into the result.</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="sought"/>
     <Param name="replacement"/>
    </Params>
   </Definition>
   <Definition body="12214"
               end="12310"
               exported="1"
               fullname="std.uni.localefindreplace"
               inherit_type="local"
               line="275"
               name="LocaleFindReplace"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="12106">
    <Type>function</Type>
    <Documentation>
     <content>Returns the source string with the replacement string substituted for all instances of the search string.</content>
     <param>src           The string that is being transformed.</param>
     <param>sought        The string to be replaced.</param>
     <param>replacement   The string to be substituted into the result.</param>
     <param>locale_name   The locale to use for the comparison</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="sought"/>
     <Param name="replacement"/>
     <Param name="locale_name"/>
    </Params>
   </Definition>
   <Definition body="12882"
               end="12998"
               exported="1"
               fullname="std.uni.localefindatstrengthreplace"
               inherit_type="local"
               line="288"
               name="LocaleFindAtStrengthReplace"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="12745">
    <Type>function</Type>
    <Documentation>
     <content>Returns the source string with the replacement string substituted for all instances of the search string.</content>
     <param>src           The string that is being transformed.</param>
     <param>sought        The string to be replaced.</param>
     <param>replacement   The string to be substituted into the result.</param>
     <param>locale_name   The locale to use for the comparison</param>
     <param>strength      The strength of the comparison</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="sought"/>
     <Param name="replacement"/>
     <Param name="locale_name"/>
     <Param name="strength"/>
    </Params>
   </Definition>
   <Definition body="13210"
               end="13267"
               exported="1"
               fullname="std.uni.cleanaccents"
               inherit_type="local"
               line="297"
               name="CleanAccents"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="13167">
    <Type>function</Type>
    <Documentation>
     <content>Returns the source string with all accented characters replaced with unaccented.</content>
     <param>src           The string that is being transformed.</param>
    </Documentation>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Definition body="13627"
               end="13683"
               exported="1"
               fullname="std.uni.cleanspaces"
               inherit_type="local"
               line="308"
               name="CleanSpaces"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="13585">
    <Type>function</Type>
    <Documentation>
     <content>Returns the source string with all instances of multiple adjacent space characters (2 or more spaces together) reduced to a single space character.  Leading and trailing spaces are removed, and tab characters are converted to spaces.</content>
     <param>src           The string to be cleaned.</param>
    </Documentation>
    <Params>
     <Param name="src"/>
    </Params>
   </Definition>
   <Definition body="14118"
               end="14191"
               exported="1"
               fullname="std.uni.wildmatch"
               inherit_type="local"
               line="320"
               name="WildMatch"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="14043">
    <Type>function</Type>
    <Documentation>
     <content>Tests if the search string matches the pattern. The pattern can contain wildcards &apos;?&apos; (single character) and &apos;*&apos; (multiple character).</content>
     <param>src           The string that is being tested.</param>
     <param>pattern       The pattern to match against.</param>
     <param>ignore_case   Whether to ignore differences in case between characters</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="_pattern"/>
     <Param name="_noCase"/>
    </Params>
   </Definition>
   <Definition body="14678"
               end="14750"
               exported="1"
               fullname="std.uni.contains"
               inherit_type="local"
               line="332"
               name="Contains"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="14604">
    <Type>function</Type>
    <Documentation>
     <content>Tests if the search string contains each of the characters in the pattern. If the pattern contains duplicate characters those characters will match once for each occurence in the pattern.</content>
     <param>src           The string that is being tested.</param>
     <param>pattern       The pattern to match against.</param>
     <param>ignore_case   Whether to ignore differences in case between characters</param>
    </Documentation>
    <Params>
     <Param name="src"/>
     <Param name="_pattern"/>
     <Param name="_noCase"/>
    </Params>
   </Definition>
   <Definition body="15300"
               end="15385"
               exported="1"
               fullname="std.uni.editdistance"
               inherit_type="local"
               line="345"
               name="EditDistance"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="15210">
    <Type>function</Type>
    <Documentation>
     <content>Returns the minimum edit distance between the two strings.  An insert change or delete counts as a single edit. The two strings are trimmed before comparing.</content>
     <return>The minimum edit distance between the two strings.</return>
     <param>_left         The first string to be compared.</param>
     <param>_right        The second string to be compared.</param>
     <param>localname     The locale to use for the comparison.  Defaults to &apos;&apos;.</param>
    </Documentation>
    <Params>
     <Param name="_left"/>
     <Param name="_right"/>
     <Param name="localename"/>
    </Params>
   </Definition>
   <Definition body="16039"
               end="16144"
               exported="1"
               fullname="std.uni.editdistancewithinradius"
               inherit_type="local"
               line="359"
               name="EditDistanceWithinRadius"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="15921">
    <Type>function</Type>
    <Documentation>
     <content>Returns true if the minimum edit distance between the two strings is with a specific range. The two strings are trimmed before comparing.</content>
     <return>Whether or not the two strings are within the given specified edit distance.</return>
     <param>_left         The first string to be compared.</param>
     <param>_right        The second string to be compared.</param>
     <param>radius        The maximum edit distance that is accepable.</param>
     <param>localname     The locale to use for the comparison.  Defaults to &apos;&apos;.</param>
    </Documentation>
    <Params>
     <Param name="_left"/>
     <Param name="_right"/>
     <Param name="radius"/>
     <Param name="localename"/>
    </Params>
   </Definition>
   <Definition body="16548"
               end="16621"
               exported="1"
               fullname="std.uni.wordcount"
               inherit_type="local"
               line="370"
               name="WordCount"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="16478">
    <Type>function</Type>
    <Documentation>
     <content>Returns the number of words in the string.  Word boundaries are marked by the unicode break semantics.</content>
     <return>The number of words in the string.</return>
     <param>text          The string to be broken into words.</param>
     <param>localname     The locale to use for the break semantics.  Defaults to &apos;&apos;.</param>
    </Documentation>
    <Params>
     <Param name="text"/>
     <Param name="localename"/>
    </Params>
   </Definition>
   <Definition body="17107"
               end="17184"
               exported="1"
               fullname="std.uni.getnthword"
               inherit_type="local"
               line="382"
               name="GetNthWord"
               source="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Uni.ecl"
               start="17025">
    <Type>function</Type>
    <Documentation>
     <content>Returns the n-th word from the string.  Word boundaries are marked by the unicode break semantics.</content>
     <return>The number of words in the string.</return>
     <param>text          The string to be broken into words.</param>
     <param>n             Which word should be returned from the function.</param>
     <param>localname     The locale to use for the break semantics.  Defaults to &apos;&apos;.</param>
    </Documentation>
    <Params>
     <Param name="text"/>
     <Param name="n"/>
     <Param name="localename"/>
    </Params>
   </Definition>
   <Parents/>
  </Definition>
  <Import body="0"
          end="257"
          fullname="lib_unicodelib"
          inherit_type="local"
          line="5"
          name="lib_unicodelib"
          ref="lib_unicodelib"
          remotescope="1"
          start="257">
   <Type>attribute</Type>
  </Import>
 </Source>
 <Source sourcePath="lib_unicodelib"/>
</Meta>
