<Meta>
 <Source name="str" sourcePath="/media/sarthak/Data/ecldoc/testing/test/str.ecl">
  <Definition body="251"
              end="962"
              inherit_type="local"
              line="6"
              name="rtl"
              source="/media/sarthak/Data/ecldoc/testing/test/str.ecl"
              start="245">
   <Type>module</Type>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="infinity"
               inherit_type="local"
               line="8"
               name="Infinity"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="nan"
               inherit_type="local"
               line="9"
               name="Nan"
               start="0">
    <Type>function</Type>
    <Params/>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="isinfinite"
               inherit_type="local"
               line="10"
               name="IsInfinite"
               start="0">
    <Type>function</Type>
    <Params>
     <Param name="value"/>
    </Params>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="isnan"
               inherit_type="local"
               line="11"
               name="IsNaN"
               start="0">
    <Type>function</Type>
    <Params>
     <Param name="value"/>
    </Params>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="isfinite"
               inherit_type="local"
               line="12"
               name="IsFinite"
               start="0">
    <Type>function</Type>
    <Params>
     <Param name="value"/>
    </Params>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="fmod"
               inherit_type="local"
               line="13"
               name="fmod"
               start="0">
    <Type>function</Type>
    <Params>
     <Param name="numer"/>
     <Param name="denom"/>
     <Param name="dbz"/>
    </Params>
   </Definition>
   <Definition body="0"
               end="0"
               exported="1"
               fullname="fmatch"
               inherit_type="local"
               line="14"
               name="fmatch"
               start="0">
    <Type>function</Type>
    <Params>
     <Param name="a"/>
     <Param name="b"/>
     <Param name="epsilon"/>
    </Params>
   </Definition>
   <Parents/>
  </Definition>
  <Definition body="977"
              end="2549"
              exported="1"
              fullname="Str"
              inherit_type="local"
              line="17"
              name="Str"
              source="/media/sarthak/Data/ecldoc/testing/test/str.ecl"
              start="964">
   <Type>module</Type>
   <Definition body="1057"
               end="1073"
               exported="1"
               fullname="str.infinity"
               inherit_type="local"
               line="24"
               name="Infinity"
               source="/media/sarthak/Data/ecldoc/testing/test/str.ecl"
               start="1033">
    <Type>attribute</Type>
    <Documentation>
     <content>Return a real &quot;infinity&quot; value.</content>
    </Documentation>
   </Definition>
   <Definition body="1158"
               end="1169"
               exported="1"
               fullname="str.nan"
               inherit_type="local"
               line="31"
               name="NaN"
               source="/media/sarthak/Data/ecldoc/testing/test/str.ecl"
               start="1139">
    <Type>attribute</Type>
    <Documentation>
     <content>Return a non-signalling NaN (Not a Number)value.</content>
    </Documentation>
   </Definition>
   <Definition body="1332"
               end="1353"
               exported="1"
               fullname="str.isinfinite"
               inherit_type="local"
               line="39"
               name="isInfinite"
               source="/media/sarthak/Data/ecldoc/testing/test/str.ecl"
               start="1293">
    <Type>function</Type>
    <Documentation>
     <content>Return whether a real value is infinite (positive or negative).</content>
     <param>val           The value to test.</param>
    </Documentation>
    <Params>
     <Param name="val"/>
    </Params>
   </Definition>
   <Definition body="1506"
               end="1522"
               exported="1"
               fullname="str.isnan"
               inherit_type="local"
               line="47"
               name="isNaN"
               source="/media/sarthak/Data/ecldoc/testing/test/str.ecl"
               start="1472">
    <Type>function</Type>
    <Documentation>
     <content>Return whether a real value is a NaN (not a number) value.</content>
     <param>val           The value to test.</param>
    </Documentation>
    <Params>
     <Param name="val"/>
    </Params>
   </Definition>
   <Definition body="1692"
               end="1711"
               exported="1"
               fullname="str.isfinite"
               inherit_type="local"
               line="55"
               name="isFinite"
               source="/media/sarthak/Data/ecldoc/testing/test/str.ecl"
               start="1655">
    <Type>function</Type>
    <Documentation>
     <content>Return whether a real value is a valid value (neither infinite not NaN).</content>
     <param>val           The value to test.</param>
    </Documentation>
    <Params>
     <Param name="val"/>
    </Params>
   </Definition>
   <Definition body="2113"
               end="2218"
               exported="1"
               fullname="str.fmod"
               inherit_type="local"
               line="68"
               name="FMod"
               source="/media/sarthak/Data/ecldoc/testing/test/str.ecl"
               start="2067">
    <Type>function</Type>
    <Documentation>
     <content>Returns the floating-point remainder of numer/denom (rounded towards zero). If denom is zero, the result depends on the -fdivideByZero flag: &apos;zero&apos; or unset: return zero. &apos;nan&apos;: return a non-signalling NaN value &apos;fail&apos;: throw an exception</content>
     <param>numer           The numerator.</param>
     <param>denom           The numerator.</param>
    </Documentation>
    <Params>
     <Param name="numer"/>
     <Param name="denom"/>
    </Params>
   </Definition>
   <Definition body="2516"
               end="2543"
               exported="1"
               fullname="str.fmatch"
               inherit_type="local"
               line="83"
               name="FMatch"
               source="/media/sarthak/Data/ecldoc/testing/test/str.ecl"
               start="2455">
    <Type>function</Type>
    <Documentation>
     <content>Returns whether two floating point values are the same, within margin of error epsilon.</content>
     <param>a           The first value.</param>
     <param>b           The second value.</param>
     <param>epsilon     The allowable margin of error.</param>
    </Documentation>
    <Params>
     <Param name="a"/>
     <Param name="b"/>
     <Param name="epsilon"/>
    </Params>
   </Definition>
   <Parents/>
  </Definition>
 </Source>
</Meta>
