<?xml version='1.0' encoding='UTF-8'?>
<Meta>
 <Source name="Math" sourcePath="/media/sarthak/Data/ecldoc/testing/test/Math.ecl" target="Math.ecl.xml">
  <Definition body="978" end="2550" exported="1" fullname="Math" inherittype="local" line="17" name="Math" start="964">
   <Type>module</Type>
   <Definition body="1058" end="1074" exported="1" fullname="math.infinity" inherittype="local" line="24" name="Infinity" start="1034">
    <Type>attribute</Type>
    <Signature name="Infinity" ret="REAL8" param="" hlen="14">REAL8 Infinity</Signature><Documentation>
     <content>Return a real "infinity" value.</content><firstline>Return a real "infinity" value</firstline></Documentation>
   </Definition>
   <Definition body="1159" end="1170" exported="1" fullname="math.nan" inherittype="local" line="31" name="NaN" start="1140">
    <Type>attribute</Type>
    <Signature name="NaN" ret="REAL8" param="" hlen="9">REAL8 NaN</Signature><Documentation>
     <content>Return a non-signalling NaN (Not a Number)value.</content><firstline>Return a non-signalling NaN (Not a Number)value</firstline></Documentation>
   </Definition>
   <Definition body="1333" end="1354" exported="1" fullname="math.isinfinite" inherittype="local" line="39" name="isInfinite" start="1294">
    <Type>function</Type>
    <Documentation>
     <param><name>val</name><desc>The value to test.</desc></param><content>Return whether a real value is infinite (positive or negative).</content><firstline>Return whether a real value is infinite (positive or negative)</firstline></Documentation>
    <Signature name="isInfinite" ret="BOOLEAN" param="(REAL8 val)" hlen="18">BOOLEAN isInfinite(REAL8 val)</Signature><Params>
     <Param name="val"/>
    </Params>
   </Definition>
   <Definition body="1507" end="1523" exported="1" fullname="math.isnan" inherittype="local" line="47" name="isNaN" start="1473">
    <Type>function</Type>
    <Documentation>
     <param><name>val</name><desc>The value to test.</desc></param><content>Return whether a real value is a NaN (not a number) value.</content><firstline>Return whether a real value is a NaN (not a number) value</firstline></Documentation>
    <Signature name="isNaN" ret="BOOLEAN" param="(REAL8 val)" hlen="13">BOOLEAN isNaN(REAL8 val)</Signature><Params>
     <Param name="val"/>
    </Params>
   </Definition>
   <Definition body="1693" end="1712" exported="1" fullname="math.isfinite" inherittype="local" line="55" name="isFinite" start="1656">
    <Type>function</Type>
    <Documentation>
     <param><name>val</name><desc>The value to test.</desc></param><content>Return whether a real value is a valid value (neither infinite not NaN).</content><firstline>Return whether a real value is a valid value (neither infinite not NaN)</firstline></Documentation>
    <Signature name="isFinite" ret="BOOLEAN" param="(REAL8 val)" hlen="16">BOOLEAN isFinite(REAL8 val)</Signature><Params>
     <Param name="val"/>
    </Params>
   </Definition>
   <Definition body="2114" end="2219" exported="1" fullname="math.fmod" inherittype="local" line="68" name="FMod" start="2068">
    <Type>function</Type>
    <Documentation>
     <param><name>numer</name><desc>The numerator.</desc></param><param><name>denom</name><desc>The numerator.</desc></param><content>Returns the floating-point remainder of numer/denom (rounded towards zero). If denom is zero, the result depends on the -fdivideByZero flag: 'zero' or unset: return zero. 'nan': return a non-signalling NaN value 'fail': throw an exception</content><firstline>Returns the floating-point remainder of numer/denom (rounded towards zero)</firstline></Documentation>
    <Signature name="FMod" ret="REAL8" param="(REAL8 numer, REAL8 denom)" hlen="10">REAL8 FMod(REAL8 numer, REAL8 denom)</Signature><Params>
     <Param name="numer"/>
     <Param name="denom"/>
    </Params>
   </Definition>
   <Definition body="2517" end="2544" exported="1" fullname="math.fmatch" inherittype="local" line="83" name="FMatch" start="2456">
    <Type>function</Type>
    <Documentation>
     <param><name>a</name><desc>The first value.</desc></param><param><name>b</name><desc>The second value.</desc></param><param><name>epsilon</name><desc>The allowable margin of error.</desc></param><content>Returns whether two floating point values are the same, within margin of error epsilon.</content><firstline>Returns whether two floating point values are the same, within margin of error epsilon</firstline></Documentation>
    <Signature name="FMatch" ret="BOOLEAN" param="(REAL8 a, REAL8 b, REAL8 epsilon=0.0)" hlen="14">BOOLEAN FMatch(REAL8 a, REAL8 b, REAL8 epsilon=0.0)</Signature><Params>
     <Param name="a"/>
     <Param name="b"/>
     <Param name="epsilon"/>
    </Params>
   </Definition>
   <Signature name="Math" ret="" param="" hlen="4">Math</Signature><Parents/>
  </Definition>
 <Documentation><content> </content></Documentation></Source>
</Meta>