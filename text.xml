<EXPORT> <COMMENT> <DESC> My module provides a module to perform important calculations. My comments are not very well formatted but the documentation formatter should take care of that. </DESC><PARAM> first_number The first number can do many things depending on the context. Good thing the formatter will clean this up </PARAM><RETURN> The answer you are looking for. </RETURN> </COMMENT>
 <ARGS> NeuralNetworks (DATASET(Types.DiscreteField) net,UNSIGNED4 prows=0, UNSIGNED4 pcols=0, UNSIGNED4 Maxrows=0, UNSIGNED4 Maxcols=0) </ARGS> <START> MODULE </START> <EXPORT> <ARGS> IntBias </ARGS> <START> FUNCTION </START> <SHARED></SHARED>
<SHARED></SHARED>
</EXPORT>
<EXPORT> <ARGS> IntWeights </ARGS> <START> FUNCTION </START> <SHARED></SHARED>
<SHARED></SHARED>
<SHARED></SHARED>
</EXPORT>
<EXPORT> <ARGS> Model(DATASET(Types.NumericField) mod) </ARGS> <START> FUNCTION </START> </EXPORT>
<EXPORT> <COMMENT> <DESC> A very useful function </DESC><PARAM> a_number the first parameter </PARAM><PARAM> a_string the second parameter </PARAM><RETURN> the definitive answer. </RETURN> </COMMENT>
 <ARGS> ExtractWeights (DATASET(Types.NumericField) mod) </ARGS> <START> FUNCTION </START> </EXPORT>
<EXPORT> <ARGS> ExtractBias (DATASET(Types.NumericField) mod) </ARGS> <START> FUNCTION </START> <SHARED></SHARED>
</EXPORT>
<SHARED></SHARED>
<EXPORT> <ARGS> NNLearn(DATASET(Types.NumericField) Indep, DATASET(Types.NumericField) Dep,DATASET(Mat.Types.MUElement) IntW, DATASET(Mat.Types.MUElement) Intb, REAL8 LAMBDA=0.001, REAL8 ALPHA=0.1, UNSIGNED2 MaxIter=100) </ARGS> <ATTR> BP(Indep,Dep, IntW, Intb, LAMBDA, ALPHA, MaxIter).mod</ATTR> </EXPORT>
<EXPORT> <ARGS> NNOutput(DATASET(Types.NumericField) Indep,DATASET(Types.NumericField) Learntmod) </ARGS> <START> FUNCTION </START> <SHARED></SHARED>
<SHARED></SHARED>
<SHARED></SHARED>
</EXPORT>
<EXPORT> <ARGS> NNClassify(DATASET(Types.NumericField) Indep,DATASET(Types.NumericField) Learntmod) </ARGS> <START> FUNCTION </START> <SHARED></SHARED>
<SHARED></SHARED>
</EXPORT>
</EXPORT>

